{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/Maps.vue?5831","webpack:///./src/physics/units/Pressure.ts","webpack:///./src/views/TurbineMap.vue?d2f2","webpack:///./src/views/EngineMap.vue?2929","webpack:///./src/physics/units/Volume.ts","webpack:///./src/physics/constants.ts","webpack:///./src/views/EngineMapPoints.vue?8317","webpack:///./src/physics/units/index.ts","webpack:///./src/App.vue?9b0a","webpack:///./src/physics/units/Airflow.ts","webpack:///./src/App.vue","webpack:///./src/App.vue?72a1","webpack:///./src/views/Home.vue","webpack:///./src/store/external-map.ts","webpack:///./src/store/grid.ts","webpack:///./src/store/engine-map.ts","webpack:///./src/views/Maps.vue","webpack:///./src/views/Grid.vue","webpack:///./src/views/graphics.ts","webpack:///./src/views/grid-watchers.ts","webpack:///./src/views/Grid.vue?031a","webpack:///./src/views/Grid.vue?3c29","webpack:///./src/views/EngineMap.vue","webpack:///./src/physics/calculations.ts","webpack:///./src/views/mouse-control.ts","webpack:///./src/views/EngineMap.vue?4439","webpack:///./src/views/EngineMap.vue?9317","webpack:///./src/views/MapImage.vue","webpack:///./src/views/MapImage.vue?ec5a","webpack:///./src/views/MapImage.vue?adf3","webpack:///./src/views/TurbineMap.vue","webpack:///./src/store/turbine-model.ts","webpack:///./src/views/TurbineMap.vue?f889","webpack:///./src/views/TurbineMap.vue?c47d","webpack:///./src/views/Maps.vue?2b15","webpack:///./src/views/Maps.vue?cc93","webpack:///./src/views/EngineMapPoints.vue","webpack:///./src/views/EngineMapPoints.vue?90d5","webpack:///./src/views/EngineMapPoints.vue?7f1a","webpack:///./src/views/MapScaleControls.vue","webpack:///./src/views/MapScaleControls.vue?a3ed","webpack:///./src/views/MapScaleControls.vue?69fb","webpack:///./src/views/Home.vue?5ba0","webpack:///./src/views/Home.vue?f4ee","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/views/Home.vue?194a","webpack:///./src/physics/units/Temperature.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","PressureUnit","Pressure","unit","Pa","_pa","_kpa","_bar","_mbar","_psi","this","ambient","SI","ratio","another","kPa","bar","mbar","psi","VolumeUnit","Volume","m3","_cc","_m3","cc","AIR_SPECIFIC_GAS_CONSTANT","ABSOLUTE_ZERO_CELSIUS","LBS_PER_KG","PA_PER_PSI","MassAirflowUnits","convertToLbsMin","input","convertToKgS","MassAirflow","units","kgs","_gs","_kgs","_lbsmin","Math","round","gs","lbsmin","inputType","outputType","script","render","class","for","id","airflowUnits","type","minAirflow","step","airflowUnitStep","maxAirflow","airflowInterval","minPressureRatio","maxPressureRatio","pressureRatioStep","map-name","ExternalMap","Compressor","engineDisplacement","ambientAirTemperature","ambientAirPressure","Turbine","style","NAMESPACE","namespaced","map","store","getters","set","commit","externalMap","state","hScale","hOffset","vScale","vOffset","maps","mutations","grid","compressorGrid","minX","maxX","xStep","minY","maxY","yStep","turbineGrid","buildMapPointsGetter","buildMapPointInserter","point","dispatch","buildMapPointRemover","buildMapPointModifier","index","engineMap","mapPressureUnits","points","pressure","rpm","displacement","C","actions","addPoint","nextPoints","filter","sort","a","b","removePoint","canvas-id","MapLayer","CompressorMap","width","canvasWidth","height","canvasHeight","imgSrc","CompressorGrid","padding","gridPadding","EngineMap","TurbineMap","TurbineGrid","TurbineModel","canvasId","GRID_STROKE_STYLE","config","canvasRef","yInterval","xInterval","context","getContext","gridWidth","gridHeight","origin","font","xAxisSpacing","yAxisSpacing","clear","mergedConfig","clearRect","originX","originY","beginPath","strokeStyle","moveTo","lineTo","stroke","x","label","toFixed","fillText","measureText","y","rect","transformX","transformY","scale","radius","fill","arc","PI","lineWidth","first","restPoints","forEach","closePath","fillStyle","drawCircle","getImageRedrawer","image","canvas","ctx","drawImage","gridActions","newValues","setup","props","Number","String","gridCanvas","document","getElementById","drawGrid","drawAxis","handleHover","handleMouseDown","handleMouseUp","handleRightClick","pointerData","boost","temperature","getVolume","volumetricEfficiency","throttling","getVolumeFlow","volume","getRPMfromMAF","massAirflow","airDensity","volumeFlow","mapHeight","mapWidth","tooltip","transformXValue","transformYValue","onHover","onMouseDown","onMouseUp","onRightClick","getMapDataFromAtCanvasXY","mapY","mapX","handlePointerDataDisplay","e","display","left","pageX","top","pageY","xValue","yValue","preventDefault","graphCanvas","graphCanvasViewport","windowResizeHandler","getBoundingClientRect","pressureRatio","setMapPoint","insertMapPoint","removeMapPoint","getMAFlocal","engineMapRawPoints","engineMapPoints","getPressureRatio","querySelector","addEventListener","graph","drawMap","removeEventListener","contextPoint","getRPM","multiply","findMapPointIndex","findIndex","maf","pressureAtMouse","pointIndex","__scopeId","imgCanvas","img","Image","src","onload","floor","redrawImage","turbineModel","airflow","changePoint","turbineMapPointsRaw","turbineMapPoints","drawCurve","defaultConfig","components","MapImage","Grid","removeEngineMapPoint","addEngineMapPoint","enginePressure","engineSpeed","pressureUnits","rawPoints","mapName","Maps","EngineMapPoints","MapScaleControls","newUnits","prevUnits","convert","routes","path","component","Home","router","history","App","use","mount","TemperatureUnit","celsiusToFarenheit","celsius","farenheitToCelsius","farenheit","kelvinToFarenheit","kelvin","farenheitToKelvin","Temperature","K","_K","_C","_F","F"],"mappings":"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","file":"js/app.ca68f6d0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Maps.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Maps.vue?vue&type=style&index=0&lang=scss\"","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PA_PER_PSI } from \"@/physics/constants\";\nimport { Unit } from \"./Unit\";\n\nexport enum PressureUnit {\n\tPa = \"pascal\",\n\tkPa = \"kilopascal\",\n\tbar = \"bar\",\n\tmbar = \"milibar\",\n\tpsi = \"psi\"\n}\n\nexport class Pressure implements Unit {\n\tprivate _pa = 0;\n\tprivate _kpa = 0;\n\tprivate _bar = 0;\n\tprivate _mbar = 0;\n\tprivate _psi = 0;\n\n\tconstructor(value: number, unit = PressureUnit.Pa) {\n\t\tthis[unit] = value;\n\t}\n\n\tget SI () { return this._pa }\n\n\tset [PressureUnit.Pa] (value: number) {\n\t\tthis._pa = value;\n\t\tthis._kpa = value / 1000;\n\t\tthis._bar = value / 100000;\n\t\tthis._mbar = value / 100;\n\t\tthis._psi = value / PA_PER_PSI;\n\t}\n\tget [PressureUnit.Pa] () { return this._pa }\n\n\tset [PressureUnit.kPa] (value: number) {\n\t\tthis._pa = value * 1000;\n\t\tthis._kpa = value;\n\t\tthis._bar = value / 100;\n\t\tthis._mbar = value * 10;\n\t\tthis._psi = value * 1000 / PA_PER_PSI;\n\t}\n\tget [PressureUnit.kPa] () { return this._kpa }\n\n\tset [PressureUnit.bar] (value: number) {\n\t\tthis._pa = value * 100000;\n\t\tthis._kpa = value * 100;\n\t\tthis._bar = value;\n\t\tthis._mbar = value * 1000;\n\t\tthis._psi = value * 100000 / PA_PER_PSI;\n\t}\n\tget [PressureUnit.bar] () { return this._bar }\n\n\tset [PressureUnit.mbar] (value: number) {\n\t\tthis._pa = value * 100;\n\t\tthis._kpa = value / 10;\n\t\tthis._bar = value / 1000;\n\t\tthis._mbar = value;\n\t\tthis._psi = value * 100 / PA_PER_PSI;\n\t}\n\tget [PressureUnit.mbar] () { return this._mbar }\n\n\tset [PressureUnit.psi] (value: number) {\n\t\tthis._psi = value;\n\t\tthis._pa = PA_PER_PSI * value;\n\t\tthis._kpa = this._pa / 1000;\n\t\tthis._bar = this._pa / 100000;\n\t\tthis._mbar = this._pa / 100;\n\t}\n\tget [PressureUnit.psi] () { return this._psi }\n\n\tgetRelativePressure(ambient: Pressure): Pressure {\n\t\treturn new Pressure(this.SI - ambient.SI)\n\t}\n\n\tgetPressureRatio(ambient: Pressure): number {\n\t\treturn this.SI / ambient.SI\n\t}\n\n\tmultiply(ratio: number): Pressure {\n\t\treturn new Pressure(this.SI * ratio)\n\t}\n\n\tcompareTo(another: Pressure): number {\n\t\treturn this.SI - another.SI;\n\t}\n}","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./TurbineMap.vue?vue&type=style&index=0&id=6f5fe13d&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./TurbineMap.vue?vue&type=style&index=0&id=6f5fe13d&lang=scss&scoped=true\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMap.vue?vue&type=style&index=0&id=58e3da9a&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMap.vue?vue&type=style&index=0&id=58e3da9a&lang=scss&scoped=true\"","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport { Unit } from \"./Unit\";\n\nexport enum VolumeUnit {\n\tcc = \"cubic centimeters\",\n\tm3 = \"cubic meters\",\n}\n\nexport class Volume implements Unit {\n\tprivate _cc = 0;\n\tprivate _m3 = 0;\n\n\tconstructor(value: number, unit = VolumeUnit.m3) {\n\t\tthis[unit] = value;\n\t}\n\n\tget SI () { return this._m3; }\n\n\tset [VolumeUnit.cc] (value: number) {\n\t\tthis._cc = value;\n\t\tthis._m3 = value / 1000000;\n\t}\n\tget [VolumeUnit.cc] () { return this._cc }\n\n\tset[VolumeUnit.m3] (value: number) {\n\t\tthis._m3 = value;\n\t\tthis._cc = value * 1000000\n\t}\n\tget [VolumeUnit.m3] () { return this._m3 }\n}\n","export const GAS_CONSTANT = 8.314463; // J⋅K−1⋅mol−1\nexport const AIR_SPECIFIC_GAS_CONSTANT = 287.058; // J/(kg·K)\nexport const ZERO_CELSIUS_KELVIN = 273.15;\nexport const ABSOLUTE_ZERO_CELSIUS = -273.15;\nexport const ABSOLUTE_ZERO_FARENHEIT = -459.67;\nexport const LBS_PER_KG = 2.204623;\nexport const PA_PER_PSI = 6894.757293;\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMapPoints.vue?vue&type=style&index=0&id=0497d696&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMapPoints.vue?vue&type=style&index=0&id=0497d696&lang=scss&scoped=true\"","export * from \"./Airflow\";\nexport * from \"./Pressure\";\nexport * from \"./Temperature\";\nexport * from \"./Unit\";\nexport * from \"./Volume\";","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"","import { LBS_PER_KG } from \"@/physics/constants\";\nimport { Unit } from \"./Unit\";\n\nexport enum MassAirflowUnits {\n\tgs = \"g/s\",\n\tkgs = \"kg/s\",\n\tlbsmin = \"lbs/min\"\n}\n\nconst convertToLbsMin = (input: number) => {\n\treturn input * LBS_PER_KG * 60;\n}\n\nconst convertToKgS = (input: number) => {\n\treturn (input / 60) / LBS_PER_KG;\n}\n\nexport class MassAirflow implements Unit {\n\tprivate _gs = 0;\n\tprivate _kgs = 0;\n\tprivate _lbsmin = 0;\n\n\tstatic convert(inputType: MassAirflowUnits, value: number, outputType: MassAirflowUnits): number {\n\t\tif (inputType === outputType) { return value; }\n\n\t\treturn new MassAirflow(value, inputType)[outputType];\n\t}\n\n\tconstructor(value: number, units = MassAirflowUnits.kgs) {\n\t\tthis[units] = value;\n\t}\n\n\tget SI () {\n\t\treturn this._kgs;\n\t}\n\n\tset [MassAirflowUnits.gs] (value: number) {\n\t\tthis._gs = value;\n\t\tthis._kgs = value / 1000;\n\t\tthis._lbsmin = convertToLbsMin(this._kgs);\n\t}\n\tget [MassAirflowUnits.gs] () { return this.round(this._gs) }\n\n\tset [MassAirflowUnits.kgs] (value: number) {\n\t\tthis._gs = value * 1000;\n\t\tthis._kgs = value;\n\t\tthis._lbsmin = convertToLbsMin(this._kgs);\n\t}\n\tget [MassAirflowUnits.kgs] () { return this.round(this._kgs) }\n\n\tset [MassAirflowUnits.lbsmin] (value: number) {\n\t\tthis._lbsmin = value;\n\t\tthis._kgs = convertToKgS(value);\n\t\tthis._gs = this._kgs * 1000;\n\t}\n\tget [MassAirflowUnits.lbsmin] () { return this.round(this._lbsmin) }\n\n\tround(input: number) {\n\t\treturn Math.round(input * 10000) / 10000\n\t}\n}","<template>\n\t<router-view />\n</template>\n\n<style lang=\"scss\">\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n#app {\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: #2c3e50;\n\n\tbackground-color: azure;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\t// justify-content: center;\n\t// align-items: center;\n\t// height: 100vh;\n\t// width: 100vw;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=ab1c9548\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n\t<Maps />\n\t<div class=\"calculation-container\">\n\t\t<form>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"airflow\">Mass airflow units</label>\n\t\t\t\t<fieldset id=\"airflow\">\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"airflow-units\"\n\t\t\t\t\t\tv-model=\"airflowUnits\">\n\t\t\t\t\t\t<option :value=\"MassAirflowUnits.kgs\">kg/s</option>\n\t\t\t\t\t\t<option :value=\"MassAirflowUnits.lbsmin\">Lbs/min</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"min-airflow\">Minimum airflow</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"min-airflow\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"minAirflow\"\n\t\t\t\t\t\t\t:step=\"airflowUnitStep\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-airflow\">Maximum airflow</label><input\n\t\t\t\t\t\t\tid=\"max-airflow\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"maxAirflow\"\n\t\t\t\t\t\t\t:step=\"airflowUnitStep\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"airflow-interval\">Airflow grid step</label><input\n\t\t\t\t\t\t\tid=\"airflow-interval\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"airflowInterval\"\n\t\t\t\t\t\t\tstep=\"any\">\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"min-pressure-ratio\">Min pressure ratio</label>\n\t\t\t\t\t\t<input id=\"min-pressure-ratio\" type=\"number\" v-model=\"minPressureRatio\" step=\"0.5\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-pressure-ratio\">Max pressure ratio</label>\n\t\t\t\t\t\t<input id=\"max-pressure-ratio\" type=\"number\" v-model=\"maxPressureRatio\" step=\"0.5\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-pressure-ratio\">Pressure ratio step</label>\n\t\t\t\t\t\t<input id=\"max-pressure-ratio\" type=\"number\" v-model=\"pressureRatioStep\" step=\"any\">\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t</form>\n\t\t<map-scale-controls :map-name=\"ExternalMap.Compressor\" />\n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"engine-displacement\">Engine displacement (cc)</label>\n\t\t\t\t\t<input id=\"engine-displacement\" type=\"number\" v-model=\"engineDisplacement\" step=\"1\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"ambient-air-temperature\">Ambient air temperature (C)</label>\n\t\t\t\t\t<input id=\"ambient-air-temperature\" type=\"number\" v-model=\"ambientAirTemperature\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"ambient-air-pressure\">Ambient air absolute pressure (mbar)</label>\n\t\t\t\t\t<input id=\"ambient-air-pressure\" type=\"number\" v-model=\"ambientAirPressure\">\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t\t<EngineMapPoints />\n\t\t<map-scale-controls :map-name=\"ExternalMap.Turbine\" style=\"margin-top: 300px;\" />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport {\n\tdefineComponent,\n\tcomputed,\n\twatch,\n\tRef,\n\tWritableComputedRef,\n\tref,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport { ExternalMap } from \"@/store/external-map\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport Maps from \"./Maps.vue\"\nimport EngineMapPoints from \"./EngineMapPoints.vue\"\nimport MapScaleControls from \"./MapScaleControls.vue\"\nimport {\n\tMassAirflowUnits,\n\tMassAirflow,\n\tVolumeUnit,\n\tPressureUnit,\n\tTemperatureUnit\n} from \"@/physics/units\";\n\ntype ValueModelizer = <T>(value: Ref, units: Ref<T>) => WritableComputedRef<number>\nconst modelizeValue: ValueModelizer = (value, units) => computed({\n\tget () { return value.value[units.value] },\n\tset (input: number) { value.value[units.value] = input }\n})\n\nexport default defineComponent({\n\tname: \"Home\",\n\tcomponents: {\n\t\tMaps,\n\t\tEngineMapPoints,\n\t\tMapScaleControls\n\t},\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst airflowUnits = computed(buildEngineMapAccessor(\"airflowUnits\", store));\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store))\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store))\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store))\n\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\n\t\tconst engineDisplacement = modelizeValue(computed(buildEngineMapAccessor(\"displacement\", store)), ref(VolumeUnit.cc));\n\t\tconst ambientAirPressure = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirPressure\", store)), ref(PressureUnit.mbar));\n\t\tconst ambientAirTemperature = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirTemperature\", store)), ref(TemperatureUnit.C));\n\n\t\twatch(\n\t\t\t() => airflowUnits.value,\n\t\t\t(newUnits, prevUnits) => {\n\t\t\t\tminAirflow.value = MassAirflow.convert(prevUnits, minAirflow.value, newUnits)\n\t\t\t\tmaxAirflow.value = MassAirflow.convert(prevUnits, maxAirflow.value, newUnits)\n\t\t\t\tairflowInterval.value = MassAirflow.convert(prevUnits, airflowInterval.value, newUnits)\n\t\t\t}\n\t\t)\n\n\t\tconst airflowUnitStep = computed(() => {\n\t\t\tif (airflowUnits.value === MassAirflowUnits.kgs) {\n\t\t\t\treturn 0.05;\n\t\t\t}\n\t\t\treturn 1;\n\t\t})\n\n\t\treturn {\n\t\t\tMassAirflowUnits,\n\t\t\tExternalMap,\n\t\t\tairflowUnits,\n\t\t\tminAirflow,\n\t\t\tmaxAirflow,\n\t\t\tairflowInterval,\n\t\t\tminPressureRatio,\n\t\t\tmaxPressureRatio,\n\t\t\tpressureRatioStep,\n\t\t\tairflowUnitStep,\n\t\t\tengineDisplacement,\n\t\t\tambientAirPressure,\n\t\t\tambientAirTemperature\n\t\t};\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.calculation-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n</style>\n","import { Module, Store } from \"vuex\";\n\nexport const NAMESPACE = \"externalMap\"\n\nexport enum ExternalMap {\n\tCompressor = \"compressorMap\",\n\tTurbine = \"turbineMap\"\n}\ninterface ExternalMapConfig {\n\thScale: number;\n\thOffset: number;\n\tvScale: number;\n\tvOffset: number;\n}\nexport type ExternalMapConfigState = Record<ExternalMap, ExternalMapConfig>\n\nconst namespaced = (input: keyof ExternalMapConfig): string => `${NAMESPACE}/${input}`;\n\nexport const buildAccessor = <T extends keyof ExternalMapConfig>(\n\tmap: ExternalMap,\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => ExternalMapConfig[T];\n\tset: (input: ExternalMapConfig[T]) => void;\n} => ({\n\t\tget: () => store.getters[`${NAMESPACE}/maps`][map][property],\n\t\tset: (input) => store.commit(namespaced(property), { map, [property]: input })\n\t})\n\nexport const externalMap: Module<ExternalMapConfigState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\t[ExternalMap.Compressor]: {\n\t\t\thScale: 0.687,\n\t\t\thOffset: -52,\n\t\t\tvScale: 0.381,\n\t\t\tvOffset: 91,\n\t\t},\n\t\t[ExternalMap.Turbine]: {\n\t\t\thScale: 0.5055,\n\t\t\thOffset: -9,\n\t\t\tvScale: 0.6385,\n\t\t\tvOffset: 63,\n\t\t}\n\t},\n\tgetters: {\n\t\tmaps: state => state\n\t},\n\tmutations: {\n\t\thScale: (state, { map, hScale }: { map: ExternalMap; hScale: number }) => { state[map].hScale = hScale },\n\t\thOffset: (state, { map, hOffset }: { map: ExternalMap; hOffset: number }) => { state[map].hOffset = hOffset },\n\t\tvScale: (state, { map, vScale }: { map: ExternalMap; vScale: number }) => { state[map].vScale = vScale },\n\t\tvOffset: (state, { map, vOffset }: { map: ExternalMap; vOffset: number }) => { state[map].vOffset = vOffset },\n\t}\n}\n","import { Module, Store } from \"vuex\";\n\nexport const NAMESPACE = \"grid\"\n\nexport interface GridConfig {\n\tminX: number;\n\tmaxX: number;\n\txStep: number;\n\tminY: number;\n\tmaxY: number;\n\tyStep: number;\n}\n\ntype GridType = \"compressorGrid\" | \"turbineGrid\"\n\nexport type GridConfigState = Record<GridType, GridConfig>;\n\nexport const buildAccessor = <T extends keyof GridConfig>(\n\tgrid: GridType,\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => GridConfig[T];\n\tset: (input: GridConfig[T]) => void;\n} => ({\n\t\tget: () => store.getters[`${NAMESPACE}/grid`][grid][property],\n\t\tset: (input) => store.commit(`${NAMESPACE}/${property}`, { grid, [property]: input })\n\t})\n\nexport const grid: Module<GridConfigState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tcompressorGrid: {\n\t\t\tminX: 0,\n\t\t\tmaxX: 60,\n\t\t\txStep: 5,\n\t\t\tminY: 1,\n\t\t\tmaxY: 4,\n\t\t\tyStep: 0.25\n\t\t},\n\t\tturbineGrid: {\n\t\t\tminX: 1,\n\t\t\tmaxX: 3.75,\n\t\t\txStep: 0.25,\n\t\t\tminY: 0,\n\t\t\tmaxY: 25,\n\t\t\tyStep: 2.5\n\t\t}\n\t},\n\tgetters: {\n\t\tgrid: state => state\n\t},\n\tmutations: {\n\t\tminX: (state, { grid, minX }: { grid: GridType; minX: number }) => state[grid].minX = minX,\n\t\tmaxX: (state, { grid, maxX }: { grid: GridType; maxX: number }) => state[grid].maxX = maxX,\n\t\txStep: (state, { grid, xStep }: { grid: GridType; xStep: number }) => state[grid].xStep = xStep,\n\t\tminY: (state, { grid, minY }: { grid: GridType; minY: number }) => state[grid].minY = minY,\n\t\tmaxY: (state, { grid, maxY }: { grid: GridType; maxY: number }) => state[grid].maxY = maxY,\n\t\tyStep: (state, { grid, yStep }: { grid: GridType; yStep: number }) => state[grid].yStep = yStep,\n\t}\n}\n","import { Module, Store } from \"vuex\";\nimport {\n\tMassAirflowUnits,\n\tPressure,\n\tPressureUnit,\n\tTemperature,\n\tTemperatureUnit,\n\tVolume,\n\tVolumeUnit\n} from \"@/physics/units\";\n\nexport const NAMESPACE = \"engineMap\";\n\ntype MapPoint = { pressure: Pressure; rpm: number }\n\nexport type EngineMapState = {\n\tairflowUnits: MassAirflowUnits;\n\tmapPressureUnits: PressureUnit;\n\tpoints: MapPoint[];\n\tdisplacement: Volume;\n\tambientAirTemperature: Temperature;\n\tambientAirPressure: Pressure;\n}\n\nconst namespaced = (input: keyof EngineMapState | \"addPoint\" | \"removePoint\" | \"point\"): string => `${NAMESPACE}/${input}`;\n\nexport const buildMapPointsGetter = (store: Store<{}>) => (): MapPoint[] => store.getters[namespaced(\"points\")]\nexport const buildMapPointInserter = (store: Store<{}>) => (point: MapPoint) => store.dispatch(namespaced(\"addPoint\"), point)\nexport const buildMapPointRemover = (store: Store<{}>) => (point: MapPoint) => store.dispatch(namespaced(\"removePoint\"), point)\nexport const buildMapPointModifier = (store: Store<{}>) => (point: MapPoint, index: number) => store.commit(namespaced(\"point\"), { point, index })\n\nexport const buildAccessor = <T extends keyof EngineMapState>(\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => EngineMapState[T];\n\tset: (input: EngineMapState[T]) => void;\n} => ({\n\t\tget: () => store.getters[namespaced(property)],\n\t\tset: (input) => store.commit(namespaced(property), input)\n\t})\n\nexport const engineMap: Module<EngineMapState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tairflowUnits: MassAirflowUnits.lbsmin,\n\t\tmapPressureUnits: PressureUnit.bar,\n\t\tpoints: [\n\t\t\t{ pressure: new Pressure(2.5, PressureUnit.bar), rpm: 3000 },\n\t\t\t{ pressure: new Pressure(2.5, PressureUnit.bar), rpm: 5300 },\n\t\t\t{ pressure: new Pressure(2.5, PressureUnit.bar), rpm: 6500 }\n\t\t],\n\t\tdisplacement: new Volume(1984, VolumeUnit.cc),\n\t\tambientAirPressure: new Pressure(101325, PressureUnit.Pa),\n\t\tambientAirTemperature: new Temperature(15, TemperatureUnit.C)\n\t},\n\tgetters: {\n\t\tairflowUnits: ({ airflowUnits }) => airflowUnits,\n\t\tmapPressureUnits: ({ mapPressureUnits }) => mapPressureUnits,\n\t\tpoints: ({ points }) => points,\n\t\tdisplacement: ({ displacement }) => displacement,\n\t\tambientAirPressure: ({ ambientAirPressure }) => ambientAirPressure,\n\t\tambientAirTemperature: ({ ambientAirTemperature }) => ambientAirTemperature,\n\t},\n\tmutations: {\n\t\tairflowUnits: (state, airflowUnits) => state.airflowUnits = airflowUnits,\n\t\tmapPressureUnits: (state, mapPressureUnits) => state.mapPressureUnits = mapPressureUnits,\n\t\tpoint: (state, { point, index }) => {\n\t\t\tstate.points[index].pressure[state.mapPressureUnits] = point.pressure[state.mapPressureUnits]\n\t\t\tstate.points[index].rpm = point.rpm\n\t\t},\n\t\tpoints: (state, points) => state.points = points,\n\t\tdisplacement: (state, displacement) => state.displacement = displacement,\n\t\tambientAirPressure: (state, ambientAirPressure) => state.ambientAirPressure = ambientAirPressure,\n\t\tambientAirTemperature: (state, ambientAirTemperature) => state.ambientAirTemperature = ambientAirTemperature,\n\t},\n\tactions: {\n\t\taddPoint: ({ commit, state }, point: MapPoint) => {\n\t\t\tconst nextPoints = [\n\t\t\t\t...state.points.filter(p => p.rpm !== point.rpm),\n\t\t\t\tpoint\n\t\t\t].sort((a, b) => a.rpm - b.rpm)\n\n\t\t\tcommit(\"points\", nextPoints)\n\t\t},\n\t\tremovePoint: ({ commit, state }, point: MapPoint) => {\n\t\t\tconst nextPoints = state.points.filter(p => p.rpm !== point.rpm)\n\n\t\t\tcommit(\"points\", nextPoints)\n\t\t}\n\t}\n}","<template>\n\t<div class=\"maps-container\">\n\t\t<div id=\"cold-side-map\">\n\t\t\t<map-image\n\t\t\t\t:canvas-id=\"MapLayer.CompressorMap\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:name=\"ExternalMap.Compressor\"\n\t\t\t\timgSrc=\"./example_compressor_map.jpg\" />\n\t\t\t<grid\n\t\t\t\t:canvas-id=\"MapLayer.CompressorGrid\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:padding=\"gridPadding\"\n\t\t\t\tname=\"compressorGrid\" />\n\t\t\t<engine-map\n\t\t\t\t:canvas-id=\"MapLayer.EngineMap\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:padding=\"gridPadding\" />\n\t\t</div>\n\t\t<div id=\"hot-side-map\">\n\t\t\t<map-image\n\t\t\t\t:canvas-id=\"MapLayer.TurbineMap\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:name=\"ExternalMap.Turbine\"\n\t\t\t\timgSrc=\"./example_turbine_map.jpg\" />\n\t\t\t<grid\n\t\t\t\t:canvas-id=\"MapLayer.TurbineGrid\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:padding=\"gridPadding\"\n\t\t\t\tname=\"turbineGrid\" />\n\t\t\t<turbine-model\n\t\t\t\t:canvas-id=\"MapLayer.TurbineModel\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:padding=\"gridPadding\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\"\nimport { ExternalMap } from \"@/store/external-map\"\nimport Grid from \"./Grid.vue\"\nimport EngineMap from \"./EngineMap.vue\"\nimport MapImage from \"./MapImage.vue\"\nimport TurbineModel from \"./TurbineMap.vue\"\n\nenum MapLayer {\n\tCompressorMap = \"compressor-map\",\n\tCompressorGrid = \"compressor-grid\",\n\tEngineMap = \"engine-map\",\n\tTurbineMap = \"turbine-map\",\n\tTurbineGrid = \"turbine-grid\",\n\tTurbineModel = \"turbine-model\"\n}\n\nconst defaultConfig = {\n\twidth: 1208,\n\theight: 908,\n\tpadding: 100\n};\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: {\n\t\tMapImage,\n\t\tGrid,\n\t\tEngineMap,\n\t\tTurbineModel,\n\t},\n\tsetup: () => ({\n\t\tMapLayer,\n\t\tExternalMap,\n\t\tcanvasHeight: defaultConfig.height,\n\t\tcanvasWidth: defaultConfig.width,\n\t\tgridPadding: defaultConfig.padding\n\t})\n})\n</script>\n\n<style lang=\"scss\">\n#cold-side-map #hot-side-map {\n\tposition: relative;\n\tbackground-color: white;\n}\n\n#compressor-map {\n\tposition: absolute;\n\ttop:0;\n\tleft: 0;\n\topacity: 0.5;\n}\n\n#compressor-grid {\n\t/* background-color: white; */\n\ttop: 0;\n\tleft: 0;\n\topacity: 0.9;\n}\n\n#engine-map {\n\tbackground-color: transparent;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n#hot-side-map {\n\tposition: relative;\n\tbackground-color: white;\n}\n\n#turbine-map {\n\tposition: absolute;\n\ttop:0;\n\tleft: 0;\n\topacity: 0.5;\n}\n\n#turbine-model {\n\tbackground-color: transparent;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n</style>\n","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype GridProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n\tname: \"compressorGrid\" | \"turbineGrid\";\n}\n\nexport default defineComponent({\n\tname: \"Grid\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t\tname: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, padding, height, width, name } = props as GridProps;\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(name, \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(name, \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(name, \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(name, \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(name, \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(name, \"yStep\", store));\n\n\t\tonMounted(() => {\n\t\t\tconst gridCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst grid = new Grid({\n\t\t\t\tcanvasRef: gridCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value,\n\t\t\t\txInterval: airflowInterval.value,\n\t\t\t\tyInterval: pressureRatioStep.value\n\t\t\t});\n\n\t\t\tgrid.drawGrid();\n\t\t\tgrid.drawAxis();\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid,\n\t\t\t\tgridActions: [grid.drawGrid.bind(grid), grid.drawAxis.bind(grid)],\n\t\t\t\tminX: minAirflow,\n\t\t\t\tmaxX: maxAirflow,\n\t\t\t\txStep: airflowInterval,\n\t\t\t\tminY: minPressureRatio,\n\t\t\t\tmaxY: maxPressureRatio,\n\t\t\t\tyStep: pressureRatioStep\n\t\t\t})\n\t\t});\n\t},\n})\n</script>\n","const GRID_STROKE_STYLE = \"rgb(134,136,138)\";\n\nexport const greatestCommonDivisor = (a: number, b: number): number => (b === 0\n\t? a\n\t: (greatestCommonDivisor(b, a % b)));\n\ntype GridConstructor = {\n\tcanvasRef: HTMLCanvasElement;\n\theight: number;\n\twidth: number;\n\tpadding: number;\n\tminX: number;\n\tminY: number;\n\tmaxX: number;\n\tmaxY: number;\n\txInterval?: number;\n\tyInterval?: number;\n}\n\nexport class Grid {\n\tprivate context: CanvasRenderingContext2D;\n\n\tprivate height: number;\n\n\tprivate width: number;\n\n\tprivate padding: number;\n\n\tprivate minX: number;\n\n\tprivate minY: number;\n\n\tprivate maxX: number;\n\n\tprivate maxY: number;\n\n\tprivate gridWidth: number;\n\n\tprivate gridHeight: number;\n\n\tprivate origin: [number, number];\n\n\tprivate xInterval: number;\n\tprivate yInterval: number;\n\n\tprivate xAxisSpacing: number;\n\tprivate yAxisSpacing: number;\n\n\tconstructor(config: GridConstructor) {\n\t\tconst {\n\t\t\tcanvasRef,\n\t\t\theight,\n\t\t\twidth,\n\t\t\tpadding,\n\t\t\tminX,\n\t\t\tminY,\n\t\t\tmaxX,\n\t\t\tmaxY,\n\t\t\tyInterval = 0,\n\t\t\txInterval = 0,\n\t\t} = config;\n\n\t\tthis.context = canvasRef.getContext(\"2d\")!; // eslint-disable-line\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t\tthis.padding = padding;\n\t\tthis.minX = minX;\n\t\tthis.minY = minY;\n\t\tthis.maxX = maxX;\n\t\tthis.maxY = maxY;\n\n\t\tthis.gridWidth = width - 2 * padding;\n\t\tthis.gridHeight = height - 2 * padding;\n\n\t\tthis.origin = [padding, height - padding];\n\t\tthis.context.font = \"10px sans-serif\";\n\n\t\tthis.xInterval = xInterval === 0 ? (maxX - minX) : xInterval;\n\t\tthis.yInterval = yInterval === 0 ? (maxY - minY) : yInterval;\n\n\t\tthis.xAxisSpacing = Math.round(this.gridWidth * this.xInterval / (maxX - minX));\n\t\tthis.yAxisSpacing = Math.round(this.gridHeight * this.yInterval / (maxY - minY));\n\t}\n\n\tsetup(config: Partial<GridConstructor>) {\n\t\tthis.clear()\n\n\t\tconst mergedConfig = {\n\t\t\t...this,\n\t\t\t...config\n\t\t}\n\n\t\tconst {\n\t\t\theight,\n\t\t\twidth,\n\t\t\tpadding,\n\t\t\tminX,\n\t\t\tminY,\n\t\t\tmaxX,\n\t\t\tmaxY,\n\t\t\tyInterval = 0,\n\t\t\txInterval = 0,\n\t\t} = mergedConfig;\n\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t\tthis.padding = padding;\n\t\tthis.minX = minX;\n\t\tthis.minY = minY;\n\t\tthis.maxX = maxX;\n\t\tthis.maxY = maxY;\n\n\t\tthis.gridWidth = width - 2 * padding;\n\t\tthis.gridHeight = height - 2 * padding;\n\n\t\tthis.origin = [padding, height - padding];\n\t\tthis.context.font = \"10px sans-serif\";\n\n\t\tthis.xInterval = xInterval === 0 ? (maxX - minX) : xInterval;\n\t\tthis.yInterval = yInterval === 0 ? (maxY - minY) : yInterval;\n\n\t\tthis.xAxisSpacing = Math.round(this.gridWidth * this.xInterval / (maxX - minX));\n\t\tthis.yAxisSpacing = Math.round(this.gridHeight * this.yInterval / (maxY - minY));\n\t}\n\n\tclear() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t}\n\n\tdrawGrid() {\n\t\tconst [originX, originY] = this.origin;\n\t\tconst {\n\t\t\tcontext,\n\t\t\tgridWidth,\n\t\t\tgridHeight,\n\t\t\txAxisSpacing,\n\t\t\tyAxisSpacing,\n\t\t\tpadding,\n\t\t} = this;\n\t\tcontext.beginPath();\n\t\tcontext.strokeStyle = GRID_STROKE_STYLE;\n\t\tcontext.moveTo(originX, originY);\n\n\t\tfor (let i = originX; i <= (originX + gridWidth); i += xAxisSpacing) {\n\t\t\tcontext.moveTo(i, originY);\n\t\t\tcontext.lineTo(i, originY - gridHeight);\n\t\t}\n\n\t\tfor (let j = originY; j >= padding; j -= yAxisSpacing) {\n\t\t\tcontext.moveTo(originX, j);\n\t\t\tcontext.lineTo(originX + gridWidth, j);\n\t\t}\n\n\t\tcontext.stroke();\n\t}\n\n\tdrawAxis() {\n\t\tconst {\n\t\t\tcontext,\n\t\t\tgridWidth,\n\t\t\tpadding,\n\t\t\txAxisSpacing,\n\t\t\tyAxisSpacing,\n\t\t\txInterval,\n\t\t\tyInterval,\n\t\t\tminX,\n\t\t\tmaxY,\n\t\t\tminY,\n\t\t} = this;\n\n\t\tcontext.beginPath();\n\n\t\tconst [originX, originY] = this.origin;\n\n\t\tfor (\n\t\t\tlet x = originX, value = minX;\n\t\t\tx <= (originX + gridWidth);\n\t\t\tx += xAxisSpacing, value += xInterval\n\t\t) {\n\t\t\tconst label = value.toFixed(3);\n\t\t\tcontext.fillText(label, x - context.measureText(label).width / 2, originY + 14);\n\t\t}\n\n\t\tfor (\n\t\t\tlet y = originY, value = minY;\n\t\t\ty >= padding;\n\t\t\ty -= yAxisSpacing, value += yInterval\n\t\t) {\n\t\t\tconst label = value.toFixed(2);\n\t\t\tcontext.fillText(label, originX - context.measureText(label).width - 4, y + 5);\n\t\t}\n\n\t\tcontext.beginPath();\n\t\tcontext.rect(\n\t\t\tthis.transformX(minX),\n\t\t\tthis.transformY(maxY),\n\t\t\tthis.gridWidth,\n\t\t\tthis.gridHeight,\n\t\t);\n\t\tcontext.stroke();\n\t}\n\n\ttransformX(input: number) {\n\t\tconst scale = this.gridWidth / (this.maxX - this.minX);\n\n\t\treturn Math.round((input - this.minX) * scale) + this.padding;\n\t}\n\n\ttransformY(input: number) {\n\t\tconst scale = this.gridHeight / (this.maxY - this.minY);\n\n\t\treturn Math.round(this.gridHeight - (input - this.minY) * scale) + this.padding;\n\t}\n\n\tmoveTo(x: number, y: number) {\n\t\treturn this.context.moveTo(\n\t\t\tthis.transformX(x),\n\t\t\tthis.transformY(y),\n\t\t);\n\t}\n\n\tlineTo(x: number, y: number) {\n\t\treturn this.context.lineTo(\n\t\t\tthis.transformX(x),\n\t\t\tthis.transformY(y),\n\t\t);\n\t}\n\n\tstroke() {\n\t\treturn this.context.stroke();\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number, fill = false) {\n\t\tthis.context.beginPath()\n\t\tthis.context.moveTo(this.transformX(x) + radius, this.transformY(y))\n\t\tthis.context.arc(this.transformX(x), this.transformY(y), radius, 0, Math.PI * 2)\n\t\tif (fill) {\n\t\t\tthis.context.fill()\n\t\t}\n\t\tthis.context.stroke()\n\t}\n\n\tdrawMap(points: { x: number; y: number }[]) {\n\t\tthis.clear();\n\t\tthis.context.beginPath();\n\n\t\tthis.context.strokeStyle = \"green\";\n\t\tthis.context.lineWidth = 3;\n\n\t\tconst [first, ...restPoints] = points;\n\t\tthis.moveTo(first.x, first.y);\n\n\t\trestPoints.forEach(({ x, y }) => {\n\t\t\tthis.lineTo(x, y);\n\t\t\tthis.moveTo(x, y);\n\t\t});\n\n\t\tthis.lineTo(first.x, first.y);\n\t\tthis.context.closePath();\n\t\tthis.stroke();\n\n\t\tthis.context.beginPath();\n\t\tthis.context.strokeStyle = \"red\";\n\t\tthis.context.fillStyle = \"pink\";\n\t\tthis.context.lineWidth = 1;\n\n\t\tpoints.forEach(({ x, y }) => {\n\t\t\tthis.drawCircle(x, y, 5, true)\n\t\t})\n\t}\n\n\tdrawCurve(points: { x: number; y: number }[]) {\n\t\tthis.clear();\n\t\tthis.context.beginPath();\n\n\t\tthis.context.strokeStyle = \"green\";\n\t\tthis.context.lineWidth = 3;\n\n\t\tconst [first, ...restPoints] = points;\n\t\tthis.moveTo(first.x, first.y);\n\n\t\trestPoints.forEach(({ x, y }) => {\n\t\t\tthis.lineTo(x, y);\n\t\t\tthis.moveTo(x, y);\n\t\t});\n\t\tthis.stroke();\n\t\tthis.context.closePath();\n\n\t\tthis.context.beginPath();\n\t\tthis.context.strokeStyle = \"red\";\n\t\tthis.context.fillStyle = \"pink\";\n\t\tthis.context.lineWidth = 1;\n\n\t\tpoints.forEach(({ x, y }) => {\n\t\t\tthis.drawCircle(x, y, 5, true)\n\t\t})\n\t}\n}\n\nexport const getImageRedrawer = (\n\t{ image, canvas }: { image: CanvasImageSource; canvas: HTMLCanvasElement },\n) => (\n\tconfig: {\n\t\thOffset: number;\n\t\tvOffset: number;\n\t\thScale: number;\n\t\tvScale: number;\n\t},\n) => {\n\tconst {\n\t\twidth: canvasWidth,\n\t\theight: canvasHeight,\n\t} = canvas;\n\n\tconst ctx = canvas.getContext(\"2d\")!; // eslint-disable-line\n\n\tconst {\n\t\thOffset,\n\t\tvOffset,\n\t\thScale,\n\t\tvScale,\n\t} = config;\n\n\tctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\tctx.drawImage(\n\t\timage,\n\t\thOffset,\n\t\tvOffset,\n\t\tMath.round(hScale * (image.width as number)),\n\t\tMath.round(vScale * (image.height as number)),\n\t);\n};\n","import { Ref, watch } from \"vue\"\nimport { Grid } from \"./graphics\"\n\ntype GridParamGetters = [\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n]\n\ntype GridWatchersConfig = {\n\tgrid: Grid;\n\tgridActions: (() => void)[];\n\tminX: Ref<number>;\n\tmaxX: Ref<number>;\n\txStep: Ref<number>;\n\tminY: Ref<number>;\n\tmaxY: Ref<number>;\n\tyStep: Ref<number>;\n}\n\nexport const useGridWatchers = (config: GridWatchersConfig) => {\n\tconst {\n\t\tgrid,\n\t\tgridActions,\n\t\tminX,\n\t\tmaxX,\n\t\txStep,\n\t\tminY,\n\t\tmaxY,\n\t\tyStep\n\t} = config;\n\n\twatch<GridParamGetters>(\n\t\t[\n\t\t\t() => minX.value,\n\t\t\t() => maxX.value,\n\t\t\t() => xStep.value,\n\t\t\t() => minY.value,\n\t\t\t() => maxY.value,\n\t\t\t() => yStep.value,\n\t\t],\n\t\t(newValues) => {\n\t\t\tconst [\n\t\t\t\tminX,\n\t\t\t\tmaxX,\n\t\t\t\txInterval,\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyInterval,\n\t\t\t] = newValues\n\n\t\t\tgrid.setup({\n\t\t\t\tminX,\n\t\t\t\tmaxX,\n\t\t\t\txInterval,\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyInterval\n\t\t\t})\n\n\t\t\tgridActions.forEach(a => a())\n\t\t}\n\t)\n}","\nimport { defineComponent, computed, onMounted } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype GridProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n\tname: \"compressorGrid\" | \"turbineGrid\";\n}\n\nexport default defineComponent({\n\tname: \"Grid\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t\tname: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, padding, height, width, name } = props as GridProps;\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(name, \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(name, \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(name, \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(name, \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(name, \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(name, \"yStep\", store));\n\n\t\tonMounted(() => {\n\t\t\tconst gridCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst grid = new Grid({\n\t\t\t\tcanvasRef: gridCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value,\n\t\t\t\txInterval: airflowInterval.value,\n\t\t\t\tyInterval: pressureRatioStep.value\n\t\t\t});\n\n\t\t\tgrid.drawGrid();\n\t\t\tgrid.drawAxis();\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid,\n\t\t\t\tgridActions: [grid.drawGrid.bind(grid), grid.drawAxis.bind(grid)],\n\t\t\t\tminX: minAirflow,\n\t\t\t\tmaxX: maxAirflow,\n\t\t\t\txStep: airflowInterval,\n\t\t\t\tminY: minPressureRatio,\n\t\t\t\tmaxY: maxPressureRatio,\n\t\t\t\tyStep: pressureRatioStep\n\t\t\t})\n\t\t});\n\t},\n})\n","import { render } from \"./Grid.vue?vue&type=template&id=2c61c45b\"\nimport script from \"./Grid.vue?vue&type=script&lang=ts\"\nexport * from \"./Grid.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\"\n\t\t@mousemove=\"handleHover\"\n\t\t@mousedown=\"handleMouseDown\"\n\t\t@mouseup=\"handleMouseUp\"\n\t\t@contextmenu=\"handleRightClick\" />\n\t<div class=\"tooltip\">\n\t\tBoost: {{ (Math.round(pointerData.boost * 100) / 100).toFixed(2) }} PSI<br />\n\t\trpm: {{ pointerData.rpm }}\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointsGetter,\n\tbuildAccessor as buildEngineMapAccessor,\n\tbuildMapPointModifier,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n} from \"@/store/engine-map\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflow, Pressure, PressureUnit } from \"@/physics/units\";\nimport { getMAF, getRPMfromMAF } from \"@/physics/calculations\";\nimport { useMouseControl } from \"./mouse-control\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Map\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tlet graphCanvas: HTMLCanvasElement;\n\t\tconst tooltip = ref<HTMLElement>({} as HTMLElement);\n\t\tconst graphCanvasViewport = ref<DOMRect>({ left: 0, top: 0 } as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas?.getBoundingClientRect() }\n\t\tconst originX = computed(() => graphCanvasViewport.value.left + padding)\n\t\tconst originY = computed(() => graphCanvasViewport.value.top + padding)\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\t\tconst airflowUnits = computed(buildEngineMapAccessor(\"airflowUnits\", store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = ref({\n\t\t\tpressureRatio: 0,\n\t\t\tboost: 0,\n\t\t\trpm: 0,\n\t\t\tmassAirflow: 0\n\t\t});\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\t\tconst removeMapPoint = buildMapPointRemover(store);\n\n\t\tconst getMAFlocal = ({ pressure, rpm }: { pressure: Pressure; rpm: number }): number => getMAF({\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure,\n\t\t\trpm,\n\t\t})[airflowUnits.value]\n\n\t\tconst engineMapRawPoints = computed(buildMapPointsGetter(store));\n\t\tconst engineMapPoints = computed(() => {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[0]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t},\n\t\t\t\t...engineMapRawPoints.value.map(p => ({\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: p.pressure,\n\t\t\t\t\t\trpm: p.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: p.pressure.getPressureRatio(ambientAirPressure.value)\n\t\t\t\t})),\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[engineMapRawPoints.value.length - 1]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\ttooltip.value = document.querySelector(\".tooltip\") as HTMLElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawMap(engineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawMap(engineMapPoints.value) }],\n\t\t\t\tminX: minAirflow,\n\t\t\t\tmaxX: maxAirflow,\n\t\t\t\txStep: airflowInterval,\n\t\t\t\tminY: minPressureRatio,\n\t\t\t\tmaxY: maxPressureRatio,\n\t\t\t\tyStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => engineMapPoints.value,\n\t\t\t\tpoints => { graph.drawMap(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst getRPM = ({ massAirflow, pressureRatio }: { massAirflow: MassAirflow; pressureRatio: number }): number => Math.round(getRPMfromMAF({\n\t\t\tmassAirflow,\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t}))\n\n\t\tconst findMapPointIndex = (rpm: number, pressure: Pressure): number => {\n\t\t\treturn engineMapRawPoints.value.findIndex((point) => {\n\t\t\t\tif (point.rpm === rpm || (point.rpm * 1.05 > rpm && point.rpm * 0.95 < rpm)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.pressure.SI === pressure.SI ||\n\t\t\t\t\t\t(point.pressure.SI * 1.01 > pressure.SI && point.pressure.SI * 0.99 < pressure.SI)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick\n\t\t} = useMouseControl({\n\t\t\ttooltip,\n\t\t\toriginX,\n\t\t\toriginY,\n\t\t\tmapWidth,\n\t\t\tmapHeight,\n\t\t\tpadding,\n\t\t\tminX: minAirflow,\n\t\t\tmaxX: maxAirflow,\n\t\t\tminY: minPressureRatio,\n\t\t\tmaxY: maxPressureRatio,\n\t\t\ttransformYValue: a => a,\n\t\t\ttransformXValue: (maf: number) => new MassAirflow(maf, airflowUnits.value),\n\t\t\tonHover: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\n\t\t\t\tpointerData.value = {\n\t\t\t\t\tpressureRatio,\n\t\t\t\t\tmassAirflow: massAirflow[airflowUnits.value],\n\t\t\t\t\trpm,\n\t\t\t\t\tboost: ambientAirPressure.value.multiply((pressureRatio - 1))[\"psi\"]\n\t\t\t\t}\n\n\t\t\t\tif (contextPoint > -1) {\n\t\t\t\t\tsetMapPoint(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trpm,\n\t\t\t\t\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextPoint\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonMouseDown: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\tcontextPoint = findMapPointIndex(rpm, pressureAtMouse);\n\t\t\t},\n\t\t\tonMouseUp: () => { contextPoint = -1 },\n\t\t\tonRightClick: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\tconst pointIndex = findMapPointIndex(rpm, pressureAtMouse);\n\n\t\t\t\tif (pointIndex < 0) {\n\t\t\t\t\tinsertMapPoint({\n\t\t\t\t\t\trpm,\n\t\t\t\t\t\tpressure: new Pressure(Math.round(pressureAtMouse[\"bar\"] * 100) / 100, PressureUnit.bar)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tremoveMapPoint(engineMapRawPoints.value[pointIndex]);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick,\n\t\t\tpointerData,\n\t\t\tairflowUnits\n\t\t}\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.tooltip {\n\tdisplay: none;\n\tbackground: #C8C8C7;\n\tmargin-left: 30px;\n\tpadding: 10px;\n\tposition: absolute;\n\tz-index: 1000;\n\twidth: 200px;\n\theight: 100px;\n}\n</style>\n","import { AIR_SPECIFIC_GAS_CONSTANT } from \"@/physics/constants\"\nimport {\n\tMassAirflow,\n\tPressure,\n\tTemperature,\n\tVolume,\n} from \"@/physics/units\"\n\ntype KgM3 = number\n\ntype IGetAirDensity = (p: { temperature: Temperature; pressure: Pressure }) => KgM3\nexport const getAirDensity: IGetAirDensity = ({ temperature, pressure }) => (\n\tpressure.SI / (temperature.SI * AIR_SPECIFIC_GAS_CONSTANT)\n);\n\ntype IGetVolume = (p: {\n\tdisplacement: Volume;\n\tvolumetricEfficiency?: number;\n\tthrottling?: number;\n}) => Volume\nexport const getVolume: IGetVolume = ({\n\tdisplacement,\n\tvolumetricEfficiency = 1,\n\tthrottling = 1,\n}) => {\n\tdisplacement[\"cubic meters\"] = displacement.SI * volumetricEfficiency * throttling\n\treturn displacement;\n};\n\ntype IGetVolumeFlow = <T extends number>(p: { rpm: number; volume: T }) => number\nexport const getVolumeFlow: IGetVolumeFlow = ({ rpm, volume }) => (\n\t(volume * rpm) / (2 * 60)\n);\n\ntype IGetRPMfromMAF = (p: {\n\tmassAirflow: MassAirflow;\n\tdisplacement: Volume;\n\ttemperature: Temperature;\n\tpressure: Pressure;\n}) => number\nexport const getRPMfromMAF: IGetRPMfromMAF = ({\n\tmassAirflow, displacement, temperature, pressure\n}) => {\n\tconst airDensity = getAirDensity({ temperature, pressure })\n\tconst volumeFlow = massAirflow.SI / airDensity;\n\tconst rpm = volumeFlow * 60 * 2 / displacement.SI;\n\treturn rpm\n}\n\ntype IGetMAF = (p: {\n\trpm: number;\n\tdisplacement: Volume;\n\ttemperature: Temperature;\n\tpressure: Pressure;\n}) => MassAirflow\nexport const getMAF: IGetMAF = ({\n\trpm,\n\tdisplacement,\n\ttemperature,\n\tpressure,\n}) => {\n\tconst volume = getVolume({ displacement });\n\treturn new MassAirflow(getVolumeFlow({ rpm, volume: volume.SI }) * getAirDensity({ temperature, pressure }))\n};\n","import { Ref } from \"vue\"\n\ntype MouseEventHandler<T, K> = (xValue: T, yValue: K) => void\n\ntype MouseControlConfig<XUnit, YUnit> = {\n\toriginX: Ref<number>;\n\toriginY: Ref<number>;\n\tmapWidth: number;\n\tmapHeight: number;\n\tpadding: number;\n\tminX: Ref<number>;\n\tmaxX: Ref<number>;\n\tminY: Ref<number>;\n\tmaxY: Ref<number>;\n\ttooltip?: Ref<HTMLElement>;\n\ttransformXValue: (input: number) => XUnit;\n\ttransformYValue: (input: number) => YUnit;\n\tonHover: MouseEventHandler<XUnit, YUnit>;\n\tonMouseDown: MouseEventHandler<XUnit, YUnit>;\n\tonMouseUp: MouseEventHandler<XUnit, YUnit>;\n\tonRightClick: MouseEventHandler<XUnit, YUnit>;\n}\n\nexport const useMouseControl = <X, Y>({\n\toriginX,\n\toriginY,\n\tmapHeight,\n\tmapWidth,\n\tpadding,\n\tminX,\n\tmaxX,\n\tminY,\n\tmaxY,\n\ttooltip,\n\ttransformXValue,\n\ttransformYValue,\n\tonHover,\n\tonMouseDown,\n\tonMouseUp,\n\tonRightClick,\n}: MouseControlConfig<X, Y>) => {\n\tconst getMapDataFromAtCanvasXY = ({ x, y }: { x: number; y: number }): [number, number] | [] => {\n\t\tconst mapY = y - originY.value\n\t\tconst mapX = x - originX.value\n\n\t\tif (mapY < 0 || mapY >= mapHeight) { return [] }\n\t\tif (mapX < 0 || mapX >= mapWidth) { return [] }\n\n\t\t return [\n\t\t\t((mapX / mapWidth) * (maxX.value - minX.value)) + minX.value,\n\t\t\t((1 - (mapY / mapHeight)) * (maxY.value - minY.value)) + minY.value,\n\t\t]\n\t}\n\n\tconst handlePointerDataDisplay = (e: MouseEvent) => {\n\t\tif (!tooltip) { return }\n\t\tif (tooltip.value.style.display === \"none\") {\n\t\t\ttooltip.value.style.display = \"block\";\n\t\t}\n\n\t\ttooltip.value.style.left = e.pageX - originX.value + padding  + \"px\"\n\t\ttooltip.value.style.top = e.pageY - originY.value + padding + \"px\"\n\t}\n\n\tconst handleHover = (e: MouseEvent) => {\n\t\tconst [ xValue, yValue ] = getMapDataFromAtCanvasXY(e);\n\n\t\tif (!xValue || !yValue) { return }\n\n\t\tif (tooltip) {\n\t\t\ttooltip.value.style.display = \"none\"\n\t\t}\n\n\t\thandlePointerDataDisplay(e)\n\n\t\tonHover(transformXValue(xValue), transformYValue(yValue));\n\t}\n\n\tconst handleMouseDown = (e: MouseEvent) => {\n\t\tconst [ xValue, yValue ] = getMapDataFromAtCanvasXY(e);\n\n\t\tif (!xValue || !yValue) { return }\n\n\t\tonMouseDown(transformXValue(xValue), transformYValue(yValue));\n\t}\n\n\tconst handleMouseUp = (e: MouseEvent) => {\n\t\tconst [ xValue, yValue ] = getMapDataFromAtCanvasXY(e);\n\n\t\tif (!xValue || !yValue) { return }\n\n\t\tonMouseUp(transformXValue(xValue), transformYValue(yValue));\n\t}\n\n\tconst handleRightClick = (e: MouseEvent) => {\n\t\te.preventDefault();\n\n\t\tconst [ xValue, yValue ] = getMapDataFromAtCanvasXY(e);\n\n\t\tif (!xValue || !yValue) { return }\n\n\t\tonRightClick(transformXValue(xValue), transformYValue(yValue));\n\t}\n\n\treturn {\n\t\thandleHover,\n\t\thandleMouseDown,\n\t\thandleMouseUp,\n\t\thandleRightClick\n\t}\n}","\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointsGetter,\n\tbuildAccessor as buildEngineMapAccessor,\n\tbuildMapPointModifier,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n} from \"@/store/engine-map\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflow, Pressure, PressureUnit } from \"@/physics/units\";\nimport { getMAF, getRPMfromMAF } from \"@/physics/calculations\";\nimport { useMouseControl } from \"./mouse-control\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Map\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tlet graphCanvas: HTMLCanvasElement;\n\t\tconst tooltip = ref<HTMLElement>({} as HTMLElement);\n\t\tconst graphCanvasViewport = ref<DOMRect>({ left: 0, top: 0 } as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas?.getBoundingClientRect() }\n\t\tconst originX = computed(() => graphCanvasViewport.value.left + padding)\n\t\tconst originY = computed(() => graphCanvasViewport.value.top + padding)\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\t\tconst airflowUnits = computed(buildEngineMapAccessor(\"airflowUnits\", store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = ref({\n\t\t\tpressureRatio: 0,\n\t\t\tboost: 0,\n\t\t\trpm: 0,\n\t\t\tmassAirflow: 0\n\t\t});\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\t\tconst removeMapPoint = buildMapPointRemover(store);\n\n\t\tconst getMAFlocal = ({ pressure, rpm }: { pressure: Pressure; rpm: number }): number => getMAF({\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure,\n\t\t\trpm,\n\t\t})[airflowUnits.value]\n\n\t\tconst engineMapRawPoints = computed(buildMapPointsGetter(store));\n\t\tconst engineMapPoints = computed(() => {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[0]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t},\n\t\t\t\t...engineMapRawPoints.value.map(p => ({\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: p.pressure,\n\t\t\t\t\t\trpm: p.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: p.pressure.getPressureRatio(ambientAirPressure.value)\n\t\t\t\t})),\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[engineMapRawPoints.value.length - 1]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\ttooltip.value = document.querySelector(\".tooltip\") as HTMLElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawMap(engineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawMap(engineMapPoints.value) }],\n\t\t\t\tminX: minAirflow,\n\t\t\t\tmaxX: maxAirflow,\n\t\t\t\txStep: airflowInterval,\n\t\t\t\tminY: minPressureRatio,\n\t\t\t\tmaxY: maxPressureRatio,\n\t\t\t\tyStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => engineMapPoints.value,\n\t\t\t\tpoints => { graph.drawMap(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst getRPM = ({ massAirflow, pressureRatio }: { massAirflow: MassAirflow; pressureRatio: number }): number => Math.round(getRPMfromMAF({\n\t\t\tmassAirflow,\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t}))\n\n\t\tconst findMapPointIndex = (rpm: number, pressure: Pressure): number => {\n\t\t\treturn engineMapRawPoints.value.findIndex((point) => {\n\t\t\t\tif (point.rpm === rpm || (point.rpm * 1.05 > rpm && point.rpm * 0.95 < rpm)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.pressure.SI === pressure.SI ||\n\t\t\t\t\t\t(point.pressure.SI * 1.01 > pressure.SI && point.pressure.SI * 0.99 < pressure.SI)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick\n\t\t} = useMouseControl({\n\t\t\ttooltip,\n\t\t\toriginX,\n\t\t\toriginY,\n\t\t\tmapWidth,\n\t\t\tmapHeight,\n\t\t\tpadding,\n\t\t\tminX: minAirflow,\n\t\t\tmaxX: maxAirflow,\n\t\t\tminY: minPressureRatio,\n\t\t\tmaxY: maxPressureRatio,\n\t\t\ttransformYValue: a => a,\n\t\t\ttransformXValue: (maf: number) => new MassAirflow(maf, airflowUnits.value),\n\t\t\tonHover: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\n\t\t\t\tpointerData.value = {\n\t\t\t\t\tpressureRatio,\n\t\t\t\t\tmassAirflow: massAirflow[airflowUnits.value],\n\t\t\t\t\trpm,\n\t\t\t\t\tboost: ambientAirPressure.value.multiply((pressureRatio - 1))[\"psi\"]\n\t\t\t\t}\n\n\t\t\t\tif (contextPoint > -1) {\n\t\t\t\t\tsetMapPoint(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trpm,\n\t\t\t\t\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextPoint\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonMouseDown: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\tcontextPoint = findMapPointIndex(rpm, pressureAtMouse);\n\t\t\t},\n\t\t\tonMouseUp: () => { contextPoint = -1 },\n\t\t\tonRightClick: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\tconst pointIndex = findMapPointIndex(rpm, pressureAtMouse);\n\n\t\t\t\tif (pointIndex < 0) {\n\t\t\t\t\tinsertMapPoint({\n\t\t\t\t\t\trpm,\n\t\t\t\t\t\tpressure: new Pressure(Math.round(pressureAtMouse[\"bar\"] * 100) / 100, PressureUnit.bar)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tremoveMapPoint(engineMapRawPoints.value[pointIndex]);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick,\n\t\t\tpointerData,\n\t\t\tairflowUnits\n\t\t}\n\t},\n})\n","import { render } from \"./EngineMap.vue?vue&type=template&id=58e3da9a&scoped=true\"\nimport script from \"./EngineMap.vue?vue&type=script&lang=ts\"\nexport * from \"./EngineMap.vue?vue&type=script&lang=ts\"\n\nimport \"./EngineMap.vue?vue&type=style&index=0&id=58e3da9a&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-58e3da9a\"\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor, ExternalMap } from \"@/store/external-map\";\nimport { getImageRedrawer } from \"./graphics\";\n\ntype TurbineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tname: ExternalMap;\n\timgSrc: string;\n}\n\nexport default defineComponent({\n\tname: \"MapImage\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tname: String,\n\t\timgSrc: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, name, imgSrc } = props as TurbineMapProps\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(name, \"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(name, \"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(name, \"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(name, \"vScale\", store))\n\n\t\tonMounted(() => {\n\t\t\tconst imgCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst img = new Image();\n\t\t\timg.src = imgSrc;\n\n\t\t\timg.onload = () => {\n\t\t\t\timgCanvas // eslint-disable-line\n\t\t\t\t\t.getContext(\"2d\")!\n\t\t\t\t\t.drawImage(\n\t\t\t\t\t\timg,\n\t\t\t\t\t\thOffset.value,\n\t\t\t\t\t\tvOffset.value,\n\t\t\t\t\t\tMath.floor(hScale.value * img.width),\n\t\t\t\t\t\tMath.floor(vScale.value * img.height),\n\t\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst redrawImage = getImageRedrawer({ canvas: imgCanvas, image: img });\n\n\t\t\twatch(\n\t\t\t\t[\n\t\t\t\t\t() => hOffset.value,\n\t\t\t\t\t() => vOffset.value,\n\t\t\t\t\t() => hScale.value,\n\t\t\t\t\t() => vScale.value\n\t\t\t\t],\n\t\t\t\t([\n\t\t\t\t\thOffset,\n\t\t\t\t\tvOffset,\n\t\t\t\t\thScale,\n\t\t\t\t\tvScale\n\t\t\t\t]) => {\n\t\t\t\t\tredrawImage({\n\t\t\t\t\t\thOffset,\n\t\t\t\t\t\tvOffset,\n\t\t\t\t\t\thScale,\n\t\t\t\t\t\tvScale,\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t},\n})\n</script>\n","\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor, ExternalMap } from \"@/store/external-map\";\nimport { getImageRedrawer } from \"./graphics\";\n\ntype TurbineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tname: ExternalMap;\n\timgSrc: string;\n}\n\nexport default defineComponent({\n\tname: \"MapImage\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tname: String,\n\t\timgSrc: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, name, imgSrc } = props as TurbineMapProps\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(name, \"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(name, \"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(name, \"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(name, \"vScale\", store))\n\n\t\tonMounted(() => {\n\t\t\tconst imgCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst img = new Image();\n\t\t\timg.src = imgSrc;\n\n\t\t\timg.onload = () => {\n\t\t\t\timgCanvas // eslint-disable-line\n\t\t\t\t\t.getContext(\"2d\")!\n\t\t\t\t\t.drawImage(\n\t\t\t\t\t\timg,\n\t\t\t\t\t\thOffset.value,\n\t\t\t\t\t\tvOffset.value,\n\t\t\t\t\t\tMath.floor(hScale.value * img.width),\n\t\t\t\t\t\tMath.floor(vScale.value * img.height),\n\t\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst redrawImage = getImageRedrawer({ canvas: imgCanvas, image: img });\n\n\t\t\twatch(\n\t\t\t\t[\n\t\t\t\t\t() => hOffset.value,\n\t\t\t\t\t() => vOffset.value,\n\t\t\t\t\t() => hScale.value,\n\t\t\t\t\t() => vScale.value\n\t\t\t\t],\n\t\t\t\t([\n\t\t\t\t\thOffset,\n\t\t\t\t\tvOffset,\n\t\t\t\t\thScale,\n\t\t\t\t\tvScale\n\t\t\t\t]) => {\n\t\t\t\t\tredrawImage({\n\t\t\t\t\t\thOffset,\n\t\t\t\t\t\tvOffset,\n\t\t\t\t\t\thScale,\n\t\t\t\t\t\tvScale,\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t},\n})\n","import { render } from \"./MapImage.vue?vue&type=template&id=223ffb0a\"\nimport script from \"./MapImage.vue?vue&type=script&lang=ts\"\nexport * from \"./MapImage.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\"\n\t\t@mousemove=\"handleHover\"\n\t\t@mousedown=\"handleMouseDown\"\n\t\t@mouseup=\"handleMouseUp\"\n\t\t@contextmenu=\"handleRightClick\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildMapPointModifier,\n\tbuildMapPointsGetter\n} from \"@/store/turbine-model\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflowUnits, MassAirflow } from \"@/physics/units\";\nimport { useMouseControl } from \"./mouse-control\";\n\ntype TurbineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"TurbineMap\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as TurbineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tconst graphCanvas = ref({} as HTMLCanvasElement);\n\t\tconst graphCanvasViewport = ref({ left: 0, top: 0 } as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas.value?.getBoundingClientRect() }\n\t\tconst originX = computed(() => graphCanvasViewport.value.left + padding)\n\t\tconst originY = computed(() => graphCanvasViewport.value.top + padding)\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"turbineGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"turbineGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"turbineGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"turbineGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"turbineGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"turbineGrid\", \"yStep\", store));\n\t\tconst airflowUnits = ref(MassAirflowUnits.lbsmin);\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\t\tconst removeMapPoint = buildMapPointRemover(store);\n\t\tconst turbineMapPointsRaw = buildMapPointsGetter(store);\n\t\tconst turbineMapPoints = computed(\n\t\t\t() => turbineMapPointsRaw().map(p => ({\n\t\t\t\ty: p.airflow[airflowUnits.value],\n\t\t\t\tx: p.pressureRatio\n\t\t\t}))\n\t\t)\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas.value = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.value.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas.value,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawCurve(turbineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawCurve(turbineMapPoints.value) }],\n\t\t\t\tminY: minAirflow,\n\t\t\t\tmaxY: maxAirflow,\n\t\t\t\tyStep: airflowInterval,\n\t\t\t\tminX: minPressureRatio,\n\t\t\t\tmaxX: maxPressureRatio,\n\t\t\t\txStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => turbineMapPoints.value,\n\t\t\t\tpoints => { graph.drawCurve(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst findMapPointIndex = (pressureRatio: number, airflow: MassAirflow): number => {\n\t\t\treturn turbineMapPointsRaw().findIndex((point) => {\n\t\t\t\tif (point.pressureRatio === pressureRatio || (point.pressureRatio * 1.05 > pressureRatio && point.pressureRatio * 0.95 < pressureRatio)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.airflow.SI === airflow.SI ||\n\t\t\t\t\t\t(point.airflow.SI * 1.05 > airflow.SI && point.airflow.SI * 0.95 < airflow.SI)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick\n\t\t} = useMouseControl<number, MassAirflow>({\n\t\t\toriginX,\n\t\t\toriginY,\n\t\t\tmapWidth,\n\t\t\tmapHeight,\n\t\t\tpadding,\n\t\t\tminX: minAirflow,\n\t\t\tmaxX: maxAirflow,\n\t\t\tminY: minPressureRatio,\n\t\t\tmaxY: maxPressureRatio,\n\t\t\ttransformYValue: a => new MassAirflow(a, airflowUnits.value),\n\t\t\ttransformXValue: a => a,\n\t\t\tonHover: (pressureRatio, airflow) => {\n\t\t\t\tif (contextPoint > -1) {\n\t\t\t\t\tsetMapPoint(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\t\tairflow,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextPoint\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonMouseDown: (pressureRatio, airflow) => {\n\t\t\t\tcontextPoint = findMapPointIndex(pressureRatio, airflow);\n\t\t\t},\n\t\t\tonMouseUp: () => { contextPoint = -1 },\n\t\t\tonRightClick: (pressureRatio, airflow) => {\n\t\t\t\tconst pointIndex = findMapPointIndex(pressureRatio, airflow);\n\n\t\t\t\tif (pointIndex < 0) {\n\t\t\t\t\tinsertMapPoint({\n\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\tairflow,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tremoveMapPoint(turbineMapPointsRaw()[pointIndex]);\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick,\n\t\t\tairflowUnits\n\t\t}\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.tooltip {\n\tdisplay: none;\n\tbackground: #C8C8C7;\n\tmargin-left: 30px;\n\tpadding: 10px;\n\tposition: absolute;\n\tz-index: 1000;\n\twidth: 200px;\n\theight: 100px;\n}\n</style>\n","import { MassAirflow, MassAirflowUnits } from \"@/physics/units\"\nimport { Module, Store } from \"vuex\"\n\nexport const NAMESPACE = \"turbineModel\";\n\ntype TurbineMapPoint = {\n\tairflow: MassAirflow;\n\tpressureRatio: number;\n}\n\nexport type TurbineModelState = {\n\tpoints: TurbineMapPoint[];\n}\n\nconst namespaced = (input: \"points\" | \"addPoint\" | \"removePoint\" | \"changePoint\"): string => `${NAMESPACE}/${input}`;\n\nexport const buildMapPointsGetter = (store: Store<{}>) => (): TurbineMapPoint[] => store.getters[namespaced(\"points\")]\nexport const buildMapPointInserter = (store: Store<{}>) => (point: TurbineMapPoint) => store.commit(namespaced(\"addPoint\"), point)\nexport const buildMapPointRemover = (store: Store<{}>) => (point: TurbineMapPoint) => store.commit(namespaced(\"removePoint\"), point)\nexport const buildMapPointModifier = (store: Store<{}>) => (point: TurbineMapPoint, index: number) => store.commit(namespaced(\"changePoint\"), { point, index })\n\nexport const turbineModel: Module<TurbineModelState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tpoints: [\n\t\t\t{ airflow: new MassAirflow(8.3, MassAirflowUnits.lbsmin), pressureRatio: 1.25 },\n\t\t\t{ airflow: new MassAirflow(10, MassAirflowUnits.lbsmin), pressureRatio: 1.39 },\n\t\t\t{ airflow: new MassAirflow(12.5, MassAirflowUnits.lbsmin), pressureRatio: 1.75 },\n\t\t\t{ airflow: new MassAirflow(14, MassAirflowUnits.lbsmin), pressureRatio: 2.5 },\n\t\t\t{ airflow: new MassAirflow(14.5, MassAirflowUnits.lbsmin), pressureRatio: 3 },\n\t\t\t{ airflow: new MassAirflow(14.5, MassAirflowUnits.lbsmin), pressureRatio: 3.75 }\n\t\t]\n\t},\n\tgetters: {\n\t\tpoints: ({ points }) => points\n\t},\n\tmutations: {\n\t\taddPoint: (state, point: TurbineMapPoint) => {\n\t\t\tstate.points.push(point);\n\t\t\tstate.points.sort((a, b) => a.pressureRatio - b.pressureRatio);\n\t\t},\n\t\tremovePoint: (state, point: TurbineMapPoint) => {\n\t\t\tconst index = state.points.findIndex(p => p.pressureRatio === point.pressureRatio && p.airflow === point.airflow)\n\t\t\tstate.points.splice(index, 1);\n\t\t},\n\t\tchangePoint: (state, { index, point }: { index: number; point: TurbineMapPoint }) => {\n\t\t\tstate.points[index] = point;\n\t\t}\n\t}\n}","\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildMapPointModifier,\n\tbuildMapPointsGetter\n} from \"@/store/turbine-model\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflowUnits, MassAirflow } from \"@/physics/units\";\nimport { useMouseControl } from \"./mouse-control\";\n\ntype TurbineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"TurbineMap\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as TurbineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tconst graphCanvas = ref({} as HTMLCanvasElement);\n\t\tconst graphCanvasViewport = ref({ left: 0, top: 0 } as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas.value?.getBoundingClientRect() }\n\t\tconst originX = computed(() => graphCanvasViewport.value.left + padding)\n\t\tconst originY = computed(() => graphCanvasViewport.value.top + padding)\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"turbineGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"turbineGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"turbineGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"turbineGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"turbineGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"turbineGrid\", \"yStep\", store));\n\t\tconst airflowUnits = ref(MassAirflowUnits.lbsmin);\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\t\tconst removeMapPoint = buildMapPointRemover(store);\n\t\tconst turbineMapPointsRaw = buildMapPointsGetter(store);\n\t\tconst turbineMapPoints = computed(\n\t\t\t() => turbineMapPointsRaw().map(p => ({\n\t\t\t\ty: p.airflow[airflowUnits.value],\n\t\t\t\tx: p.pressureRatio\n\t\t\t}))\n\t\t)\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas.value = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.value.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas.value,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawCurve(turbineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawCurve(turbineMapPoints.value) }],\n\t\t\t\tminY: minAirflow,\n\t\t\t\tmaxY: maxAirflow,\n\t\t\t\tyStep: airflowInterval,\n\t\t\t\tminX: minPressureRatio,\n\t\t\t\tmaxX: maxPressureRatio,\n\t\t\t\txStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => turbineMapPoints.value,\n\t\t\t\tpoints => { graph.drawCurve(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst findMapPointIndex = (pressureRatio: number, airflow: MassAirflow): number => {\n\t\t\treturn turbineMapPointsRaw().findIndex((point) => {\n\t\t\t\tif (point.pressureRatio === pressureRatio || (point.pressureRatio * 1.05 > pressureRatio && point.pressureRatio * 0.95 < pressureRatio)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.airflow.SI === airflow.SI ||\n\t\t\t\t\t\t(point.airflow.SI * 1.05 > airflow.SI && point.airflow.SI * 0.95 < airflow.SI)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick\n\t\t} = useMouseControl<number, MassAirflow>({\n\t\t\toriginX,\n\t\t\toriginY,\n\t\t\tmapWidth,\n\t\t\tmapHeight,\n\t\t\tpadding,\n\t\t\tminX: minAirflow,\n\t\t\tmaxX: maxAirflow,\n\t\t\tminY: minPressureRatio,\n\t\t\tmaxY: maxPressureRatio,\n\t\t\ttransformYValue: a => new MassAirflow(a, airflowUnits.value),\n\t\t\ttransformXValue: a => a,\n\t\t\tonHover: (pressureRatio, airflow) => {\n\t\t\t\tif (contextPoint > -1) {\n\t\t\t\t\tsetMapPoint(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\t\tairflow,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextPoint\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonMouseDown: (pressureRatio, airflow) => {\n\t\t\t\tcontextPoint = findMapPointIndex(pressureRatio, airflow);\n\t\t\t},\n\t\t\tonMouseUp: () => { contextPoint = -1 },\n\t\t\tonRightClick: (pressureRatio, airflow) => {\n\t\t\t\tconst pointIndex = findMapPointIndex(pressureRatio, airflow);\n\n\t\t\t\tif (pointIndex < 0) {\n\t\t\t\t\tinsertMapPoint({\n\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\tairflow,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tremoveMapPoint(turbineMapPointsRaw()[pointIndex]);\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick,\n\t\t\tairflowUnits\n\t\t}\n\t},\n})\n","import { render } from \"./TurbineMap.vue?vue&type=template&id=6f5fe13d&scoped=true\"\nimport script from \"./TurbineMap.vue?vue&type=script&lang=ts\"\nexport * from \"./TurbineMap.vue?vue&type=script&lang=ts\"\n\nimport \"./TurbineMap.vue?vue&type=style&index=0&id=6f5fe13d&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-6f5fe13d\"\n\nexport default script","\nimport { defineComponent } from \"vue\"\nimport { ExternalMap } from \"@/store/external-map\"\nimport Grid from \"./Grid.vue\"\nimport EngineMap from \"./EngineMap.vue\"\nimport MapImage from \"./MapImage.vue\"\nimport TurbineModel from \"./TurbineMap.vue\"\n\nenum MapLayer {\n\tCompressorMap = \"compressor-map\",\n\tCompressorGrid = \"compressor-grid\",\n\tEngineMap = \"engine-map\",\n\tTurbineMap = \"turbine-map\",\n\tTurbineGrid = \"turbine-grid\",\n\tTurbineModel = \"turbine-model\"\n}\n\nconst defaultConfig = {\n\twidth: 1208,\n\theight: 908,\n\tpadding: 100\n};\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: {\n\t\tMapImage,\n\t\tGrid,\n\t\tEngineMap,\n\t\tTurbineModel,\n\t},\n\tsetup: () => ({\n\t\tMapLayer,\n\t\tExternalMap,\n\t\tcanvasHeight: defaultConfig.height,\n\t\tcanvasWidth: defaultConfig.width,\n\t\tgridPadding: defaultConfig.padding\n\t})\n})\n","import { render } from \"./Maps.vue?vue&type=template&id=a3c64838\"\nimport script from \"./Maps.vue?vue&type=script&lang=ts\"\nexport * from \"./Maps.vue?vue&type=script&lang=ts\"\n\nimport \"./Maps.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n\t<div class=\"map-points-container\">\n\t\t<div\n\t\t\tv-for=\"(point, index) in points\"\n\t\t\t:key=\"index\">\n\t\t\t<form v-on:submit.prevent=\"removeEngineMapPoint(point)\">\n\t\t\t\t<fieldset class=\"map-point\">\n\t\t\t\t\t<input type=number v-model=\"point.pressure\" step=\"0.01\" />\n\t\t\t\t\t<input type=number v-model=\"point.rpm\" step=\"100\" />\n\t\t\t\t\t<button type=\"submit\">remove</button>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</div>\n\t\t<form v-on:submit.prevent=\"addEngineMapPoint\">\n\t\t\t<fieldset>\n\t\t\t\t<label for=\"engine-pressure\">Pressure (bar)</label>\n\t\t\t\t<input id=\"engine-pressure\" type=number v-model=\"enginePressure\" step=\"0.01\" />\n\t\t\t\t<label for=\"engine-speed\">Engine speed (rpm)</label>\n\t\t\t\t<input id=\"engine-speed\" type=number v-model=\"engineSpeed\" step=\"100\" />\n\t\t\t</fieldset>\n\t\t\t<button type=\"submit\">Add!</button>\n\t\t</form>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from \"vue\"\nimport { useStore } from \"vuex\"\nimport {\n\tbuildMapPointsGetter,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildAccessor as buildMapPointAccessor,\n} from \"@/store/engine-map\"\nimport { Pressure } from \"@/physics/units\";\n\nexport default defineComponent({\n\tname: \"EngineMapPoints\",\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst enginePressure = ref(1);\n\t\tconst engineSpeed = ref(1000);\n\n\t\tconst pressureUnits = computed(buildMapPointAccessor(\"mapPressureUnits\", store));\n\t\tconst rawPoints = computed(buildMapPointsGetter(store));\n\t\tconst points = computed(() => rawPoints.value.map(point => {\n\t\t\treturn {\n\t\t\t\tget pressure () {\n\t\t\t\t\treturn point.pressure[pressureUnits.value]\n\t\t\t\t},\n\t\t\t\tset pressure (p: number) {\n\t\t\t\t\tpoint.pressure[pressureUnits.value] = p\n\t\t\t\t},\n\t\t\t\tget rpm () {\n\t\t\t\t\treturn point.rpm\n\t\t\t\t},\n\t\t\t\tset rpm (r: number) {\n\t\t\t\t\tpoint.rpm = r\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\n\t\tconst removeEngineMapPoint = buildMapPointRemover(store);\n\n\t\tconst addEngineMapPoint = () => {\n\t\t\tinsertMapPoint({ pressure: new Pressure(enginePressure.value, pressureUnits.value), rpm: engineSpeed.value })\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\tpoints,\n\t\t\tenginePressure,\n\t\t\tengineSpeed,\n\t\t\taddEngineMapPoint,\n\t\t\tremoveEngineMapPoint\n\t\t}\n\t}\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.map-points-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.map-point {\n\tdisplay: flex;\n}\n</style>","\nimport { defineComponent, computed, ref } from \"vue\"\nimport { useStore } from \"vuex\"\nimport {\n\tbuildMapPointsGetter,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildAccessor as buildMapPointAccessor,\n} from \"@/store/engine-map\"\nimport { Pressure } from \"@/physics/units\";\n\nexport default defineComponent({\n\tname: \"EngineMapPoints\",\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst enginePressure = ref(1);\n\t\tconst engineSpeed = ref(1000);\n\n\t\tconst pressureUnits = computed(buildMapPointAccessor(\"mapPressureUnits\", store));\n\t\tconst rawPoints = computed(buildMapPointsGetter(store));\n\t\tconst points = computed(() => rawPoints.value.map(point => {\n\t\t\treturn {\n\t\t\t\tget pressure () {\n\t\t\t\t\treturn point.pressure[pressureUnits.value]\n\t\t\t\t},\n\t\t\t\tset pressure (p: number) {\n\t\t\t\t\tpoint.pressure[pressureUnits.value] = p\n\t\t\t\t},\n\t\t\t\tget rpm () {\n\t\t\t\t\treturn point.rpm\n\t\t\t\t},\n\t\t\t\tset rpm (r: number) {\n\t\t\t\t\tpoint.rpm = r\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\n\t\tconst removeEngineMapPoint = buildMapPointRemover(store);\n\n\t\tconst addEngineMapPoint = () => {\n\t\t\tinsertMapPoint({ pressure: new Pressure(enginePressure.value, pressureUnits.value), rpm: engineSpeed.value })\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\tpoints,\n\t\t\tenginePressure,\n\t\t\tengineSpeed,\n\t\t\taddEngineMapPoint,\n\t\t\tremoveEngineMapPoint\n\t\t}\n\t}\n})\n","import { render } from \"./EngineMapPoints.vue?vue&type=template&id=0497d696&scoped=true\"\nimport script from \"./EngineMapPoints.vue?vue&type=script&lang=ts\"\nexport * from \"./EngineMapPoints.vue?vue&type=script&lang=ts\"\n\nimport \"./EngineMapPoints.vue?vue&type=style&index=0&id=0497d696&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-0497d696\"\n\nexport default script","<template>\n\t<form>\n\t\t<fieldset>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"h-scale\">Horizontal scale</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"h-scale\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tstep=\"0.001\"\n\t\t\t\t\tv-model=\"hScale\">\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"h-offset\">Horizontal offset</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"h-offset\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tv-model=\"hOffset\">\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"v-scale\">Vertical scale</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"v-scale\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tstep=\"0.001\"\n\t\t\t\t\tv-model=\"vScale\">\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"v-offset\">Vertical offset</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"v-offset\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tv-model=\"vOffset\">\n\t\t\t</div>\n\t\t</fieldset>\n\t</form>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n\tbuildAccessor,\n\tExternalMap\n} from \"@/store/external-map\";\n\ntype MapScaleControlsProps = {\n\tmapName: ExternalMap;\n}\n\nexport default defineComponent({\n\tname: \"MapScaleControls\",\n\tprops: {\n\t\tmapName: String\n\t},\n\tsetup: (props) => {\n\t\tconst { mapName } = props as MapScaleControlsProps;\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildAccessor(mapName, \"hOffset\", store))\n\t\tconst vOffset = computed(buildAccessor(mapName, \"vOffset\", store))\n\t\tconst hScale = computed(buildAccessor(mapName, \"hScale\", store))\n\t\tconst vScale = computed(buildAccessor(mapName, \"vScale\", store))\n\n\t\treturn {\n\t\t\thOffset,\n\t\t\tvOffset,\n\t\t\thScale,\n\t\t\tvScale\n\t\t}\n\t}\n})\n</script>","\nimport { defineComponent, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n\tbuildAccessor,\n\tExternalMap\n} from \"@/store/external-map\";\n\ntype MapScaleControlsProps = {\n\tmapName: ExternalMap;\n}\n\nexport default defineComponent({\n\tname: \"MapScaleControls\",\n\tprops: {\n\t\tmapName: String\n\t},\n\tsetup: (props) => {\n\t\tconst { mapName } = props as MapScaleControlsProps;\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildAccessor(mapName, \"hOffset\", store))\n\t\tconst vOffset = computed(buildAccessor(mapName, \"vOffset\", store))\n\t\tconst hScale = computed(buildAccessor(mapName, \"hScale\", store))\n\t\tconst vScale = computed(buildAccessor(mapName, \"vScale\", store))\n\n\t\treturn {\n\t\t\thOffset,\n\t\t\tvOffset,\n\t\t\thScale,\n\t\t\tvScale\n\t\t}\n\t}\n})\n","import { render } from \"./MapScaleControls.vue?vue&type=template&id=7703efe7\"\nimport script from \"./MapScaleControls.vue?vue&type=script&lang=ts\"\nexport * from \"./MapScaleControls.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport {\n\tdefineComponent,\n\tcomputed,\n\twatch,\n\tRef,\n\tWritableComputedRef,\n\tref,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport { ExternalMap } from \"@/store/external-map\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport Maps from \"./Maps.vue\"\nimport EngineMapPoints from \"./EngineMapPoints.vue\"\nimport MapScaleControls from \"./MapScaleControls.vue\"\nimport {\n\tMassAirflowUnits,\n\tMassAirflow,\n\tVolumeUnit,\n\tPressureUnit,\n\tTemperatureUnit\n} from \"@/physics/units\";\n\ntype ValueModelizer = <T>(value: Ref, units: Ref<T>) => WritableComputedRef<number>\nconst modelizeValue: ValueModelizer = (value, units) => computed({\n\tget () { return value.value[units.value] },\n\tset (input: number) { value.value[units.value] = input }\n})\n\nexport default defineComponent({\n\tname: \"Home\",\n\tcomponents: {\n\t\tMaps,\n\t\tEngineMapPoints,\n\t\tMapScaleControls\n\t},\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst airflowUnits = computed(buildEngineMapAccessor(\"airflowUnits\", store));\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store))\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store))\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store))\n\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\n\t\tconst engineDisplacement = modelizeValue(computed(buildEngineMapAccessor(\"displacement\", store)), ref(VolumeUnit.cc));\n\t\tconst ambientAirPressure = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirPressure\", store)), ref(PressureUnit.mbar));\n\t\tconst ambientAirTemperature = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirTemperature\", store)), ref(TemperatureUnit.C));\n\n\t\twatch(\n\t\t\t() => airflowUnits.value,\n\t\t\t(newUnits, prevUnits) => {\n\t\t\t\tminAirflow.value = MassAirflow.convert(prevUnits, minAirflow.value, newUnits)\n\t\t\t\tmaxAirflow.value = MassAirflow.convert(prevUnits, maxAirflow.value, newUnits)\n\t\t\t\tairflowInterval.value = MassAirflow.convert(prevUnits, airflowInterval.value, newUnits)\n\t\t\t}\n\t\t)\n\n\t\tconst airflowUnitStep = computed(() => {\n\t\t\tif (airflowUnits.value === MassAirflowUnits.kgs) {\n\t\t\t\treturn 0.05;\n\t\t\t}\n\t\t\treturn 1;\n\t\t})\n\n\t\treturn {\n\t\t\tMassAirflowUnits,\n\t\t\tExternalMap,\n\t\t\tairflowUnits,\n\t\t\tminAirflow,\n\t\t\tmaxAirflow,\n\t\t\tairflowInterval,\n\t\t\tminPressureRatio,\n\t\t\tmaxPressureRatio,\n\t\t\tpressureRatioStep,\n\t\t\tairflowUnitStep,\n\t\t\tengineDisplacement,\n\t\t\tambientAirPressure,\n\t\t\tambientAirTemperature\n\t\t};\n\t},\n});\n","import { render } from \"./Home.vue?vue&type=template&id=1f6c86ce\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","import { RouteRecordRaw, createRouter, createWebHashHistory } from \"vue-router\";\nimport Home from \"../views/Home.vue\";\n\nconst routes: RouteRecordRaw[] = [\n\t{\n\t\tpath: \"/\",\n\t\tname: \"Home\",\n\t\tcomponent: Home,\n\t},\n];\n\nconst router = createRouter({\n\thistory: createWebHashHistory(),\n\troutes,\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\nimport { ExternalMapConfigState, externalMap, NAMESPACE as externalMapNamespace } from \"./external-map\";\nimport { GridConfigState, grid, NAMESPACE as gridNamespace } from \"./grid\";\nimport { EngineMapState, engineMap, NAMESPACE as engineMapNamespace } from \"./engine-map\"\nimport { TurbineModelState, turbineModel, NAMESPACE as turbineModelNamespace } from \"./turbine-model\";\n\nexport type State = {\n\t[externalMapNamespace]: ExternalMapConfigState;\n\t[gridNamespace]: GridConfigState;\n\t[engineMapNamespace]: EngineMapState;\n\t[turbineModelNamespace]: TurbineModelState;\n}\n\nexport default createStore<State>({\n\tmodules: {\n\t\t[externalMapNamespace]: externalMap,\n\t\t[gridNamespace]: grid,\n\t\t[engineMapNamespace]: engineMap,\n\t\t[turbineModelNamespace]: turbineModel,\n\t},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\n\ncreateApp(App).use(router).use(store).mount(\"#app\");\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&lang=scss\"","import { ABSOLUTE_ZERO_CELSIUS } from \"@/physics/constants\";\nimport { Unit } from \"./Unit\";\n\nexport enum TemperatureUnit {\n\tK = \"kelvin\",\n\tC = \"celsius\",\n\tF = \"farenheit\",\n}\n\nconst celsiusToFarenheit = (celsius: number): number => celsius * 9 / 5 + 32;\nconst farenheitToCelsius = (farenheit: number): number => (farenheit - 32) * 5 / 9;\nconst kelvinToFarenheit = (kelvin: number): number => celsiusToFarenheit(kelvin - ABSOLUTE_ZERO_CELSIUS);\nconst farenheitToKelvin = (farenheit: number): number => farenheitToCelsius(farenheit) + ABSOLUTE_ZERO_CELSIUS;\n\nexport class Temperature implements Unit {\n\tprivate _K = 0;\n\tprivate _C = -1 * ABSOLUTE_ZERO_CELSIUS;\n\tprivate _F = kelvinToFarenheit(0);\n\n\tconstructor(value: number, unit = TemperatureUnit.K) {\n\t\tthis[unit] = value;\n\t}\n\n\tget SI () { return this._K }\n\n\tset [TemperatureUnit.K] (value: number) {\n\t\tthis._K = value;\n\t\tthis._C = value - ABSOLUTE_ZERO_CELSIUS;\n\t\tthis._F = kelvinToFarenheit(value);\n\t}\n\tget [TemperatureUnit.K] () { return this._K; }\n\n\tset [TemperatureUnit.C] (value: number) {\n\t\tthis._K = value - ABSOLUTE_ZERO_CELSIUS;\n\t\tthis._C = value;\n\t\tthis._F = celsiusToFarenheit(value);\n\t}\n\tget [TemperatureUnit.C] () { return this._C; }\n\n\tset [TemperatureUnit.F] (value: number) {\n\t\tthis._K = farenheitToKelvin(value);\n\t\tthis._C = farenheitToCelsius(value);\n\t\tthis._F = value;\n\t}\n\tget [TemperatureUnit.F] () { return this._F; }\n}\n"],"sourceRoot":""}