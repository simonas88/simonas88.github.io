{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/TurbineMapOnCompressor.vue?7a0d","webpack:///./src/views/EngineMap.vue?a88c","webpack:///./src/views/Maps.vue?5831","webpack:///./src/physics/units/Pressure.ts","webpack:///./src/physics/units/Power.ts","webpack:///./src/physics/units/Volume.ts","webpack:///./src/components/Tooltip.vue?0109","webpack:///./src/physics/constants.ts","webpack:///./src/views/EngineMapPoints.vue?8317","webpack:///./src/physics/units/index.ts","webpack:///./src/App.vue?9b0a","webpack:///./src/physics/units/Airflow.ts","webpack:///./src/App.vue","webpack:///./src/App.vue?72a1","webpack:///./src/views/Home.vue","webpack:///./src/store/external-map.ts","webpack:///./src/store/grid.ts","webpack:///./src/store/engine-map.ts","webpack:///./src/views/Maps.vue","webpack:///./src/views/Grid.vue","webpack:///./src/views/graphics.ts","webpack:///./src/views/grid-watchers.ts","webpack:///./src/views/Grid.vue?031a","webpack:///./src/views/Grid.vue?3c29","webpack:///./src/views/EngineMap.vue","webpack:///./src/physics/calculations.ts","webpack:///./src/views/mouse-control.ts","webpack:///./src/components/Tooltip.vue","webpack:///./src/components/Tooltip.vue?9425","webpack:///./src/components/Tooltip.vue?4cd1","webpack:///./src/views/EngineMap.vue?4439","webpack:///./src/views/EngineMap.vue?9317","webpack:///./src/views/ExternalMap.vue","webpack:///./src/views/ExternalMap.vue?5a6b","webpack:///./src/views/ExternalMap.vue?98d7","webpack:///./src/views/TurbineMap.vue","webpack:///./src/store/turbine-model.ts","webpack:///./src/views/TurbineMap.vue?f889","webpack:///./src/views/TurbineMap.vue?c47d","webpack:///./src/views/TurbineMapOnCompressor.vue","webpack:///./src/views/TurbineMapOnCompressor.vue?f947","webpack:///./src/views/TurbineMapOnCompressor.vue?44da","webpack:///./src/views/Maps.vue?2b15","webpack:///./src/views/Maps.vue?cc93","webpack:///./src/views/EngineMapPoints.vue","webpack:///./src/views/EngineMapPoints.vue?90d5","webpack:///./src/views/EngineMapPoints.vue?7f1a","webpack:///./src/views/MapScaleControls.vue","webpack:///./src/views/MapScaleControls.vue?a3ed","webpack:///./src/views/MapScaleControls.vue?69fb","webpack:///./src/views/Home.vue?5ba0","webpack:///./src/views/Home.vue?f4ee","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/views/TurbineMap.vue?7c95","webpack:///./src/views/Home.vue?194a","webpack:///./src/physics/units/Temperature.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","PressureUnit","Pressure","unit","Pa","_pa","_kpa","_bar","_mbar","_psi","this","ambient","SI","ratio","another","kPa","bar","mbar","psi","PowerUnit","Power","units","W","_watt","_kilowatt","_bhp","kW","BHP","VolumeUnit","Volume","m3","_cc","_m3","cc","AIR_SPECIFIC_GAS_CONSTANT","ABSOLUTE_ZERO_CELSIUS","LBS_PER_KG","PA_PER_PSI","BHP_PER_KW","CP_AIR_1100K","CP_AIR_288K","GAMMA_AIR_1100K","GAMMA_AIR_288K","MassAirflowUnits","convertToLbsMin","input","convertToKgS","MassAirflow","kgs","_gs","_kgs","_lbsmin","Math","round","gs","lbsmin","inputType","outputType","script","render","class","for","id","airflowUnits","type","minAirflow","step","airflowUnitStep","maxAirflow","airflowInterval","minPressureRatio","maxPressureRatio","pressureRatioStep","map-name","ExternalMap","Compressor","engineDisplacement","ambientAirTemperature","ambientAirPressure","Turbine","style","NAMESPACE","namespaced","map","store","getters","set","commit","externalMap","state","hScale","hOffset","vScale","vOffset","maps","mutations","grid","compressorGrid","minX","maxX","xStep","minY","maxY","yStep","turbineGrid","buildMapPointsGetter","buildMapPointInserter","point","dispatch","buildMapPointRemover","buildMapPointModifier","index","engineMap","mapPressureUnits","points","pressure","rpm","displacement","C","actions","addPoint","nextPoints","filter","sort","a","b","removePoint","canvas-id","MapLayer","CompressorMap","width","canvasWidth","height","canvasHeight","imgSrc","CompressorGrid","padding","gridPadding","TurbineMapOnCompressor","EngineMap","TurbineMap","TurbineGrid","TurbineModel","canvasId","GRID_STROKE_STYLE","config","canvasRef","yInterval","xInterval","context","getContext","gridWidth","gridHeight","origin","font","xAxisSpacing","yAxisSpacing","clear","mergedConfig","clearRect","originX","originY","beginPath","strokeStyle","moveTo","lineTo","stroke","x","label","toFixed","fillText","measureText","y","rect","transformX","transformY","scale","radius","fill","arc","PI","lineWidth","first","restPoints","forEach","closePath","fillStyle","drawCircle","f","getImageRedrawer","image","canvas","ctx","drawImage","gridActions","newValues","setup","props","Number","String","gridCanvas","document","getElementById","redrawGrid","drawGrid","drawAxis","handleHover","handleMouseDown","handleMouseUp","handleRightClick","showTooltip","hideTooltip","tooltipX","tooltipY","visible","tooltipVisible","tooltip-id","pointerData","boost","maf","compressorPower","temperature","getVolume","volumetricEfficiency","throttling","getVolumeFlow","volume","getRPMfromMAF","massAirflow","airDensity","volumeFlow","GAMMA_RATIO_S_288K","GAMMA_RATIO_S_1100K","ambientTemperature","pressureRatio","compressorEfficiency","pow","inletTemperature","turbineEfficiency","buildInterpolator","getDataPoints","getX","getY","dataPoints","exactMatch","find","bigIndex","findIndex","smallIndex","deltaX","deltaY","correctedFlow","referenceTemperature","exhaustTemperature","sqrt","mapHeight","mapWidth","transformXValue","transformYValue","onHover","onMouseDown","onMouseUp","onRightClick","getMapX","mapX","getMapY","mapY","getMapDataFromAtCanvasXY","handleMouseEvent","e","xValue","yValue","preventDefault","tooltipId","handleMouseenter","handleMouseleave","Boolean","self","className","__scopeId","components","Tooltip","graphCanvas","setTooltipPosition","graphCanvasViewport","left","top","windowResizeHandler","getBoundingClientRect","setMapPoint","insertMapPoint","removeMapPoint","correctMaf","getMAFlocal","actualMaf","correctedMaf","engineMapRawPoints","engineMapPoints","getPressureRatio","addEventListener","graph","drawMap","removeEventListener","contextPoint","getRPM","multiply","findMapPointIndex","pressureAtMouse","pointIndex","imgCanvas","Image","src","onload","floor","redrawImage","phi","turbinePower","turbineModel","gasflow","changePoint","turbineMapPointsRaw","turbineMapPoints","drawCurve","airflow","interpolateTurbinePower","impossiblePressures","afr","plotFunction","reduce","agg","defaultConfig","Grid","removeEngineMapPoint","addEngineMapPoint","enginePressure","engineSpeed","pressureUnits","rawPoints","mapName","Maps","EngineMapPoints","MapScaleControls","newUnits","prevUnits","convert","routes","path","component","Home","router","history","App","use","mount","TemperatureUnit","celsiusToFarenheit","celsius","celsiusToKelvin","farenheitToCelsius","farenheit","farenheitToKelvin","kelvinToCelsius","kelvin","kelvinToFarenheit","Temperature","K","_K","_C","_F","F"],"mappings":"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","file":"js/app.7c5fae3e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./TurbineMapOnCompressor.vue?vue&type=style&index=0&id=545c6c6e&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./TurbineMapOnCompressor.vue?vue&type=style&index=0&id=545c6c6e&lang=scss&scoped=true\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMap.vue?vue&type=style&index=0&id=5af6de60&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMap.vue?vue&type=style&index=0&id=5af6de60&lang=scss&scoped=true\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Maps.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Maps.vue?vue&type=style&index=0&lang=scss\"","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PA_PER_PSI } from \"@/physics/constants\";\nimport { Unit } from \"./Unit\";\n\nexport enum PressureUnit {\n\tPa = \"pascal\",\n\tkPa = \"kilopascal\",\n\tbar = \"bar\",\n\tmbar = \"milibar\",\n\tpsi = \"psi\"\n}\n\nexport class Pressure implements Unit {\n\tprivate _pa = 0;\n\tprivate _kpa = 0;\n\tprivate _bar = 0;\n\tprivate _mbar = 0;\n\tprivate _psi = 0;\n\n\tconstructor(value: number, unit = PressureUnit.Pa) {\n\t\tthis[unit] = value;\n\t}\n\n\tget SI () { return this._pa }\n\n\tset [PressureUnit.Pa] (value: number) {\n\t\tthis._pa = value;\n\t\tthis._kpa = value / 1000;\n\t\tthis._bar = value / 100000;\n\t\tthis._mbar = value / 100;\n\t\tthis._psi = value / PA_PER_PSI;\n\t}\n\tget [PressureUnit.Pa] () { return this._pa }\n\n\tset [PressureUnit.kPa] (value: number) {\n\t\tthis._pa = value * 1000;\n\t\tthis._kpa = value;\n\t\tthis._bar = value / 100;\n\t\tthis._mbar = value * 10;\n\t\tthis._psi = value * 1000 / PA_PER_PSI;\n\t}\n\tget [PressureUnit.kPa] () { return this._kpa }\n\n\tset [PressureUnit.bar] (value: number) {\n\t\tthis._pa = value * 100000;\n\t\tthis._kpa = value * 100;\n\t\tthis._bar = value;\n\t\tthis._mbar = value * 1000;\n\t\tthis._psi = value * 100000 / PA_PER_PSI;\n\t}\n\tget [PressureUnit.bar] () { return this._bar }\n\n\tset [PressureUnit.mbar] (value: number) {\n\t\tthis._pa = value * 100;\n\t\tthis._kpa = value / 10;\n\t\tthis._bar = value / 1000;\n\t\tthis._mbar = value;\n\t\tthis._psi = value * 100 / PA_PER_PSI;\n\t}\n\tget [PressureUnit.mbar] () { return this._mbar }\n\n\tset [PressureUnit.psi] (value: number) {\n\t\tthis._psi = value;\n\t\tthis._pa = PA_PER_PSI * value;\n\t\tthis._kpa = this._pa / 1000;\n\t\tthis._bar = this._pa / 100000;\n\t\tthis._mbar = this._pa / 100;\n\t}\n\tget [PressureUnit.psi] () { return this._psi }\n\n\tgetRelativePressure(ambient: Pressure): Pressure {\n\t\treturn new Pressure(this.SI - ambient.SI)\n\t}\n\n\tgetPressureRatio(ambient: Pressure): number {\n\t\treturn this.SI / ambient.SI\n\t}\n\n\tmultiply(ratio: number): Pressure {\n\t\treturn new Pressure(this.SI * ratio)\n\t}\n\n\tcompareTo(another: Pressure): number {\n\t\treturn this.SI - another.SI;\n\t}\n}","import { Unit } from \"./Unit\";\nimport { BHP_PER_KW } from \"../constants\";\n\nexport enum PowerUnit {\n\tW = \"watt\",\n\tkW = \"kilowatt\",\n\tBHP = \"brake horsepower\",\n}\n\nexport class Power implements Unit {\n\tprivate _watt = 0;\n\tprivate _kilowatt = 0;\n\tprivate _bhp = 0;\n\n\tconstructor(value: number, units = PowerUnit.W) {\n\t\tthis[units] = value;\n\t}\n\n\tget SI () {\n\t\treturn this._watt;\n\t}\n\n\tset [PowerUnit.W] (value: number) {\n\t\tthis._watt = value;\n\t\tthis._kilowatt = value / 1000;\n\t\tthis._bhp = this._kilowatt * BHP_PER_KW;\n\t}\n\tget [PowerUnit.W] () { return this._watt }\n\n\tset [PowerUnit.kW] (value: number) {\n\t\tthis._watt = value * 1000;\n\t\tthis._kilowatt = value;\n\t\tthis._bhp = value * BHP_PER_KW;\n\t}\n\tget [PowerUnit.kW] () { return this._kilowatt }\n\n\tset [PowerUnit.BHP] (value: number) {\n\t\tthis._bhp = value;\n\t\tthis._kilowatt = value / BHP_PER_KW;\n\t\tthis._watt = this._kilowatt * 1000;\n\t}\n\tget [PowerUnit.BHP] () { return this._bhp }\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport { Unit } from \"./Unit\";\n\nexport enum VolumeUnit {\n\tcc = \"cubic centimeters\",\n\tm3 = \"cubic meters\",\n}\n\nexport class Volume implements Unit {\n\tprivate _cc = 0;\n\tprivate _m3 = 0;\n\n\tconstructor(value: number, unit = VolumeUnit.m3) {\n\t\tthis[unit] = value;\n\t}\n\n\tget SI () { return this._m3; }\n\n\tset [VolumeUnit.cc] (value: number) {\n\t\tthis._cc = value;\n\t\tthis._m3 = value / 1000000;\n\t}\n\tget [VolumeUnit.cc] () { return this._cc }\n\n\tset[VolumeUnit.m3] (value: number) {\n\t\tthis._m3 = value;\n\t\tthis._cc = value * 1000000\n\t}\n\tget [VolumeUnit.m3] () { return this._m3 }\n}\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Tooltip.vue?vue&type=style&index=0&id=a3accbf2&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Tooltip.vue?vue&type=style&index=0&id=a3accbf2&lang=scss&scoped=true\"","/* eslint-disable @typescript-eslint/camelcase */\nexport const GAS_CONSTANT = 8.314463; // J⋅K−1⋅mol−1\nexport const AIR_SPECIFIC_GAS_CONSTANT = 287.058; // J/(kg·K)\nexport const ZERO_CELSIUS_KELVIN = 273.15;\nexport const ABSOLUTE_ZERO_CELSIUS = -273.15;\nexport const ABSOLUTE_ZERO_FARENHEIT = -459.67;\nexport const LBS_PER_KG = 2.204623;\nexport const PA_PER_PSI = 6894.757293;\nexport const BHP_PER_KW = 1.341022;\nexport const CP_AIR_1100K = 1159; // J/Kg K\n// export const Cv_AIR_1100K = 871.6; // J/Kg K\nexport const CP_AIR_288K = 1006; // J/Kg K\n// export const Cv_AIR_288K = 717.5; // J/Kg K\nexport const GAMMA_AIR_1100K = 1.329;\nexport const GAMMA_AIR_288K = 1.402;\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMapPoints.vue?vue&type=style&index=0&id=0497d696&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMapPoints.vue?vue&type=style&index=0&id=0497d696&lang=scss&scoped=true\"","export * from \"./Airflow\";\nexport * from \"./Power\";\nexport * from \"./Pressure\";\nexport * from \"./Temperature\";\nexport * from \"./Unit\";\nexport * from \"./Volume\";","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"","import { LBS_PER_KG } from \"@/physics/constants\";\nimport { Unit } from \"./Unit\";\n\nexport enum MassAirflowUnits {\n\tgs = \"g/s\",\n\tkgs = \"kg/s\",\n\tlbsmin = \"lbs/min\"\n}\n\nconst convertToLbsMin = (input: number) => {\n\treturn input * LBS_PER_KG * 60;\n}\n\nconst convertToKgS = (input: number) => {\n\treturn (input / 60) / LBS_PER_KG;\n}\n\nexport class MassAirflow implements Unit {\n\tprivate _gs = 0;\n\tprivate _kgs = 0;\n\tprivate _lbsmin = 0;\n\n\tstatic convert(inputType: MassAirflowUnits, value: number, outputType: MassAirflowUnits): number {\n\t\tif (inputType === outputType) { return value; }\n\n\t\treturn new MassAirflow(value, inputType)[outputType];\n\t}\n\n\tconstructor(value: number, units = MassAirflowUnits.kgs) {\n\t\tthis[units] = value;\n\t}\n\n\tget SI () {\n\t\treturn this._kgs;\n\t}\n\n\tset [MassAirflowUnits.gs] (value: number) {\n\t\tthis._gs = value;\n\t\tthis._kgs = value / 1000;\n\t\tthis._lbsmin = convertToLbsMin(this._kgs);\n\t}\n\tget [MassAirflowUnits.gs] () { return this.round(this._gs) }\n\n\tset [MassAirflowUnits.kgs] (value: number) {\n\t\tthis._gs = value * 1000;\n\t\tthis._kgs = value;\n\t\tthis._lbsmin = convertToLbsMin(this._kgs);\n\t}\n\tget [MassAirflowUnits.kgs] () { return this.round(this._kgs) }\n\n\tset [MassAirflowUnits.lbsmin] (value: number) {\n\t\tthis._lbsmin = value;\n\t\tthis._kgs = convertToKgS(value);\n\t\tthis._gs = this._kgs * 1000;\n\t}\n\tget [MassAirflowUnits.lbsmin] () { return this.round(this._lbsmin) }\n\n\tround(input: number) {\n\t\treturn Math.round(input * 10000) / 10000\n\t}\n}","<template>\n\t<router-view />\n</template>\n\n<style lang=\"scss\">\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n#app {\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: #2c3e50;\n\n\tbackground-color: azure;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\t// justify-content: center;\n\t// align-items: center;\n\t// height: 100vh;\n\t// width: 100vw;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=ab1c9548\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n\t<Maps />\n\t<div class=\"calculation-container\">\n\t\t<form>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"airflow\">Mass airflow units</label>\n\t\t\t\t<fieldset id=\"airflow\">\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"airflow-units\"\n\t\t\t\t\t\tv-model=\"airflowUnits\">\n\t\t\t\t\t\t<option :value=\"MassAirflowUnits.kgs\">kg/s</option>\n\t\t\t\t\t\t<option :value=\"MassAirflowUnits.lbsmin\">Lbs/min</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"min-airflow\">Minimum airflow</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"min-airflow\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"minAirflow\"\n\t\t\t\t\t\t\t:step=\"airflowUnitStep\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-airflow\">Maximum airflow</label><input\n\t\t\t\t\t\t\tid=\"max-airflow\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"maxAirflow\"\n\t\t\t\t\t\t\t:step=\"airflowUnitStep\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"airflow-interval\">Airflow grid step</label><input\n\t\t\t\t\t\t\tid=\"airflow-interval\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"airflowInterval\"\n\t\t\t\t\t\t\tstep=\"any\">\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"min-pressure-ratio\">Min pressure ratio</label>\n\t\t\t\t\t\t<input id=\"min-pressure-ratio\" type=\"number\" v-model=\"minPressureRatio\" step=\"0.5\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-pressure-ratio\">Max pressure ratio</label>\n\t\t\t\t\t\t<input id=\"max-pressure-ratio\" type=\"number\" v-model=\"maxPressureRatio\" step=\"0.5\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-pressure-ratio\">Pressure ratio step</label>\n\t\t\t\t\t\t<input id=\"max-pressure-ratio\" type=\"number\" v-model=\"pressureRatioStep\" step=\"any\">\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t</form>\n\t\t<map-scale-controls :map-name=\"ExternalMap.Compressor\" />\n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"engine-displacement\">Engine displacement (cc)</label>\n\t\t\t\t\t<input id=\"engine-displacement\" type=\"number\" v-model=\"engineDisplacement\" step=\"1\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"ambient-air-temperature\">Ambient air temperature (C)</label>\n\t\t\t\t\t<input id=\"ambient-air-temperature\" type=\"number\" v-model=\"ambientAirTemperature\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"ambient-air-pressure\">Ambient air absolute pressure (mbar)</label>\n\t\t\t\t\t<input id=\"ambient-air-pressure\" type=\"number\" v-model=\"ambientAirPressure\">\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t\t<EngineMapPoints />\n\t\t<map-scale-controls :map-name=\"ExternalMap.Turbine\" style=\"margin-top: 300px;\" />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport {\n\tdefineComponent,\n\tcomputed,\n\twatch,\n\tRef,\n\tWritableComputedRef,\n\tref,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport { ExternalMap } from \"@/store/external-map\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport Maps from \"./Maps.vue\"\nimport EngineMapPoints from \"./EngineMapPoints.vue\"\nimport MapScaleControls from \"./MapScaleControls.vue\"\nimport {\n\tMassAirflowUnits,\n\tMassAirflow,\n\tVolumeUnit,\n\tPressureUnit,\n\tTemperatureUnit\n} from \"@/physics/units\";\n\ntype ValueModelizer = <T>(value: Ref, units: Ref<T>) => WritableComputedRef<number>\nconst modelizeValue: ValueModelizer = (value, units) => computed({\n\tget () { return value.value[units.value] },\n\tset (input: number) { value.value[units.value] = input }\n})\n\nexport default defineComponent({\n\tname: \"Home\",\n\tcomponents: {\n\t\tMaps,\n\t\tEngineMapPoints,\n\t\tMapScaleControls\n\t},\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst airflowUnits = computed(buildEngineMapAccessor(\"airflowUnits\", store));\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store))\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store))\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store))\n\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\n\t\tconst engineDisplacement = modelizeValue(computed(buildEngineMapAccessor(\"displacement\", store)), ref(VolumeUnit.cc));\n\t\tconst ambientAirPressure = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirPressure\", store)), ref(PressureUnit.mbar));\n\t\tconst ambientAirTemperature = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirTemperature\", store)), ref(TemperatureUnit.C));\n\n\t\twatch(\n\t\t\t() => airflowUnits.value,\n\t\t\t(newUnits, prevUnits) => {\n\t\t\t\tminAirflow.value = MassAirflow.convert(prevUnits, minAirflow.value, newUnits)\n\t\t\t\tmaxAirflow.value = MassAirflow.convert(prevUnits, maxAirflow.value, newUnits)\n\t\t\t\tairflowInterval.value = MassAirflow.convert(prevUnits, airflowInterval.value, newUnits)\n\t\t\t}\n\t\t)\n\n\t\tconst airflowUnitStep = computed(() => {\n\t\t\tif (airflowUnits.value === MassAirflowUnits.kgs) {\n\t\t\t\treturn 0.05;\n\t\t\t}\n\t\t\treturn 1;\n\t\t})\n\n\t\treturn {\n\t\t\tMassAirflowUnits,\n\t\t\tExternalMap,\n\t\t\tairflowUnits,\n\t\t\tminAirflow,\n\t\t\tmaxAirflow,\n\t\t\tairflowInterval,\n\t\t\tminPressureRatio,\n\t\t\tmaxPressureRatio,\n\t\t\tpressureRatioStep,\n\t\t\tairflowUnitStep,\n\t\t\tengineDisplacement,\n\t\t\tambientAirPressure,\n\t\t\tambientAirTemperature\n\t\t};\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.calculation-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n</style>\n","import { Module, Store } from \"vuex\";\n\nexport const NAMESPACE = \"externalMap\"\n\nexport enum ExternalMap {\n\tCompressor = \"compressorMap\",\n\tTurbine = \"turbineMap\"\n}\ninterface ExternalMapConfig {\n\thScale: number;\n\thOffset: number;\n\tvScale: number;\n\tvOffset: number;\n}\nexport type ExternalMapConfigState = Record<ExternalMap, ExternalMapConfig>\n\nconst namespaced = (input: keyof ExternalMapConfig): string => `${NAMESPACE}/${input}`;\n\nexport const buildAccessor = <T extends keyof ExternalMapConfig>(\n\tmap: ExternalMap,\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => ExternalMapConfig[T];\n\tset: (input: ExternalMapConfig[T]) => void;\n} => ({\n\t\tget: () => store.getters[`${NAMESPACE}/maps`][map][property],\n\t\tset: (input) => store.commit(namespaced(property), { map, [property]: input })\n\t})\n\nexport const externalMap: Module<ExternalMapConfigState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\t[ExternalMap.Compressor]: {\n\t\t\thScale: 0.687,\n\t\t\thOffset: -52,\n\t\t\tvScale: 0.381,\n\t\t\tvOffset: 91,\n\t\t},\n\t\t[ExternalMap.Turbine]: {\n\t\t\thScale: 0.4941,\n\t\t\thOffset: -6,\n\t\t\tvScale: 0.6305,\n\t\t\tvOffset: 65,\n\t\t}\n\t},\n\tgetters: {\n\t\tmaps: state => state\n\t},\n\tmutations: {\n\t\thScale: (state, { map, hScale }: { map: ExternalMap; hScale: number }) => { state[map].hScale = hScale },\n\t\thOffset: (state, { map, hOffset }: { map: ExternalMap; hOffset: number }) => { state[map].hOffset = hOffset },\n\t\tvScale: (state, { map, vScale }: { map: ExternalMap; vScale: number }) => { state[map].vScale = vScale },\n\t\tvOffset: (state, { map, vOffset }: { map: ExternalMap; vOffset: number }) => { state[map].vOffset = vOffset },\n\t}\n}\n","import { Module, Store } from \"vuex\";\n\nexport const NAMESPACE = \"grid\"\n\nexport interface GridConfig {\n\tminX: number;\n\tmaxX: number;\n\txStep: number;\n\tminY: number;\n\tmaxY: number;\n\tyStep: number;\n}\n\ntype GridType = \"compressorGrid\" | \"turbineGrid\"\n\nexport type GridConfigState = Record<GridType, GridConfig>;\n\nexport const buildAccessor = <T extends keyof GridConfig>(\n\tgrid: GridType,\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => GridConfig[T];\n\tset: (input: GridConfig[T]) => void;\n} => ({\n\t\tget: () => store.getters[`${NAMESPACE}/grid`][grid][property],\n\t\tset: (input) => store.commit(`${NAMESPACE}/${property}`, { grid, [property]: input })\n\t})\n\nexport const grid: Module<GridConfigState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tcompressorGrid: {\n\t\t\tminX: 0,\n\t\t\tmaxX: 60,\n\t\t\txStep: 5,\n\t\t\tminY: 1,\n\t\t\tmaxY: 4,\n\t\t\tyStep: 0.25\n\t\t},\n\t\tturbineGrid: {\n\t\t\tminX: 1,\n\t\t\tmaxX: 3.75,\n\t\t\txStep: 0.25,\n\t\t\tminY: 0,\n\t\t\tmaxY: 25,\n\t\t\tyStep: 2.5\n\t\t}\n\t},\n\tgetters: {\n\t\tgrid: state => state\n\t},\n\tmutations: {\n\t\tminX: (state, { grid, minX }: { grid: GridType; minX: number }) => state[grid].minX = minX,\n\t\tmaxX: (state, { grid, maxX }: { grid: GridType; maxX: number }) => state[grid].maxX = maxX,\n\t\txStep: (state, { grid, xStep }: { grid: GridType; xStep: number }) => state[grid].xStep = xStep,\n\t\tminY: (state, { grid, minY }: { grid: GridType; minY: number }) => state[grid].minY = minY,\n\t\tmaxY: (state, { grid, maxY }: { grid: GridType; maxY: number }) => state[grid].maxY = maxY,\n\t\tyStep: (state, { grid, yStep }: { grid: GridType; yStep: number }) => state[grid].yStep = yStep,\n\t}\n}\n","import { Module, Store } from \"vuex\";\nimport {\n\tMassAirflowUnits,\n\tPressure,\n\tPressureUnit,\n\tTemperature,\n\tTemperatureUnit,\n\tVolume,\n\tVolumeUnit\n} from \"@/physics/units\";\n\nexport const NAMESPACE = \"engineMap\";\n\ntype MapPoint = { pressure: Pressure; rpm: number }\n\nexport type EngineMapState = {\n\tairflowUnits: MassAirflowUnits;\n\tmapPressureUnits: PressureUnit;\n\tpoints: MapPoint[];\n\tdisplacement: Volume;\n\tambientAirTemperature: Temperature;\n\tambientAirPressure: Pressure;\n}\n\nconst namespaced = (input: keyof EngineMapState | \"addPoint\" | \"removePoint\" | \"point\"): string => `${NAMESPACE}/${input}`;\n\nexport const buildMapPointsGetter = (store: Store<{}>) => (): MapPoint[] => store.getters[namespaced(\"points\")]\nexport const buildMapPointInserter = (store: Store<{}>) => (point: MapPoint) => store.dispatch(namespaced(\"addPoint\"), point)\nexport const buildMapPointRemover = (store: Store<{}>) => (point: MapPoint) => store.dispatch(namespaced(\"removePoint\"), point)\nexport const buildMapPointModifier = (store: Store<{}>) => (point: MapPoint, index: number) => store.commit(namespaced(\"point\"), { point, index })\n\nexport const buildAccessor = <T extends keyof EngineMapState>(\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => EngineMapState[T];\n\tset: (input: EngineMapState[T]) => void;\n} => ({\n\t\tget: () => store.getters[namespaced(property)],\n\t\tset: (input) => store.commit(namespaced(property), input)\n\t})\n\nexport const engineMap: Module<EngineMapState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tairflowUnits: MassAirflowUnits.lbsmin,\n\t\tmapPressureUnits: PressureUnit.bar,\n\t\tpoints: [\n\t\t\t{ pressure: new Pressure(2.5, PressureUnit.bar), rpm: 3000 },\n\t\t\t{ pressure: new Pressure(2.5, PressureUnit.bar), rpm: 5300 },\n\t\t\t{ pressure: new Pressure(2.5, PressureUnit.bar), rpm: 6500 }\n\t\t],\n\t\tdisplacement: new Volume(1984, VolumeUnit.cc),\n\t\tambientAirPressure: new Pressure(101325, PressureUnit.Pa),\n\t\tambientAirTemperature: new Temperature(15, TemperatureUnit.C)\n\t},\n\tgetters: {\n\t\tairflowUnits: ({ airflowUnits }) => airflowUnits,\n\t\tmapPressureUnits: ({ mapPressureUnits }) => mapPressureUnits,\n\t\tpoints: ({ points }) => points,\n\t\tdisplacement: ({ displacement }) => displacement,\n\t\tambientAirPressure: ({ ambientAirPressure }) => ambientAirPressure,\n\t\tambientAirTemperature: ({ ambientAirTemperature }) => ambientAirTemperature,\n\t},\n\tmutations: {\n\t\tairflowUnits: (state, airflowUnits) => state.airflowUnits = airflowUnits,\n\t\tmapPressureUnits: (state, mapPressureUnits) => state.mapPressureUnits = mapPressureUnits,\n\t\tpoint: (state, { point, index }) => {\n\t\t\tstate.points[index].pressure[state.mapPressureUnits] = point.pressure[state.mapPressureUnits]\n\t\t\tstate.points[index].rpm = point.rpm\n\t\t},\n\t\tpoints: (state, points) => state.points = points,\n\t\tdisplacement: (state, displacement) => state.displacement = displacement,\n\t\tambientAirPressure: (state, ambientAirPressure) => state.ambientAirPressure = ambientAirPressure,\n\t\tambientAirTemperature: (state, ambientAirTemperature) => state.ambientAirTemperature = ambientAirTemperature,\n\t},\n\tactions: {\n\t\taddPoint: ({ commit, state }, point: MapPoint) => {\n\t\t\tconst nextPoints = [\n\t\t\t\t...state.points.filter(p => p.rpm !== point.rpm),\n\t\t\t\tpoint\n\t\t\t].sort((a, b) => a.rpm - b.rpm)\n\n\t\t\tcommit(\"points\", nextPoints)\n\t\t},\n\t\tremovePoint: ({ commit, state }, point: MapPoint) => {\n\t\t\tconst nextPoints = state.points.filter(p => p.rpm !== point.rpm)\n\n\t\t\tcommit(\"points\", nextPoints)\n\t\t}\n\t}\n}","<template>\n\t<div class=\"maps-container\">\n\t\t<div id=\"cold-side-map\">\n\t\t\t<external-map\n\t\t\t\t:canvas-id=\"MapLayer.CompressorMap\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:name=\"ExternalMap.Compressor\"\n\t\t\t\timgSrc=\"./example_compressor_map.jpg\" />\n\t\t\t<grid\n\t\t\t\t:canvas-id=\"MapLayer.CompressorGrid\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:padding=\"gridPadding\"\n\t\t\t\tname=\"compressorGrid\" />\n\t\t\t<turbine-map-on-compressor\n\t\t\t\t:canvas-id=\"MapLayer.TurbineMapOnCompressor\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:padding=\"gridPadding\" />\n\t\t\t<engine-map\n\t\t\t\t:canvas-id=\"MapLayer.EngineMap\"\n\t\t\t\t:width=\"canvasWidth\"\n\t\t\t\t:height=\"canvasHeight\"\n\t\t\t\t:padding=\"gridPadding\" />\n\t\t</div>\n\t\t<div id=\"hot-side-map\">\n\t\t\t<external-map\n\t\t\t\t:canvas-id=\"MapLayer.TurbineMap\"\n\t\t\t\t:width=\"1190\"\n\t\t\t\t:height=\"900\"\n\t\t\t\t:name=\"ExternalMap.Turbine\"\n\t\t\t\timgSrc=\"./example_turbine_map.jpg\" />\n\t\t\t<grid\n\t\t\t\t:canvas-id=\"MapLayer.TurbineGrid\"\n\t\t\t\t:width=\"1190\"\n\t\t\t\t:height=\"900\"\n\t\t\t\t:padding=\"gridPadding\"\n\t\t\t\tname=\"turbineGrid\" />\n\t\t\t<turbine-map\n\t\t\t\t:canvas-id=\"MapLayer.TurbineModel\"\n\t\t\t\t:width=\"1190\"\n\t\t\t\t:height=\"900\"\n\t\t\t\t:padding=\"gridPadding\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\"\nimport { ExternalMap as ExternalMapEnum } from \"@/store/external-map\"\nimport Grid from \"./Grid.vue\"\nimport EngineMap from \"./EngineMap.vue\"\nimport ExternalMap from \"./ExternalMap.vue\"\nimport TurbineMap from \"./TurbineMap.vue\"\nimport TurbineMapOnCompressor from \"./TurbineMapOnCompressor.vue\"\n\nenum MapLayer {\n\tCompressorMap = \"compressor-map\",\n\tCompressorGrid = \"compressor-grid\",\n\tTurbineMapOnCompressor = \"turbine-map-on-compressor\",\n\tEngineMap = \"engine-map\",\n\tTurbineMap = \"turbine-map\",\n\tTurbineGrid = \"turbine-grid\",\n\tTurbineModel = \"turbine-model\"\n}\n\nconst defaultConfig = {\n\twidth: 1208,\n\theight: 908,\n\tpadding: 100\n};\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: {\n\t\tExternalMap,\n\t\tGrid,\n\t\tEngineMap,\n\t\tTurbineMap,\n\t\tTurbineMapOnCompressor,\n\t},\n\tsetup: () => ({\n\t\tMapLayer,\n\t\tExternalMap: ExternalMapEnum,\n\t\tcanvasHeight: defaultConfig.height,\n\t\tcanvasWidth: defaultConfig.width,\n\t\tgridPadding: defaultConfig.padding\n\t})\n})\n</script>\n\n<style lang=\"scss\">\n#cold-side-map {\n\tposition: relative;\n\tbackground-color: white;\n}\n\n#compressor-map {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\topacity: 0.5;\n}\n\n#compressor-grid {\n\ttop: 0;\n\tleft: 0;\n\topacity: 0.9;\n}\n\n#turbine-map-on-compressor {\n\tbackground-color: transparent;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n#engine-map {\n\tbackground-color: transparent;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n#hot-side-map {\n\tposition: relative;\n\tbackground-color: white;\n\twidth: 1175px;\n}\n\n#turbine-map {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\topacity: 0.5;\n}\n\n#turbine-grid {\n\t/* background-color: white; */\n\ttop: 0;\n\tleft: 0;\n\topacity: 0.9;\n}\n\n#turbine-model {\n\tbackground-color: transparent;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n</style>\n","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype GridProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n\tname: \"compressorGrid\" | \"turbineGrid\";\n}\n\nexport default defineComponent({\n\tname: \"Grid\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t\tname: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, padding, height, width, name } = props as GridProps;\n\t\tconst store = useStore();\n\n\t\tconst minX = computed(buildGridAccessor(name, \"minX\", store));\n\t\tconst maxX = computed(buildGridAccessor(name, \"maxX\", store));\n\t\tconst xStep = computed(buildGridAccessor(name, \"xStep\", store));\n\t\tconst minY = computed(buildGridAccessor(name, \"minY\", store));\n\t\tconst maxY = computed(buildGridAccessor(name, \"maxY\", store));\n\t\tconst yStep = computed(buildGridAccessor(name, \"yStep\", store));\n\n\t\tonMounted(() => {\n\t\t\tconst gridCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst grid = new Grid({\n\t\t\t\tcanvasRef: gridCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minX.value,\n\t\t\t\tmaxX: maxX.value,\n\t\t\t\tminY: minY.value,\n\t\t\t\tmaxY: maxY.value,\n\t\t\t\txInterval: xStep.value,\n\t\t\t\tyInterval: yStep.value\n\t\t\t});\n\n\t\t\tconst redrawGrid = () => {\n\t\t\t\tgrid.drawGrid();\n\t\t\t\tgrid.drawAxis();\n\t\t\t}\n\n\t\t\tredrawGrid();\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid,\n\t\t\t\tgridActions: [redrawGrid],\n\t\t\t\tminX,\n\t\t\t\tmaxX,\n\t\t\t\txStep,\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyStep\n\t\t\t})\n\t\t});\n\t},\n})\n</script>\n","const GRID_STROKE_STYLE = \"rgb(134,136,138)\";\n\nexport const greatestCommonDivisor = (a: number, b: number): number => (b === 0\n\t? a\n\t: (greatestCommonDivisor(b, a % b)));\n\ntype GridConstructor = {\n\tcanvasRef: HTMLCanvasElement;\n\theight: number;\n\twidth: number;\n\tpadding: number;\n\tminX: number;\n\tminY: number;\n\tmaxX: number;\n\tmaxY: number;\n\txInterval?: number;\n\tyInterval?: number;\n}\n\nexport class Grid {\n\tprivate context: CanvasRenderingContext2D;\n\n\tprivate height: number;\n\n\tprivate width: number;\n\n\tprivate padding: number;\n\n\tprivate minX: number;\n\n\tprivate minY: number;\n\n\tprivate maxX: number;\n\n\tprivate maxY: number;\n\n\tprivate gridWidth: number;\n\n\tprivate gridHeight: number;\n\n\tprivate origin: [number, number];\n\n\tprivate xInterval: number;\n\tprivate yInterval: number;\n\n\tprivate xAxisSpacing: number;\n\tprivate yAxisSpacing: number;\n\n\tconstructor(config: GridConstructor) {\n\t\tconst {\n\t\t\tcanvasRef,\n\t\t\theight,\n\t\t\twidth,\n\t\t\tpadding,\n\t\t\tminX,\n\t\t\tminY,\n\t\t\tmaxX,\n\t\t\tmaxY,\n\t\t\tyInterval = 0,\n\t\t\txInterval = 0,\n\t\t} = config;\n\n\t\tthis.context = canvasRef.getContext(\"2d\")!; // eslint-disable-line\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t\tthis.padding = padding;\n\t\tthis.minX = minX;\n\t\tthis.minY = minY;\n\t\tthis.maxX = maxX;\n\t\tthis.maxY = maxY;\n\n\t\tthis.gridWidth = width - 2 * padding;\n\t\tthis.gridHeight = height - 2 * padding;\n\n\t\tthis.origin = [padding, height - padding];\n\t\tthis.context.font = \"10px sans-serif\";\n\n\t\tthis.xInterval = xInterval === 0 ? (maxX - minX) : xInterval;\n\t\tthis.yInterval = yInterval === 0 ? (maxY - minY) : yInterval;\n\n\t\tthis.xAxisSpacing = Math.round(this.gridWidth * this.xInterval / (maxX - minX));\n\t\tthis.yAxisSpacing = Math.round(this.gridHeight * this.yInterval / (maxY - minY));\n\t}\n\n\tsetup(config: Partial<GridConstructor>) {\n\t\tthis.clear()\n\n\t\tconst mergedConfig = {\n\t\t\t...this,\n\t\t\t...config\n\t\t}\n\n\t\tconst {\n\t\t\theight,\n\t\t\twidth,\n\t\t\tpadding,\n\t\t\tminX,\n\t\t\tminY,\n\t\t\tmaxX,\n\t\t\tmaxY,\n\t\t\tyInterval = 0,\n\t\t\txInterval = 0,\n\t\t} = mergedConfig;\n\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t\tthis.padding = padding;\n\t\tthis.minX = minX;\n\t\tthis.minY = minY;\n\t\tthis.maxX = maxX;\n\t\tthis.maxY = maxY;\n\n\t\tthis.gridWidth = width - 2 * padding;\n\t\tthis.gridHeight = height - 2 * padding;\n\n\t\tthis.origin = [padding, height - padding];\n\t\tthis.context.font = \"10px sans-serif\";\n\n\t\tthis.xInterval = xInterval === 0 ? (maxX - minX) : xInterval;\n\t\tthis.yInterval = yInterval === 0 ? (maxY - minY) : yInterval;\n\n\t\tthis.xAxisSpacing = Math.round(this.gridWidth * this.xInterval / (maxX - minX));\n\t\tthis.yAxisSpacing = Math.round(this.gridHeight * this.yInterval / (maxY - minY));\n\t}\n\n\tclear() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t}\n\n\tdrawGrid() {\n\t\tconst [originX, originY] = this.origin;\n\t\tconst {\n\t\t\tcontext,\n\t\t\tgridWidth,\n\t\t\tgridHeight,\n\t\t\txAxisSpacing,\n\t\t\tyAxisSpacing,\n\t\t\tpadding,\n\t\t} = this;\n\t\tcontext.beginPath();\n\t\tcontext.strokeStyle = GRID_STROKE_STYLE;\n\t\tcontext.moveTo(originX, originY);\n\n\t\tfor (let i = originX; i <= (originX + gridWidth); i += xAxisSpacing) {\n\t\t\tcontext.moveTo(i, originY);\n\t\t\tcontext.lineTo(i, originY - gridHeight);\n\t\t}\n\n\t\tfor (let j = originY; j >= padding; j -= yAxisSpacing) {\n\t\t\tcontext.moveTo(originX, j);\n\t\t\tcontext.lineTo(originX + gridWidth, j);\n\t\t}\n\n\t\tcontext.stroke();\n\t}\n\n\tdrawAxis() {\n\t\tconst {\n\t\t\tcontext,\n\t\t\tgridWidth,\n\t\t\tpadding,\n\t\t\txAxisSpacing,\n\t\t\tyAxisSpacing,\n\t\t\txInterval,\n\t\t\tyInterval,\n\t\t\tminX,\n\t\t\tmaxY,\n\t\t\tminY,\n\t\t} = this;\n\n\t\tcontext.beginPath();\n\n\t\tconst [originX, originY] = this.origin;\n\n\t\tfor (\n\t\t\tlet x = originX, value = minX;\n\t\t\tx <= (originX + gridWidth);\n\t\t\tx += xAxisSpacing, value += xInterval\n\t\t) {\n\t\t\tconst label = value.toFixed(3);\n\t\t\tcontext.fillText(label, x - context.measureText(label).width / 2, originY + 14);\n\t\t}\n\n\t\tfor (\n\t\t\tlet y = originY, value = minY;\n\t\t\ty >= padding;\n\t\t\ty -= yAxisSpacing, value += yInterval\n\t\t) {\n\t\t\tconst label = value.toFixed(2);\n\t\t\tcontext.fillText(label, originX - context.measureText(label).width - 4, y + 5);\n\t\t}\n\n\t\tcontext.beginPath();\n\t\tcontext.rect(\n\t\t\tthis.transformX(minX),\n\t\t\tthis.transformY(maxY),\n\t\t\tthis.gridWidth,\n\t\t\tthis.gridHeight,\n\t\t);\n\t\tcontext.stroke();\n\t}\n\n\ttransformX(input: number) {\n\t\tconst scale = this.gridWidth / (this.maxX - this.minX);\n\n\t\treturn Math.round((input - this.minX) * scale) + this.padding;\n\t}\n\n\ttransformY(input: number) {\n\t\tconst scale = this.gridHeight / (this.maxY - this.minY);\n\n\t\treturn Math.round(this.gridHeight - (input - this.minY) * scale) + this.padding;\n\t}\n\n\tmoveTo(x: number, y: number) {\n\t\treturn this.context.moveTo(\n\t\t\tthis.transformX(x),\n\t\t\tthis.transformY(y),\n\t\t);\n\t}\n\n\tlineTo(x: number, y: number) {\n\t\treturn this.context.lineTo(\n\t\t\tthis.transformX(x),\n\t\t\tthis.transformY(y),\n\t\t);\n\t}\n\n\tstroke() {\n\t\treturn this.context.stroke();\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number, fill = false) {\n\t\tthis.context.beginPath()\n\t\tthis.context.moveTo(this.transformX(x) + radius, this.transformY(y))\n\t\tthis.context.arc(this.transformX(x), this.transformY(y), radius, 0, Math.PI * 2)\n\t\tif (fill) {\n\t\t\tthis.context.fill()\n\t\t}\n\t\tthis.context.stroke()\n\t}\n\n\tdrawMap(points: { x: number; y: number }[]) {\n\t\tthis.clear();\n\t\tthis.context.beginPath();\n\n\t\tthis.context.strokeStyle = \"green\";\n\t\tthis.context.lineWidth = 3;\n\n\t\tconst [first, ...restPoints] = points;\n\t\tthis.moveTo(first.x, first.y);\n\n\t\trestPoints.forEach(({ x, y }) => {\n\t\t\tthis.lineTo(x, y);\n\t\t\tthis.moveTo(x, y);\n\t\t});\n\n\t\tthis.lineTo(first.x, first.y);\n\t\tthis.context.closePath();\n\t\tthis.stroke();\n\n\t\tthis.context.beginPath();\n\t\tthis.context.strokeStyle = \"red\";\n\t\tthis.context.fillStyle = \"pink\";\n\t\tthis.context.lineWidth = 1;\n\n\t\tpoints.forEach(({ x, y }) => {\n\t\t\tthis.drawCircle(x, y, 5, true)\n\t\t})\n\t}\n\n\tdrawCurve(points: { x: number; y: number }[]) {\n\t\tthis.clear();\n\t\tthis.context.beginPath();\n\n\t\tthis.context.strokeStyle = \"green\";\n\t\tthis.context.lineWidth = 3;\n\n\t\tconst [first, ...restPoints] = points;\n\t\tthis.moveTo(first.x, first.y);\n\n\t\trestPoints.forEach(({ x, y }) => {\n\t\t\tthis.lineTo(x, y);\n\t\t\tthis.moveTo(x, y);\n\t\t});\n\t\tthis.stroke();\n\t\tthis.context.closePath();\n\n\t\tthis.context.beginPath();\n\t\tthis.context.strokeStyle = \"red\";\n\t\tthis.context.fillStyle = \"pink\";\n\t\tthis.context.lineWidth = 1;\n\n\t\tpoints.forEach(({ x, y }) => {\n\t\t\tthis.drawCircle(x, y, 5, true)\n\t\t})\n\t}\n\n\tplotFunction(f: (x: number) => number, minX = this.minX, maxX = this.maxX) {\n\t\tthis.clear();\n\t\tthis.context.strokeStyle = \"red\";\n\t\tconst step = (maxX - minX) / this.gridWidth;\n\t\tthis.context.beginPath();\n\t\tthis.moveTo(this.minX, f(this.minX));\n\t\tfor (let x = minX; x < maxX; x += step) {\n\t\t\tthis.lineTo(x, f(x))\n\t\t}\n\t\tthis.context.stroke();\n\t}\n}\n\nexport const getImageRedrawer = (\n\t{ image, canvas }: { image: CanvasImageSource; canvas: HTMLCanvasElement },\n) => (\n\tconfig: {\n\t\thOffset: number;\n\t\tvOffset: number;\n\t\thScale: number;\n\t\tvScale: number;\n\t},\n) => {\n\tconst {\n\t\twidth: canvasWidth,\n\t\theight: canvasHeight,\n\t} = canvas;\n\n\tconst ctx = canvas.getContext(\"2d\")!; // eslint-disable-line\n\n\tconst {\n\t\thOffset,\n\t\tvOffset,\n\t\thScale,\n\t\tvScale,\n\t} = config;\n\n\tctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\tctx.drawImage(\n\t\timage,\n\t\thOffset,\n\t\tvOffset,\n\t\tMath.round(hScale * (image.width as number)),\n\t\tMath.round(vScale * (image.height as number)),\n\t);\n};\n","import { Ref, watch } from \"vue\"\nimport { Grid } from \"./graphics\"\n\ntype GridParamGetters = [\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n]\n\ntype GridWatchersConfig = {\n\tgrid: Grid;\n\tgridActions: (() => void)[];\n\tminX: Ref<number>;\n\tmaxX: Ref<number>;\n\txStep: Ref<number>;\n\tminY: Ref<number>;\n\tmaxY: Ref<number>;\n\tyStep: Ref<number>;\n}\n\nexport const useGridWatchers = (config: GridWatchersConfig) => {\n\tconst {\n\t\tgrid,\n\t\tgridActions,\n\t\tminX,\n\t\tmaxX,\n\t\txStep,\n\t\tminY,\n\t\tmaxY,\n\t\tyStep\n\t} = config;\n\n\twatch<GridParamGetters>(\n\t\t[\n\t\t\t() => minX.value,\n\t\t\t() => maxX.value,\n\t\t\t() => xStep.value,\n\t\t\t() => minY.value,\n\t\t\t() => maxY.value,\n\t\t\t() => yStep.value,\n\t\t],\n\t\t(newValues) => {\n\t\t\tconst [\n\t\t\t\tminX,\n\t\t\t\tmaxX,\n\t\t\t\txInterval,\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyInterval,\n\t\t\t] = newValues\n\n\t\t\tgrid.setup({\n\t\t\t\tminX,\n\t\t\t\tmaxX,\n\t\t\t\txInterval,\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyInterval\n\t\t\t})\n\n\t\t\tgridActions.forEach(a => a())\n\t\t}\n\t)\n}","\nimport { defineComponent, computed, onMounted } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype GridProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n\tname: \"compressorGrid\" | \"turbineGrid\";\n}\n\nexport default defineComponent({\n\tname: \"Grid\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t\tname: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, padding, height, width, name } = props as GridProps;\n\t\tconst store = useStore();\n\n\t\tconst minX = computed(buildGridAccessor(name, \"minX\", store));\n\t\tconst maxX = computed(buildGridAccessor(name, \"maxX\", store));\n\t\tconst xStep = computed(buildGridAccessor(name, \"xStep\", store));\n\t\tconst minY = computed(buildGridAccessor(name, \"minY\", store));\n\t\tconst maxY = computed(buildGridAccessor(name, \"maxY\", store));\n\t\tconst yStep = computed(buildGridAccessor(name, \"yStep\", store));\n\n\t\tonMounted(() => {\n\t\t\tconst gridCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst grid = new Grid({\n\t\t\t\tcanvasRef: gridCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minX.value,\n\t\t\t\tmaxX: maxX.value,\n\t\t\t\tminY: minY.value,\n\t\t\t\tmaxY: maxY.value,\n\t\t\t\txInterval: xStep.value,\n\t\t\t\tyInterval: yStep.value\n\t\t\t});\n\n\t\t\tconst redrawGrid = () => {\n\t\t\t\tgrid.drawGrid();\n\t\t\t\tgrid.drawAxis();\n\t\t\t}\n\n\t\t\tredrawGrid();\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid,\n\t\t\t\tgridActions: [redrawGrid],\n\t\t\t\tminX,\n\t\t\t\tmaxX,\n\t\t\t\txStep,\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyStep\n\t\t\t})\n\t\t});\n\t},\n})\n","import { render } from \"./Grid.vue?vue&type=template&id=47adcf6a\"\nimport script from \"./Grid.vue?vue&type=script&lang=ts\"\nexport * from \"./Grid.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\"\n\t\t@mousemove=\"handleHover\"\n\t\t@mousedown=\"handleMouseDown\"\n\t\t@mouseup=\"handleMouseUp\"\n\t\t@contextmenu=\"handleRightClick\"\n\t\t@mouseenter=\"showTooltip\"\n\t\t@mouseleave=\"hideTooltip\" />\n\t<tooltip\n\t\t:x=\"tooltipX\"\n\t\t:y=\"tooltipY\"\n\t\t:visible=\"tooltipVisible\"\n\t\ttooltip-id=\"compressor-map-tooltip\">\n\t\t<div>Boost:</div><div>{{ (Math.round(pointerData.boost * 10) / 10).toFixed(2) }} PSI</div>\n\t\t<div>rpm:</div><div>{{ pointerData.rpm }}</div>\n\t\t<div>maf:</div><div>{{ (Math.round(pointerData.maf[\"lbs/min\"] * 10) / 10).toFixed(1) }} lbs/min</div>\n\t\t<div>compr. power:</div><div>{{ pointerData.compressorPower[\"kilowatt\"].toFixed(3) }} kWatts</div>\n\t</tooltip>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointsGetter,\n\tbuildAccessor as buildEngineMapAccessor,\n\tbuildMapPointModifier,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n} from \"@/store/engine-map\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflow, Power, Pressure, PressureUnit, Temperature } from \"@/physics/units\";\nimport { getCompressorPower, getMAF, getRPMfromMAF } from \"@/physics/calculations\";\nimport { useMouseControl } from \"./mouse-control\";\nimport Tooltip from \"@/components/Tooltip.vue\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: { Tooltip },\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tconst tooltipX = ref(0)\n\t\tconst tooltipY = ref(0)\n\t\tconst tooltipVisible = ref(false)\n\n\t\tconst setTooltipPosition = (x: number, y: number) => {\n\t\t\ttooltipX.value = x;\n\t\t\ttooltipY.value = y;\n\t\t}\n\t\tconst hideTooltip = () => tooltipVisible.value = false;\n\t\tconst showTooltip = () => tooltipVisible.value = true;\n\n\t\tlet graphCanvas: HTMLCanvasElement;\n\t\tconst graphCanvasViewport = ref<DOMRect>({ left: 0, top: 0 } as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas?.getBoundingClientRect() }\n\t\tconst originX = computed(() => graphCanvasViewport.value.left + padding)\n\t\tconst originY = computed(() => graphCanvasViewport.value.top + padding)\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\t\tconst airflowUnits = computed(buildEngineMapAccessor(\"airflowUnits\", store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = ref({\n\t\t\tboost: 0,\n\t\t\trpm: 0,\n\t\t\tcompressorPower: new Power(0),\n\t\t\tmaf: new MassAirflow(0)\n\t\t});\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\t\tconst removeMapPoint = buildMapPointRemover(store);\n\n\t\tconst correctMaf = (maf: number): number => {\n\t\t\treturn maf\n\t\t\t\t* Math.sqrt(ambientAirTemperature.value.SI / new Temperature(288.15).SI)\n\t\t\t\t* (1 / ambientAirPressure.value[PressureUnit.bar])\n\t\t}\n\n\t\tconst getMAFlocal = ({ pressure, rpm }: { pressure: Pressure; rpm: number }): number => {\n\t\t\tconst actualMaf = getMAF({\n\t\t\t\tdisplacement: engineDisplacement.value,\n\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\tpressure,\n\t\t\t\trpm,\n\t\t\t})\n\n\t\t\tconst correctedMaf = new MassAirflow(correctMaf(actualMaf.SI));\n\n\t\t\treturn correctedMaf[airflowUnits.value];\n\t\t}\n\n\t\tconst engineMapRawPoints = computed(buildMapPointsGetter(store));\n\t\tconst engineMapPoints = computed(() => {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[0]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t},\n\t\t\t\t...engineMapRawPoints.value.map(p => ({\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: p.pressure,\n\t\t\t\t\t\trpm: p.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: p.pressure.getPressureRatio(ambientAirPressure.value)\n\t\t\t\t})),\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[engineMapRawPoints.value.length - 1]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawMap(engineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawMap(engineMapPoints.value) }],\n\t\t\t\tminX: minAirflow,\n\t\t\t\tmaxX: maxAirflow,\n\t\t\t\txStep: airflowInterval,\n\t\t\t\tminY: minPressureRatio,\n\t\t\t\tmaxY: maxPressureRatio,\n\t\t\t\tyStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => engineMapPoints.value,\n\t\t\t\t(points) => { graph.drawMap(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst getRPM = ({ massAirflow, pressureRatio }: { massAirflow: MassAirflow; pressureRatio: number }): number => Math.round(getRPMfromMAF({\n\t\t\tmassAirflow,\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t}))\n\n\t\tconst findMapPointIndex = (rpm: number, pressure: Pressure): number => {\n\t\t\treturn engineMapRawPoints.value.findIndex((point) => {\n\t\t\t\tif (point.rpm === rpm || (point.rpm * 1.05 > rpm && point.rpm * 0.95 < rpm)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.pressure.SI === pressure.SI ||\n\t\t\t\t\t\t(point.pressure.SI * 1.01 > pressure.SI && point.pressure.SI * 0.99 < pressure.SI)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick\n\t\t} = useMouseControl({\n\t\t\toriginX,\n\t\t\toriginY,\n\t\t\tmapWidth,\n\t\t\tmapHeight,\n\t\t\tpadding,\n\t\t\tminX: minAirflow,\n\t\t\tmaxX: maxAirflow,\n\t\t\tminY: minPressureRatio,\n\t\t\tmaxY: maxPressureRatio,\n\t\t\ttransformYValue: a => a,\n\t\t\ttransformXValue: (maf: number) => new MassAirflow(maf, airflowUnits.value),\n\t\t\tonHover: (massAirflow: MassAirflow, pressureRatio: number, x, y) => {\n\t\t\t\tsetTooltipPosition(x - graphCanvasViewport.value.left, y - graphCanvasViewport.value.top)\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\n\t\t\t\tpointerData.value = {\n\t\t\t\t\trpm,\n\t\t\t\t\tboost: ambientAirPressure.value.multiply((pressureRatio - 1))[\"psi\"],\n\t\t\t\t\tcompressorPower: getCompressorPower({\n\t\t\t\t\t\tmassAirflow,\n\t\t\t\t\t\tambientTemperature: ambientAirTemperature.value,\n\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\tcompressorEfficiency: 0.72\n\t\t\t\t\t}),\n\t\t\t\t\tmaf: massAirflow,\n\t\t\t\t}\n\n\t\t\t\tif (contextPoint > -1) {\n\t\t\t\t\tsetMapPoint(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trpm,\n\t\t\t\t\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextPoint\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonMouseDown: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\tcontextPoint = findMapPointIndex(rpm, pressureAtMouse);\n\t\t\t},\n\t\t\tonMouseUp: () => { contextPoint = -1 },\n\t\t\tonRightClick: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\tconst pointIndex = findMapPointIndex(rpm, pressureAtMouse);\n\n\t\t\t\tif (pointIndex < 0) {\n\t\t\t\t\tinsertMapPoint({\n\t\t\t\t\t\trpm,\n\t\t\t\t\t\tpressure: new Pressure(Math.round(pressureAtMouse[\"bar\"] * 100) / 100, PressureUnit.bar)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tremoveMapPoint(engineMapRawPoints.value[pointIndex]);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick,\n\t\t\tpointerData,\n\t\t\tairflowUnits,\n\t\t\ttooltipX,\n\t\t\ttooltipY,\n\t\t\ttooltipVisible,\n\t\t\tshowTooltip,\n\t\t\thideTooltip,\n\t\t}\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","/* eslint-disable @typescript-eslint/camelcase */\nimport {\n\tAIR_SPECIFIC_GAS_CONSTANT,\n\tGAMMA_AIR_288K,\n\tGAMMA_AIR_1100K,\n\tCP_AIR_1100K,\n\tCP_AIR_288K\n} from \"@/physics/constants\"\nimport {\n\tMassAirflow,\n\tPower,\n\tPressure,\n\tTemperature,\n\tVolume,\n} from \"@/physics/units\"\n\ntype KgM3 = number\n\ntype IGetAirDensity = (p: { temperature: Temperature; pressure: Pressure }) => KgM3\nexport const getAirDensity: IGetAirDensity = ({ temperature, pressure }) => (\n\tpressure.SI / (temperature.SI * AIR_SPECIFIC_GAS_CONSTANT)\n);\n\ntype IGetVolume = (p: {\n\tdisplacement: Volume;\n\tvolumetricEfficiency?: number;\n\tthrottling?: number;\n}) => Volume\nexport const getVolume: IGetVolume = ({\n\tdisplacement,\n\tvolumetricEfficiency = 1,\n\tthrottling = 1,\n}) => {\n\tdisplacement[\"cubic meters\"] = displacement.SI * volumetricEfficiency * throttling\n\treturn displacement;\n};\n\ntype IGetVolumeFlow = <T extends number>(p: { rpm: number; volume: T }) => number\nexport const getVolumeFlow: IGetVolumeFlow = ({ rpm, volume }) => (\n\t(volume * rpm) / (2 * 60)\n);\n\ntype IGetRPMfromMAF = (p: {\n\tmassAirflow: MassAirflow;\n\tdisplacement: Volume;\n\ttemperature: Temperature;\n\tpressure: Pressure;\n}) => number\nexport const getRPMfromMAF: IGetRPMfromMAF = ({\n\tmassAirflow, displacement, temperature, pressure\n}) => {\n\tconst airDensity = getAirDensity({ temperature, pressure })\n\tconst volumeFlow = massAirflow.SI / airDensity;\n\tconst rpm = volumeFlow * 60 * 2 / displacement.SI;\n\treturn rpm\n}\n\ntype IGetMAF = (p: {\n\trpm: number;\n\tdisplacement: Volume;\n\ttemperature: Temperature;\n\tpressure: Pressure;\n}) => MassAirflow\nexport const getMAF: IGetMAF = ({\n\trpm,\n\tdisplacement,\n\ttemperature,\n\tpressure,\n}) => {\n\tconst volume = getVolume({ displacement });\n\treturn new MassAirflow(getVolumeFlow({ rpm, volume: volume.SI }) * getAirDensity({ temperature, pressure }))\n};\n\ntype IGetEMAF = (p: {\n\tintakeAirflow: MassAirflow;\n\tstoichiometricAirFuelRatio: number;\n\tlambda: number;\n}) => MassAirflow;\nexport const getEMAF: IGetEMAF = ({\n\tintakeAirflow,\n\tstoichiometricAirFuelRatio,\n\tlambda\n}) => {\n\tconst massScale = 1 + 1 / (stoichiometricAirFuelRatio * lambda) // lambda = afr/afrstoich\n\n\treturn new MassAirflow(intakeAirflow.SI * massScale);\n}\n\nconst GAMMA_RATIO_S_288K = (GAMMA_AIR_288K - 1) / GAMMA_AIR_288K\nconst GAMMA_RATIO_S_1100K = (GAMMA_AIR_1100K - 1) / GAMMA_AIR_1100K\n\ntype IGetCompressorPower = (p: {\n\tmassAirflow: MassAirflow;\n\tambientTemperature: Temperature;\n\tpressureRatio: number;\n\tcompressorEfficiency: number;\n}) => Power\nexport const getCompressorPower: IGetCompressorPower = ({\n\tmassAirflow,\n\tambientTemperature,\n\tpressureRatio,\n\tcompressorEfficiency,\n}) => {\n\tconst p = (1 / compressorEfficiency)\n\t\t* massAirflow.SI\n\t\t* CP_AIR_288K\n\t\t* ambientTemperature.SI\n\t\t* (Math.pow(pressureRatio, GAMMA_RATIO_S_288K) - 1);\n\n\treturn new Power(p);\n}\n\ntype IGetTurbinePower = (p: {\n\tmassAirflow: MassAirflow;\n\tinletTemperature: Temperature;\n\tpressureRatio: number;\n\tturbineEfficiency: number;\n}) => Power\nexport const getTurbinePower: IGetTurbinePower = ({\n\tmassAirflow,\n\tinletTemperature,\n\tpressureRatio,\n\tturbineEfficiency\n}) => {\n\tconst p = turbineEfficiency\n\t\t* massAirflow.SI\n\t\t* CP_AIR_1100K\n\t\t* inletTemperature.SI\n\t\t*\t(1 - Math.pow(1/pressureRatio, GAMMA_RATIO_S_1100K));\n\n\treturn new Power(p);\n}\n\nexport const buildInterpolator = <T>(\n\tgetDataPoints: () => T[],\n\tgetX: (i: T) => number,\n\tgetY: (i: T) => number,\n) => (x: number): number => {\n\t\tconst dataPoints = getDataPoints();\n\t\tconst exactMatch = dataPoints.find(p => getX(p) === x);\n\t\tif (exactMatch) { return getY(exactMatch) }\n\n\t\tconst bigIndex = dataPoints.findIndex(p => getX(p) > x);\n\t\tconst smallIndex = bigIndex - 1;\n\n\t\tif (bigIndex === -1) {\n\t\t\treturn getY(dataPoints[dataPoints.length - 1])\n\t\t}\n\n\t\tif (bigIndex === 0) {\n\t\t\treturn getY(dataPoints[0]);\n\t\t}\n\n\t\tconst deltaX = getX(dataPoints[bigIndex]) - getX(dataPoints[smallIndex]);\n\t\tconst deltaY = getY(dataPoints[bigIndex]) - getY(dataPoints[smallIndex]);\n\n\t\treturn getY(dataPoints[bigIndex]) - (deltaY * (getX(dataPoints[bigIndex]) - x) / deltaX);\n\t}\n\ntype IUncorrectPhi = (p: {\n\tphi: number;\n\tpressureRatio: number;\n\treferencePressure: Pressure;\n\texhaustTemperature: Temperature;\n}) => MassAirflow\nexport const uncorrectPhi: IUncorrectPhi = ({\n\tphi,\n\tpressureRatio,\n\treferencePressure,\n\texhaustTemperature\n}) => new MassAirflow(phi * pressureRatio * referencePressure[\"kilopascal\"] / Math.sqrt(exhaustTemperature.SI))\n\ntype IUncorrectGasflow = (p: {\n\tcorrectedFlow: MassAirflow;\n\tpressureRatio: number;\n\treferenceTemperature: Temperature;\n\texhaustTemperature: Temperature;\n}) => MassAirflow\nexport const uncorrectGasflow: IUncorrectGasflow = ({\n\tcorrectedFlow,\n\tpressureRatio,\n\treferenceTemperature,\n\texhaustTemperature\n}) => new MassAirflow(correctedFlow.SI * pressureRatio * Math.sqrt(referenceTemperature.SI/exhaustTemperature.SI))\n","import { Ref } from \"vue\"\n\ntype MouseEventHandler<T, K> = (xValue: T, yValue: K, x: number, y: number) => void\n\ntype MouseControlConfig<XUnit, YUnit> = {\n\toriginX: Ref<number>;\n\toriginY: Ref<number>;\n\tmapWidth: number;\n\tmapHeight: number;\n\tpadding: number;\n\tminX: Ref<number>;\n\tmaxX: Ref<number>;\n\tminY: Ref<number>;\n\tmaxY: Ref<number>;\n\ttransformXValue: (input: number) => XUnit;\n\ttransformYValue: (input: number) => YUnit;\n\tonHover: MouseEventHandler<XUnit, YUnit>;\n\tonMouseDown: MouseEventHandler<XUnit, YUnit>;\n\tonMouseUp: MouseEventHandler<XUnit, YUnit>;\n\tonRightClick: MouseEventHandler<XUnit, YUnit>;\n}\n\nexport const useMouseControl = <X, Y>({\n\toriginX,\n\toriginY,\n\tmapHeight,\n\tmapWidth,\n\tminX,\n\tmaxX,\n\tminY,\n\tmaxY,\n\ttransformXValue,\n\ttransformYValue,\n\tonHover,\n\tonMouseDown,\n\tonMouseUp,\n\tonRightClick,\n}: MouseControlConfig<X, Y>) => {\n\tconst getMapX = (mapX: number): number => ((mapX / mapWidth) * (maxX.value - minX.value)) + minX.value\n\tconst getMapY = (mapY: number): number => ((1 - (mapY / mapHeight)) * (maxY.value - minY.value)) + minY.value\n\n\tconst getMapDataFromAtCanvasXY = ({ x, y }: { x: number; y: number }): [number, number] => {\n\t\tconst mapY = getMapY(y - originY.value)\n\t\tconst mapX = getMapX(x - originX.value)\n\n\t\tconst result: [number, number] = [\n\t\t\tmapX,\n\t\t\tmapY,\n\t\t]\n\n\t\tif (mapX > maxX.value) { result[0] = maxX.value }\n\t\tif (mapX < minX.value) { result[0] = minX.value }\n\t\tif (mapY > maxY.value) { result[1] = maxY.value }\n\t\tif (mapY < minY.value) { result[1] = minY.value }\n\n\t\treturn result;\n\t}\n\n\tconst handleMouseEvent = (e: MouseEvent): [X, Y, number, number] => {\n\t\tconst [ xValue, yValue ] = getMapDataFromAtCanvasXY(e);\n\n\t\treturn [\n\t\t\ttransformXValue(xValue),\n\t\t\ttransformYValue(yValue),\n\t\t\te.x,\n\t\t\te.y\n\t\t];\n\t}\n\n\tconst handleHover = (e: MouseEvent) => onHover(...handleMouseEvent(e))\n\tconst handleMouseDown = (e: MouseEvent) => onMouseDown(...handleMouseEvent(e));\n\tconst handleMouseUp = (e: MouseEvent) => onMouseUp(...handleMouseEvent(e));\n\tconst handleRightClick = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tonRightClick(...handleMouseEvent(e));\n\t}\n\n\treturn {\n\t\thandleHover,\n\t\thandleMouseDown,\n\t\thandleMouseUp,\n\t\thandleRightClick\n\t}\n}","<template>\n\t<div\n\t\tclass=\"tooltip\"\n\t\t:class=\"{ 'tooltip--visible': visible }\"\n\t\t:style=\"{ left: x + 'px', top: y + 'px' }\"\n\t\t:id=\"tooltipId\"\n\t\t@mouseover=\"handleMouseenter\"\n\t\t@mouseout=\"handleMouseleave\">\n\t\t<slot />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, onMounted } from \"vue\";\n\nexport default defineComponent({\n\tprops: {\n\t\tx: Number,\n\t\ty: Number,\n\t\tvisible: Boolean,\n\t\ttooltipId: String,\n\t},\n\tsetup: (props) => {\n\t\tconst self = ref<HTMLElement>({} as HTMLElement);\n\n\t\tonMounted(() => {\n\t\t\tself.value = document.getElementById(props.tooltipId!) as HTMLElement; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n\t\t})\n\n\t\treturn {\n\t\t\thandleMouseenter: () => { self.value.className = \"tooltip\" },\n\t\t\thandleMouseleave: () => { self.value.className = \"tooltip tooltip--visible\" },\n\t\t}\n\t}\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.tooltip {\n\tdisplay: none;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tbackground: #C8C8C7;\n\tmargin: 30px;\n\tpadding: 10px;\n\tposition: absolute;\n\tz-index: 1000;\n\twidth: 250px;\n\n\t&--visible {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr;\n\t\tjustify-items: start;\n\t\tcolumn-gap: 10px;\n\t}\n}\n</style>","\nimport { defineComponent, ref, onMounted } from \"vue\";\n\nexport default defineComponent({\n\tprops: {\n\t\tx: Number,\n\t\ty: Number,\n\t\tvisible: Boolean,\n\t\ttooltipId: String,\n\t},\n\tsetup: (props) => {\n\t\tconst self = ref<HTMLElement>({} as HTMLElement);\n\n\t\tonMounted(() => {\n\t\t\tself.value = document.getElementById(props.tooltipId!) as HTMLElement; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n\t\t})\n\n\t\treturn {\n\t\t\thandleMouseenter: () => { self.value.className = \"tooltip\" },\n\t\t\thandleMouseleave: () => { self.value.className = \"tooltip tooltip--visible\" },\n\t\t}\n\t}\n})\n","import { render } from \"./Tooltip.vue?vue&type=template&id=a3accbf2&scoped=true\"\nimport script from \"./Tooltip.vue?vue&type=script&lang=ts\"\nexport * from \"./Tooltip.vue?vue&type=script&lang=ts\"\n\nimport \"./Tooltip.vue?vue&type=style&index=0&id=a3accbf2&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-a3accbf2\"\n\nexport default script","\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointsGetter,\n\tbuildAccessor as buildEngineMapAccessor,\n\tbuildMapPointModifier,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n} from \"@/store/engine-map\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflow, Power, Pressure, PressureUnit, Temperature } from \"@/physics/units\";\nimport { getCompressorPower, getMAF, getRPMfromMAF } from \"@/physics/calculations\";\nimport { useMouseControl } from \"./mouse-control\";\nimport Tooltip from \"@/components/Tooltip.vue\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: { Tooltip },\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tconst tooltipX = ref(0)\n\t\tconst tooltipY = ref(0)\n\t\tconst tooltipVisible = ref(false)\n\n\t\tconst setTooltipPosition = (x: number, y: number) => {\n\t\t\ttooltipX.value = x;\n\t\t\ttooltipY.value = y;\n\t\t}\n\t\tconst hideTooltip = () => tooltipVisible.value = false;\n\t\tconst showTooltip = () => tooltipVisible.value = true;\n\n\t\tlet graphCanvas: HTMLCanvasElement;\n\t\tconst graphCanvasViewport = ref<DOMRect>({ left: 0, top: 0 } as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas?.getBoundingClientRect() }\n\t\tconst originX = computed(() => graphCanvasViewport.value.left + padding)\n\t\tconst originY = computed(() => graphCanvasViewport.value.top + padding)\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\t\tconst airflowUnits = computed(buildEngineMapAccessor(\"airflowUnits\", store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = ref({\n\t\t\tboost: 0,\n\t\t\trpm: 0,\n\t\t\tcompressorPower: new Power(0),\n\t\t\tmaf: new MassAirflow(0)\n\t\t});\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\t\tconst removeMapPoint = buildMapPointRemover(store);\n\n\t\tconst correctMaf = (maf: number): number => {\n\t\t\treturn maf\n\t\t\t\t* Math.sqrt(ambientAirTemperature.value.SI / new Temperature(288.15).SI)\n\t\t\t\t* (1 / ambientAirPressure.value[PressureUnit.bar])\n\t\t}\n\n\t\tconst getMAFlocal = ({ pressure, rpm }: { pressure: Pressure; rpm: number }): number => {\n\t\t\tconst actualMaf = getMAF({\n\t\t\t\tdisplacement: engineDisplacement.value,\n\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\tpressure,\n\t\t\t\trpm,\n\t\t\t})\n\n\t\t\tconst correctedMaf = new MassAirflow(correctMaf(actualMaf.SI));\n\n\t\t\treturn correctedMaf[airflowUnits.value];\n\t\t}\n\n\t\tconst engineMapRawPoints = computed(buildMapPointsGetter(store));\n\t\tconst engineMapPoints = computed(() => {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[0]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t},\n\t\t\t\t...engineMapRawPoints.value.map(p => ({\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: p.pressure,\n\t\t\t\t\t\trpm: p.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: p.pressure.getPressureRatio(ambientAirPressure.value)\n\t\t\t\t})),\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[engineMapRawPoints.value.length - 1]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawMap(engineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawMap(engineMapPoints.value) }],\n\t\t\t\tminX: minAirflow,\n\t\t\t\tmaxX: maxAirflow,\n\t\t\t\txStep: airflowInterval,\n\t\t\t\tminY: minPressureRatio,\n\t\t\t\tmaxY: maxPressureRatio,\n\t\t\t\tyStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => engineMapPoints.value,\n\t\t\t\t(points) => { graph.drawMap(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst getRPM = ({ massAirflow, pressureRatio }: { massAirflow: MassAirflow; pressureRatio: number }): number => Math.round(getRPMfromMAF({\n\t\t\tmassAirflow,\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t}))\n\n\t\tconst findMapPointIndex = (rpm: number, pressure: Pressure): number => {\n\t\t\treturn engineMapRawPoints.value.findIndex((point) => {\n\t\t\t\tif (point.rpm === rpm || (point.rpm * 1.05 > rpm && point.rpm * 0.95 < rpm)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.pressure.SI === pressure.SI ||\n\t\t\t\t\t\t(point.pressure.SI * 1.01 > pressure.SI && point.pressure.SI * 0.99 < pressure.SI)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick\n\t\t} = useMouseControl({\n\t\t\toriginX,\n\t\t\toriginY,\n\t\t\tmapWidth,\n\t\t\tmapHeight,\n\t\t\tpadding,\n\t\t\tminX: minAirflow,\n\t\t\tmaxX: maxAirflow,\n\t\t\tminY: minPressureRatio,\n\t\t\tmaxY: maxPressureRatio,\n\t\t\ttransformYValue: a => a,\n\t\t\ttransformXValue: (maf: number) => new MassAirflow(maf, airflowUnits.value),\n\t\t\tonHover: (massAirflow: MassAirflow, pressureRatio: number, x, y) => {\n\t\t\t\tsetTooltipPosition(x - graphCanvasViewport.value.left, y - graphCanvasViewport.value.top)\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\n\t\t\t\tpointerData.value = {\n\t\t\t\t\trpm,\n\t\t\t\t\tboost: ambientAirPressure.value.multiply((pressureRatio - 1))[\"psi\"],\n\t\t\t\t\tcompressorPower: getCompressorPower({\n\t\t\t\t\t\tmassAirflow,\n\t\t\t\t\t\tambientTemperature: ambientAirTemperature.value,\n\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\tcompressorEfficiency: 0.72\n\t\t\t\t\t}),\n\t\t\t\t\tmaf: massAirflow,\n\t\t\t\t}\n\n\t\t\t\tif (contextPoint > -1) {\n\t\t\t\t\tsetMapPoint(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trpm,\n\t\t\t\t\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextPoint\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonMouseDown: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\tcontextPoint = findMapPointIndex(rpm, pressureAtMouse);\n\t\t\t},\n\t\t\tonMouseUp: () => { contextPoint = -1 },\n\t\t\tonRightClick: (massAirflow: MassAirflow, pressureRatio: number) => {\n\t\t\t\tconst rpm = getRPM({ massAirflow, pressureRatio })\n\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\tconst pointIndex = findMapPointIndex(rpm, pressureAtMouse);\n\n\t\t\t\tif (pointIndex < 0) {\n\t\t\t\t\tinsertMapPoint({\n\t\t\t\t\t\trpm,\n\t\t\t\t\t\tpressure: new Pressure(Math.round(pressureAtMouse[\"bar\"] * 100) / 100, PressureUnit.bar)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tremoveMapPoint(engineMapRawPoints.value[pointIndex]);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick,\n\t\t\tpointerData,\n\t\t\tairflowUnits,\n\t\t\ttooltipX,\n\t\t\ttooltipY,\n\t\t\ttooltipVisible,\n\t\t\tshowTooltip,\n\t\t\thideTooltip,\n\t\t}\n\t},\n})\n","import { render } from \"./EngineMap.vue?vue&type=template&id=5af6de60&scoped=true\"\nimport script from \"./EngineMap.vue?vue&type=script&lang=ts\"\nexport * from \"./EngineMap.vue?vue&type=script&lang=ts\"\n\nimport \"./EngineMap.vue?vue&type=style&index=0&id=5af6de60&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-5af6de60\"\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor, ExternalMap } from \"@/store/external-map\";\nimport { getImageRedrawer } from \"./graphics\";\n\ntype ExternalMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tname: ExternalMap;\n\timgSrc: string;\n}\n\nexport default defineComponent({\n\tname: \"ExternalMap\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tname: String,\n\t\timgSrc: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, name, imgSrc } = props as ExternalMapProps\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildAccessor(name, \"hOffset\", store))\n\t\tconst vOffset = computed(buildAccessor(name, \"vOffset\", store))\n\t\tconst hScale = computed(buildAccessor(name, \"hScale\", store))\n\t\tconst vScale = computed(buildAccessor(name, \"vScale\", store))\n\n\t\tonMounted(() => {\n\t\t\tconst imgCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst image = new Image();\n\t\t\timage.src = imgSrc;\n\n\t\t\timage.onload = () => {\n\t\t\t\timgCanvas // eslint-disable-line\n\t\t\t\t\t.getContext(\"2d\")!\n\t\t\t\t\t.drawImage(\n\t\t\t\t\t\timage,\n\t\t\t\t\t\thOffset.value,\n\t\t\t\t\t\tvOffset.value,\n\t\t\t\t\t\tMath.floor(hScale.value * image.width),\n\t\t\t\t\t\tMath.floor(vScale.value * image.height),\n\t\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst redrawImage = getImageRedrawer({ canvas: imgCanvas, image });\n\n\t\t\twatch(\n\t\t\t\t[\n\t\t\t\t\t() => hOffset.value,\n\t\t\t\t\t() => vOffset.value,\n\t\t\t\t\t() => hScale.value,\n\t\t\t\t\t() => vScale.value\n\t\t\t\t],\n\t\t\t\t([\n\t\t\t\t\thOffset,\n\t\t\t\t\tvOffset,\n\t\t\t\t\thScale,\n\t\t\t\t\tvScale\n\t\t\t\t]) => {\n\t\t\t\t\tredrawImage({\n\t\t\t\t\t\thOffset,\n\t\t\t\t\t\tvOffset,\n\t\t\t\t\t\thScale,\n\t\t\t\t\t\tvScale,\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t},\n})\n</script>\n","\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor, ExternalMap } from \"@/store/external-map\";\nimport { getImageRedrawer } from \"./graphics\";\n\ntype ExternalMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tname: ExternalMap;\n\timgSrc: string;\n}\n\nexport default defineComponent({\n\tname: \"ExternalMap\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tname: String,\n\t\timgSrc: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, name, imgSrc } = props as ExternalMapProps\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildAccessor(name, \"hOffset\", store))\n\t\tconst vOffset = computed(buildAccessor(name, \"vOffset\", store))\n\t\tconst hScale = computed(buildAccessor(name, \"hScale\", store))\n\t\tconst vScale = computed(buildAccessor(name, \"vScale\", store))\n\n\t\tonMounted(() => {\n\t\t\tconst imgCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst image = new Image();\n\t\t\timage.src = imgSrc;\n\n\t\t\timage.onload = () => {\n\t\t\t\timgCanvas // eslint-disable-line\n\t\t\t\t\t.getContext(\"2d\")!\n\t\t\t\t\t.drawImage(\n\t\t\t\t\t\timage,\n\t\t\t\t\t\thOffset.value,\n\t\t\t\t\t\tvOffset.value,\n\t\t\t\t\t\tMath.floor(hScale.value * image.width),\n\t\t\t\t\t\tMath.floor(vScale.value * image.height),\n\t\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst redrawImage = getImageRedrawer({ canvas: imgCanvas, image });\n\n\t\t\twatch(\n\t\t\t\t[\n\t\t\t\t\t() => hOffset.value,\n\t\t\t\t\t() => vOffset.value,\n\t\t\t\t\t() => hScale.value,\n\t\t\t\t\t() => vScale.value\n\t\t\t\t],\n\t\t\t\t([\n\t\t\t\t\thOffset,\n\t\t\t\t\tvOffset,\n\t\t\t\t\thScale,\n\t\t\t\t\tvScale\n\t\t\t\t]) => {\n\t\t\t\t\tredrawImage({\n\t\t\t\t\t\thOffset,\n\t\t\t\t\t\tvOffset,\n\t\t\t\t\t\thScale,\n\t\t\t\t\t\tvScale,\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t},\n})\n","import { render } from \"./ExternalMap.vue?vue&type=template&id=2fd09db4\"\nimport script from \"./ExternalMap.vue?vue&type=script&lang=ts\"\nexport * from \"./ExternalMap.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\"\n\t\t@mousemove=\"handleHover\"\n\t\t@mousedown=\"handleMouseDown\"\n\t\t@mouseup=\"handleMouseUp\"\n\t\t@contextmenu=\"handleRightClick\"\n\t\t@mouseenter=\"showTooltip\"\n\t\t@mouseleave=\"hideTooltip\" />\n\t<tooltip\n\t\t:x=\"tooltipX\"\n\t\t:y=\"tooltipY\"\n\t\t:visible=\"tooltipVisible\"\n\t\ttooltip-id=\"turbine-map-tooltip\">\n\t\t<div>phi:</div><div>{{ pointerData.phi.toFixed(3) }}</div>\n\t\t<div>turbinePower:</div><div>{{ (pointerData.turbinePower.SI / 1000).toFixed(2) }} kWatt</div>\n\t</tooltip>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildMapPointModifier,\n\tbuildMapPointsGetter\n} from \"@/store/turbine-model\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflowUnits, MassAirflow, Power, Temperature } from \"@/physics/units\";\nimport { useMouseControl } from \"./mouse-control\";\nimport { getTurbinePower, uncorrectGasflow } from \"@/physics/calculations\";\nimport Tooltip from \"@/components/Tooltip.vue\"\n\ntype TurbineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"TurbineMap\",\n\tcomponents: { Tooltip },\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as TurbineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tconst tooltipX = ref(0)\n\t\tconst tooltipY = ref(0)\n\t\tconst tooltipVisible = ref(false)\n\n\t\tconst setTooltipPosition = (x: number, y: number) => {\n\t\t\ttooltipX.value = x;\n\t\t\ttooltipY.value = y;\n\t\t}\n\t\tconst hideTooltip = () => tooltipVisible.value = false;\n\t\tconst showTooltip = () => tooltipVisible.value = true;\n\n\t\tconst graphCanvas = ref({} as HTMLCanvasElement);\n\t\tconst graphCanvasViewport = ref({ left: 0, top: 0 } as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas.value?.getBoundingClientRect() }\n\t\tconst originX = computed(() => graphCanvasViewport.value.left + padding)\n\t\tconst originY = computed(() => graphCanvasViewport.value.top + padding)\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"turbineGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"turbineGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"turbineGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"turbineGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"turbineGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"turbineGrid\", \"yStep\", store));\n\t\tconst airflowUnits = ref(MassAirflowUnits.kgs);\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\t\tconst removeMapPoint = buildMapPointRemover(store);\n\t\tconst turbineMapPointsRaw = buildMapPointsGetter(store);\n\t\tconst turbineMapPoints = computed(\n\t\t\t() => turbineMapPointsRaw().map(p => ({\n\t\t\t\ty: p.gasflow,\n\t\t\t\tx: p.pressureRatio\n\t\t\t}))\n\t\t)\n\n\t\tconst pointerData = ref({\n\t\t\tturbinePower: new Power(0),\n\t\t\tphi: 0,\n\t\t});\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas.value = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.value.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas.value,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawCurve(turbineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawCurve(turbineMapPoints.value) }],\n\t\t\t\tminY: minAirflow,\n\t\t\t\tmaxY: maxAirflow,\n\t\t\t\tyStep: airflowInterval,\n\t\t\t\tminX: minPressureRatio,\n\t\t\t\tmaxX: maxPressureRatio,\n\t\t\t\txStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => turbineMapPoints.value,\n\t\t\t\tpoints => { graph.drawCurve(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst findMapPointIndex = (pressureRatio: number, airflow: number): number => {\n\t\t\treturn turbineMapPointsRaw().findIndex((point) => {\n\t\t\t\tif (point.pressureRatio === pressureRatio || (point.pressureRatio * 1.05 > pressureRatio && point.pressureRatio * 0.95 < pressureRatio)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.gasflow === airflow ||\n\t\t\t\t\t\t(point.gasflow * 1.05 > airflow && point.gasflow * 0.95 < airflow)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick\n\t\t} = useMouseControl<number, number>({\n\t\t\toriginX,\n\t\t\toriginY,\n\t\t\tmapWidth,\n\t\t\tmapHeight,\n\t\t\tpadding,\n\t\t\tminX: minAirflow,\n\t\t\tmaxX: maxAirflow,\n\t\t\tminY: minPressureRatio,\n\t\t\tmaxY: maxPressureRatio,\n\t\t\ttransformYValue: a => a,\n\t\t\ttransformXValue: a => a,\n\t\t\tonHover: (pressureRatio, airflow, x, y) => {\n\t\t\t\tsetTooltipPosition(x - graphCanvasViewport.value.left, y - graphCanvasViewport.value.top)\n\t\t\t\tpointerData.value = {\n\t\t\t\t\tturbinePower: getTurbinePower({\n\t\t\t\t\t\tmassAirflow: uncorrectGasflow({\n\t\t\t\t\t\t\tcorrectedFlow: new MassAirflow(airflow, MassAirflowUnits.lbsmin),\n\t\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\t\texhaustTemperature: new Temperature(1100),\n\t\t\t\t\t\t\treferenceTemperature: new Temperature(288.15)\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tinletTemperature: new Temperature(1100),\n\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\tturbineEfficiency: 0.70\n\t\t\t\t\t}),\n\t\t\t\t\tphi: airflow\n\t\t\t\t}\n\n\t\t\t\tif (contextPoint > -1) {\n\t\t\t\t\tsetMapPoint(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\t\tgasflow: airflow,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextPoint\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonMouseDown: (pressureRatio, airflow) => {\n\t\t\t\tcontextPoint = findMapPointIndex(pressureRatio, airflow);\n\t\t\t},\n\t\t\tonMouseUp: () => { contextPoint = -1 },\n\t\t\tonRightClick: (pressureRatio, airflow) => {\n\t\t\t\tconst pointIndex = findMapPointIndex(pressureRatio, airflow);\n\n\t\t\t\tif (pointIndex < 0) {\n\t\t\t\t\tinsertMapPoint({\n\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\tgasflow: airflow,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tremoveMapPoint(turbineMapPointsRaw()[pointIndex]);\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick,\n\t\t\tairflowUnits,\n\t\t\tpointerData,\n\t\t\ttooltipX,\n\t\t\ttooltipY,\n\t\t\ttooltipVisible,\n\t\t\tshowTooltip,\n\t\t\thideTooltip,\n\t\t}\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","import { Module, Store } from \"vuex\"\n\nexport const NAMESPACE = \"turbineModel\";\n\ntype TurbineMapPoint = {\n\tgasflow: number;\n\tpressureRatio: number;\n}\n\nexport type TurbineModelState = {\n\tpoints: TurbineMapPoint[];\n}\n\nconst namespaced = (input: \"points\" | \"addPoint\" | \"removePoint\" | \"changePoint\"): string => `${NAMESPACE}/${input}`;\n\nexport const buildMapPointsGetter = (store: Store<{}>) => (): TurbineMapPoint[] => store.getters[namespaced(\"points\")]\nexport const buildMapPointInserter = (store: Store<{}>) => (point: TurbineMapPoint) => store.commit(namespaced(\"addPoint\"), point)\nexport const buildMapPointRemover = (store: Store<{}>) => (point: TurbineMapPoint) => store.commit(namespaced(\"removePoint\"), point)\nexport const buildMapPointModifier = (store: Store<{}>) => (point: TurbineMapPoint, index: number) => store.commit(namespaced(\"changePoint\"), { point, index })\n\nexport const turbineModel: Module<TurbineModelState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tpoints: [\n\t\t\t{ gasflow: 0,\t\tpressureRatio: 1 },\n\t\t\t{ gasflow: 9.2,\t\tpressureRatio: 1.175 },\n\t\t\t{ gasflow: 12.1,\t\tpressureRatio: 1.375 },\n\t\t\t{ gasflow: 13,\tpressureRatio: 1.5 },\n\t\t\t{ gasflow: 14.4,\tpressureRatio: 1.75 },\n\t\t\t{ gasflow: 16,\t\tpressureRatio: 2.25 },\n\t\t\t{ gasflow: 16.25,\t\tpressureRatio: 2.5 },\n\t\t\t{ gasflow: 16.4,\tpressureRatio: 3 },\n\t\t\t{ gasflow: 16.2,\tpressureRatio: 3.75 }\n\t\t]\n\t},\n\tgetters: {\n\t\tpoints: ({ points }) => points\n\t},\n\tmutations: {\n\t\taddPoint: (state, point: TurbineMapPoint) => {\n\t\t\tstate.points.push(point);\n\t\t\tstate.points.sort((a, b) => a.pressureRatio - b.pressureRatio);\n\t\t},\n\t\tremovePoint: (state, point: TurbineMapPoint) => {\n\t\t\tconst index = state.points.findIndex(p => p.pressureRatio === point.pressureRatio && p.gasflow === point.gasflow)\n\t\t\tstate.points.splice(index, 1);\n\t\t},\n\t\tchangePoint: (state, { index, point }: { index: number; point: TurbineMapPoint }) => {\n\t\t\tstate.points[index] = point;\n\t\t}\n\t}\n}","\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildMapPointModifier,\n\tbuildMapPointsGetter\n} from \"@/store/turbine-model\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflowUnits, MassAirflow, Power, Temperature } from \"@/physics/units\";\nimport { useMouseControl } from \"./mouse-control\";\nimport { getTurbinePower, uncorrectGasflow } from \"@/physics/calculations\";\nimport Tooltip from \"@/components/Tooltip.vue\"\n\ntype TurbineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"TurbineMap\",\n\tcomponents: { Tooltip },\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as TurbineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tconst tooltipX = ref(0)\n\t\tconst tooltipY = ref(0)\n\t\tconst tooltipVisible = ref(false)\n\n\t\tconst setTooltipPosition = (x: number, y: number) => {\n\t\t\ttooltipX.value = x;\n\t\t\ttooltipY.value = y;\n\t\t}\n\t\tconst hideTooltip = () => tooltipVisible.value = false;\n\t\tconst showTooltip = () => tooltipVisible.value = true;\n\n\t\tconst graphCanvas = ref({} as HTMLCanvasElement);\n\t\tconst graphCanvasViewport = ref({ left: 0, top: 0 } as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas.value?.getBoundingClientRect() }\n\t\tconst originX = computed(() => graphCanvasViewport.value.left + padding)\n\t\tconst originY = computed(() => graphCanvasViewport.value.top + padding)\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"turbineGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"turbineGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"turbineGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"turbineGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"turbineGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"turbineGrid\", \"yStep\", store));\n\t\tconst airflowUnits = ref(MassAirflowUnits.kgs);\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\t\tconst removeMapPoint = buildMapPointRemover(store);\n\t\tconst turbineMapPointsRaw = buildMapPointsGetter(store);\n\t\tconst turbineMapPoints = computed(\n\t\t\t() => turbineMapPointsRaw().map(p => ({\n\t\t\t\ty: p.gasflow,\n\t\t\t\tx: p.pressureRatio\n\t\t\t}))\n\t\t)\n\n\t\tconst pointerData = ref({\n\t\t\tturbinePower: new Power(0),\n\t\t\tphi: 0,\n\t\t});\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas.value = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.value.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas.value,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawCurve(turbineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawCurve(turbineMapPoints.value) }],\n\t\t\t\tminY: minAirflow,\n\t\t\t\tmaxY: maxAirflow,\n\t\t\t\tyStep: airflowInterval,\n\t\t\t\tminX: minPressureRatio,\n\t\t\t\tmaxX: maxPressureRatio,\n\t\t\t\txStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => turbineMapPoints.value,\n\t\t\t\tpoints => { graph.drawCurve(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst findMapPointIndex = (pressureRatio: number, airflow: number): number => {\n\t\t\treturn turbineMapPointsRaw().findIndex((point) => {\n\t\t\t\tif (point.pressureRatio === pressureRatio || (point.pressureRatio * 1.05 > pressureRatio && point.pressureRatio * 0.95 < pressureRatio)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.gasflow === airflow ||\n\t\t\t\t\t\t(point.gasflow * 1.05 > airflow && point.gasflow * 0.95 < airflow)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick\n\t\t} = useMouseControl<number, number>({\n\t\t\toriginX,\n\t\t\toriginY,\n\t\t\tmapWidth,\n\t\t\tmapHeight,\n\t\t\tpadding,\n\t\t\tminX: minAirflow,\n\t\t\tmaxX: maxAirflow,\n\t\t\tminY: minPressureRatio,\n\t\t\tmaxY: maxPressureRatio,\n\t\t\ttransformYValue: a => a,\n\t\t\ttransformXValue: a => a,\n\t\t\tonHover: (pressureRatio, airflow, x, y) => {\n\t\t\t\tsetTooltipPosition(x - graphCanvasViewport.value.left, y - graphCanvasViewport.value.top)\n\t\t\t\tpointerData.value = {\n\t\t\t\t\tturbinePower: getTurbinePower({\n\t\t\t\t\t\tmassAirflow: uncorrectGasflow({\n\t\t\t\t\t\t\tcorrectedFlow: new MassAirflow(airflow, MassAirflowUnits.lbsmin),\n\t\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\t\texhaustTemperature: new Temperature(1100),\n\t\t\t\t\t\t\treferenceTemperature: new Temperature(288.15)\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tinletTemperature: new Temperature(1100),\n\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\tturbineEfficiency: 0.70\n\t\t\t\t\t}),\n\t\t\t\t\tphi: airflow\n\t\t\t\t}\n\n\t\t\t\tif (contextPoint > -1) {\n\t\t\t\t\tsetMapPoint(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\t\tgasflow: airflow,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontextPoint\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonMouseDown: (pressureRatio, airflow) => {\n\t\t\t\tcontextPoint = findMapPointIndex(pressureRatio, airflow);\n\t\t\t},\n\t\t\tonMouseUp: () => { contextPoint = -1 },\n\t\t\tonRightClick: (pressureRatio, airflow) => {\n\t\t\t\tconst pointIndex = findMapPointIndex(pressureRatio, airflow);\n\n\t\t\t\tif (pointIndex < 0) {\n\t\t\t\t\tinsertMapPoint({\n\t\t\t\t\t\tpressureRatio,\n\t\t\t\t\t\tgasflow: airflow,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tremoveMapPoint(turbineMapPointsRaw()[pointIndex]);\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\thandleRightClick,\n\t\t\tairflowUnits,\n\t\t\tpointerData,\n\t\t\ttooltipX,\n\t\t\ttooltipY,\n\t\t\ttooltipVisible,\n\t\t\tshowTooltip,\n\t\t\thideTooltip,\n\t\t}\n\t},\n})\n","import { render } from \"./TurbineMap.vue?vue&type=template&id=0b77a3cc&scoped=true\"\nimport script from \"./TurbineMap.vue?vue&type=script&lang=ts\"\nexport * from \"./TurbineMap.vue?vue&type=script&lang=ts\"\n\nimport \"./TurbineMap.vue?vue&type=style&index=0&id=0b77a3cc&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-0b77a3cc\"\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflow, MassAirflowUnits, Temperature } from \"@/physics/units\";\nimport { buildInterpolator, getTurbinePower, uncorrectGasflow } from \"@/physics/calculations\";\nimport { buildMapPointsGetter as buildTurbineMapPointsGetter } from \"@/store/turbine-model\";\nimport { CP_AIR_288K, GAMMA_AIR_288K } from \"@/physics/constants\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"TurbineMapOnCompressor\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\n\t\tlet graphCanvas: HTMLCanvasElement;\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\n\t\tconst turbineMapPoints = computed(buildTurbineMapPointsGetter(store));\n\n\t\tconst interpolateTurbinePower = buildInterpolator(\n\t\t\t() => turbineMapPoints.value,\n\t\t\t({ gasflow, pressureRatio }) => uncorrectGasflow({\n\t\t\t\tcorrectedFlow: new MassAirflow(gasflow, MassAirflowUnits.lbsmin),\n\t\t\t\tpressureRatio,\n\t\t\t\treferenceTemperature: new Temperature(288.15),\n\t\t\t\texhaustTemperature: new Temperature(1100)\n\t\t\t})[\"lbs/min\"],\n\t\t\t({ gasflow, pressureRatio }) => getTurbinePower({\n\t\t\t\tmassAirflow: uncorrectGasflow({\n\t\t\t\t\tcorrectedFlow: new MassAirflow(gasflow, MassAirflowUnits.lbsmin),\n\t\t\t\t\tpressureRatio,\n\t\t\t\t\treferenceTemperature: new Temperature(288.15),\n\t\t\t\t\texhaustTemperature: new Temperature(1100)\n\t\t\t\t}),\n\t\t\t\tpressureRatio,\n\t\t\t\tinletTemperature: new Temperature(1100),\n\t\t\t\tturbineEfficiency: 0.69\n\t\t\t}).SI,\n\t\t)\n\n\t\tconst impossiblePressures = (maf: number): number => {\n\t\t\tconst afr = 1 + (1 / 11.3);\n\t\t\tconst a = interpolateTurbinePower(maf * afr) * 0.60\n\t\t\tconst b = new MassAirflow(maf, MassAirflowUnits.lbsmin).SI * CP_AIR_288K * ambientAirTemperature.value.SI;\n\t\t\tconst c = (a / b) + 1;\n\n\t\t\treturn Math.pow(c, GAMMA_AIR_288K / (GAMMA_AIR_288K - 1));\n\t\t}\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.plotFunction(impossiblePressures)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => graph.plotFunction(impossiblePressures)],\n\t\t\t\tminX: minAirflow,\n\t\t\t\tmaxX: maxAirflow,\n\t\t\t\txStep: airflowInterval,\n\t\t\t\tminY: minPressureRatio,\n\t\t\t\tmaxY: maxPressureRatio,\n\t\t\t\tyStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => turbineMapPoints.value.reduce((agg, p) => agg + p.pressureRatio + p.gasflow, 0),\n\t\t\t\t() => { graph.plotFunction(impossiblePressures) }\n\t\t\t)\n\t\t});\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.tooltip {\n\tdisplay: none;\n\tbackground: #C8C8C7;\n\tmargin-left: 30px;\n\tpadding: 10px;\n\tposition: absolute;\n\tz-index: 1000;\n\theight: 100px;\n}\n</style>\n","\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflow, MassAirflowUnits, Temperature } from \"@/physics/units\";\nimport { buildInterpolator, getTurbinePower, uncorrectGasflow } from \"@/physics/calculations\";\nimport { buildMapPointsGetter as buildTurbineMapPointsGetter } from \"@/store/turbine-model\";\nimport { CP_AIR_288K, GAMMA_AIR_288K } from \"@/physics/constants\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"TurbineMapOnCompressor\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\n\t\tlet graphCanvas: HTMLCanvasElement;\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\n\t\tconst turbineMapPoints = computed(buildTurbineMapPointsGetter(store));\n\n\t\tconst interpolateTurbinePower = buildInterpolator(\n\t\t\t() => turbineMapPoints.value,\n\t\t\t({ gasflow, pressureRatio }) => uncorrectGasflow({\n\t\t\t\tcorrectedFlow: new MassAirflow(gasflow, MassAirflowUnits.lbsmin),\n\t\t\t\tpressureRatio,\n\t\t\t\treferenceTemperature: new Temperature(288.15),\n\t\t\t\texhaustTemperature: new Temperature(1100)\n\t\t\t})[\"lbs/min\"],\n\t\t\t({ gasflow, pressureRatio }) => getTurbinePower({\n\t\t\t\tmassAirflow: uncorrectGasflow({\n\t\t\t\t\tcorrectedFlow: new MassAirflow(gasflow, MassAirflowUnits.lbsmin),\n\t\t\t\t\tpressureRatio,\n\t\t\t\t\treferenceTemperature: new Temperature(288.15),\n\t\t\t\t\texhaustTemperature: new Temperature(1100)\n\t\t\t\t}),\n\t\t\t\tpressureRatio,\n\t\t\t\tinletTemperature: new Temperature(1100),\n\t\t\t\tturbineEfficiency: 0.69\n\t\t\t}).SI,\n\t\t)\n\n\t\tconst impossiblePressures = (maf: number): number => {\n\t\t\tconst afr = 1 + (1 / 11.3);\n\t\t\tconst a = interpolateTurbinePower(maf * afr) * 0.60\n\t\t\tconst b = new MassAirflow(maf, MassAirflowUnits.lbsmin).SI * CP_AIR_288K * ambientAirTemperature.value.SI;\n\t\t\tconst c = (a / b) + 1;\n\n\t\t\treturn Math.pow(c, GAMMA_AIR_288K / (GAMMA_AIR_288K - 1));\n\t\t}\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.plotFunction(impossiblePressures)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => graph.plotFunction(impossiblePressures)],\n\t\t\t\tminX: minAirflow,\n\t\t\t\tmaxX: maxAirflow,\n\t\t\t\txStep: airflowInterval,\n\t\t\t\tminY: minPressureRatio,\n\t\t\t\tmaxY: maxPressureRatio,\n\t\t\t\tyStep: pressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => turbineMapPoints.value.reduce((agg, p) => agg + p.pressureRatio + p.gasflow, 0),\n\t\t\t\t() => { graph.plotFunction(impossiblePressures) }\n\t\t\t)\n\t\t});\n\t},\n})\n","import { render } from \"./TurbineMapOnCompressor.vue?vue&type=template&id=545c6c6e&scoped=true\"\nimport script from \"./TurbineMapOnCompressor.vue?vue&type=script&lang=ts\"\nexport * from \"./TurbineMapOnCompressor.vue?vue&type=script&lang=ts\"\n\nimport \"./TurbineMapOnCompressor.vue?vue&type=style&index=0&id=545c6c6e&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-545c6c6e\"\n\nexport default script","\nimport { defineComponent } from \"vue\"\nimport { ExternalMap as ExternalMapEnum } from \"@/store/external-map\"\nimport Grid from \"./Grid.vue\"\nimport EngineMap from \"./EngineMap.vue\"\nimport ExternalMap from \"./ExternalMap.vue\"\nimport TurbineMap from \"./TurbineMap.vue\"\nimport TurbineMapOnCompressor from \"./TurbineMapOnCompressor.vue\"\n\nenum MapLayer {\n\tCompressorMap = \"compressor-map\",\n\tCompressorGrid = \"compressor-grid\",\n\tTurbineMapOnCompressor = \"turbine-map-on-compressor\",\n\tEngineMap = \"engine-map\",\n\tTurbineMap = \"turbine-map\",\n\tTurbineGrid = \"turbine-grid\",\n\tTurbineModel = \"turbine-model\"\n}\n\nconst defaultConfig = {\n\twidth: 1208,\n\theight: 908,\n\tpadding: 100\n};\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: {\n\t\tExternalMap,\n\t\tGrid,\n\t\tEngineMap,\n\t\tTurbineMap,\n\t\tTurbineMapOnCompressor,\n\t},\n\tsetup: () => ({\n\t\tMapLayer,\n\t\tExternalMap: ExternalMapEnum,\n\t\tcanvasHeight: defaultConfig.height,\n\t\tcanvasWidth: defaultConfig.width,\n\t\tgridPadding: defaultConfig.padding\n\t})\n})\n","import { render } from \"./Maps.vue?vue&type=template&id=a3ef1a1a\"\nimport script from \"./Maps.vue?vue&type=script&lang=ts\"\nexport * from \"./Maps.vue?vue&type=script&lang=ts\"\n\nimport \"./Maps.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n\t<div class=\"map-points-container\">\n\t\t<div\n\t\t\tv-for=\"(point, index) in points\"\n\t\t\t:key=\"index\">\n\t\t\t<form v-on:submit.prevent=\"removeEngineMapPoint(point)\">\n\t\t\t\t<fieldset class=\"map-point\">\n\t\t\t\t\t<input type=number v-model=\"point.pressure\" step=\"0.01\" />\n\t\t\t\t\t<input type=number v-model=\"point.rpm\" step=\"100\" />\n\t\t\t\t\t<button type=\"submit\">remove</button>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</div>\n\t\t<form v-on:submit.prevent=\"addEngineMapPoint\">\n\t\t\t<fieldset>\n\t\t\t\t<label for=\"engine-pressure\">Pressure (bar)</label>\n\t\t\t\t<input id=\"engine-pressure\" type=number v-model=\"enginePressure\" step=\"0.01\" />\n\t\t\t\t<label for=\"engine-speed\">Engine speed (rpm)</label>\n\t\t\t\t<input id=\"engine-speed\" type=number v-model=\"engineSpeed\" step=\"100\" />\n\t\t\t</fieldset>\n\t\t\t<button type=\"submit\">Add!</button>\n\t\t</form>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from \"vue\"\nimport { useStore } from \"vuex\"\nimport {\n\tbuildMapPointsGetter,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildAccessor as buildMapPointAccessor,\n} from \"@/store/engine-map\"\nimport { Pressure } from \"@/physics/units\";\n\nexport default defineComponent({\n\tname: \"EngineMapPoints\",\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst enginePressure = ref(1);\n\t\tconst engineSpeed = ref(1000);\n\n\t\tconst pressureUnits = computed(buildMapPointAccessor(\"mapPressureUnits\", store));\n\t\tconst rawPoints = computed(buildMapPointsGetter(store));\n\t\tconst points = computed(() => rawPoints.value.map(point => {\n\t\t\treturn {\n\t\t\t\tget pressure () {\n\t\t\t\t\treturn point.pressure[pressureUnits.value]\n\t\t\t\t},\n\t\t\t\tset pressure (p: number) {\n\t\t\t\t\tpoint.pressure[pressureUnits.value] = p\n\t\t\t\t},\n\t\t\t\tget rpm () {\n\t\t\t\t\treturn point.rpm\n\t\t\t\t},\n\t\t\t\tset rpm (r: number) {\n\t\t\t\t\tpoint.rpm = r\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\n\t\tconst removeEngineMapPoint = buildMapPointRemover(store);\n\n\t\tconst addEngineMapPoint = () => {\n\t\t\tinsertMapPoint({ pressure: new Pressure(enginePressure.value, pressureUnits.value), rpm: engineSpeed.value })\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\tpoints,\n\t\t\tenginePressure,\n\t\t\tengineSpeed,\n\t\t\taddEngineMapPoint,\n\t\t\tremoveEngineMapPoint\n\t\t}\n\t}\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.map-points-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.map-point {\n\tdisplay: flex;\n}\n</style>","\nimport { defineComponent, computed, ref } from \"vue\"\nimport { useStore } from \"vuex\"\nimport {\n\tbuildMapPointsGetter,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildAccessor as buildMapPointAccessor,\n} from \"@/store/engine-map\"\nimport { Pressure } from \"@/physics/units\";\n\nexport default defineComponent({\n\tname: \"EngineMapPoints\",\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst enginePressure = ref(1);\n\t\tconst engineSpeed = ref(1000);\n\n\t\tconst pressureUnits = computed(buildMapPointAccessor(\"mapPressureUnits\", store));\n\t\tconst rawPoints = computed(buildMapPointsGetter(store));\n\t\tconst points = computed(() => rawPoints.value.map(point => {\n\t\t\treturn {\n\t\t\t\tget pressure () {\n\t\t\t\t\treturn point.pressure[pressureUnits.value]\n\t\t\t\t},\n\t\t\t\tset pressure (p: number) {\n\t\t\t\t\tpoint.pressure[pressureUnits.value] = p\n\t\t\t\t},\n\t\t\t\tget rpm () {\n\t\t\t\t\treturn point.rpm\n\t\t\t\t},\n\t\t\t\tset rpm (r: number) {\n\t\t\t\t\tpoint.rpm = r\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\n\t\tconst removeEngineMapPoint = buildMapPointRemover(store);\n\n\t\tconst addEngineMapPoint = () => {\n\t\t\tinsertMapPoint({ pressure: new Pressure(enginePressure.value, pressureUnits.value), rpm: engineSpeed.value })\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\tpoints,\n\t\t\tenginePressure,\n\t\t\tengineSpeed,\n\t\t\taddEngineMapPoint,\n\t\t\tremoveEngineMapPoint\n\t\t}\n\t}\n})\n","import { render } from \"./EngineMapPoints.vue?vue&type=template&id=0497d696&scoped=true\"\nimport script from \"./EngineMapPoints.vue?vue&type=script&lang=ts\"\nexport * from \"./EngineMapPoints.vue?vue&type=script&lang=ts\"\n\nimport \"./EngineMapPoints.vue?vue&type=style&index=0&id=0497d696&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-0497d696\"\n\nexport default script","<template>\n\t<form>\n\t\t<fieldset>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"h-scale\">Horizontal scale</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"h-scale\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tstep=\"0.0001\"\n\t\t\t\t\tv-model=\"hScale\">\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"h-offset\">Horizontal offset</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"h-offset\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tv-model=\"hOffset\">\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"v-scale\">Vertical scale</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"v-scale\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tstep=\"0.0001\"\n\t\t\t\t\tv-model=\"vScale\">\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"v-offset\">Vertical offset</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"v-offset\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tv-model=\"vOffset\">\n\t\t\t</div>\n\t\t</fieldset>\n\t</form>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n\tbuildAccessor,\n\tExternalMap\n} from \"@/store/external-map\";\n\ntype MapScaleControlsProps = {\n\tmapName: ExternalMap;\n}\n\nexport default defineComponent({\n\tname: \"MapScaleControls\",\n\tprops: {\n\t\tmapName: String\n\t},\n\tsetup: (props) => {\n\t\tconst { mapName } = props as MapScaleControlsProps;\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildAccessor(mapName, \"hOffset\", store))\n\t\tconst vOffset = computed(buildAccessor(mapName, \"vOffset\", store))\n\t\tconst hScale = computed(buildAccessor(mapName, \"hScale\", store))\n\t\tconst vScale = computed(buildAccessor(mapName, \"vScale\", store))\n\n\t\treturn {\n\t\t\thOffset,\n\t\t\tvOffset,\n\t\t\thScale,\n\t\t\tvScale\n\t\t}\n\t}\n})\n</script>","\nimport { defineComponent, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n\tbuildAccessor,\n\tExternalMap\n} from \"@/store/external-map\";\n\ntype MapScaleControlsProps = {\n\tmapName: ExternalMap;\n}\n\nexport default defineComponent({\n\tname: \"MapScaleControls\",\n\tprops: {\n\t\tmapName: String\n\t},\n\tsetup: (props) => {\n\t\tconst { mapName } = props as MapScaleControlsProps;\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildAccessor(mapName, \"hOffset\", store))\n\t\tconst vOffset = computed(buildAccessor(mapName, \"vOffset\", store))\n\t\tconst hScale = computed(buildAccessor(mapName, \"hScale\", store))\n\t\tconst vScale = computed(buildAccessor(mapName, \"vScale\", store))\n\n\t\treturn {\n\t\t\thOffset,\n\t\t\tvOffset,\n\t\t\thScale,\n\t\t\tvScale\n\t\t}\n\t}\n})\n","import { render } from \"./MapScaleControls.vue?vue&type=template&id=4dca5639\"\nimport script from \"./MapScaleControls.vue?vue&type=script&lang=ts\"\nexport * from \"./MapScaleControls.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport {\n\tdefineComponent,\n\tcomputed,\n\twatch,\n\tRef,\n\tWritableComputedRef,\n\tref,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport { ExternalMap } from \"@/store/external-map\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport Maps from \"./Maps.vue\"\nimport EngineMapPoints from \"./EngineMapPoints.vue\"\nimport MapScaleControls from \"./MapScaleControls.vue\"\nimport {\n\tMassAirflowUnits,\n\tMassAirflow,\n\tVolumeUnit,\n\tPressureUnit,\n\tTemperatureUnit\n} from \"@/physics/units\";\n\ntype ValueModelizer = <T>(value: Ref, units: Ref<T>) => WritableComputedRef<number>\nconst modelizeValue: ValueModelizer = (value, units) => computed({\n\tget () { return value.value[units.value] },\n\tset (input: number) { value.value[units.value] = input }\n})\n\nexport default defineComponent({\n\tname: \"Home\",\n\tcomponents: {\n\t\tMaps,\n\t\tEngineMapPoints,\n\t\tMapScaleControls\n\t},\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst airflowUnits = computed(buildEngineMapAccessor(\"airflowUnits\", store));\n\t\tconst minAirflow = computed(buildGridAccessor(\"compressorGrid\", \"minX\", store))\n\t\tconst maxAirflow = computed(buildGridAccessor(\"compressorGrid\", \"maxX\", store))\n\t\tconst airflowInterval = computed(buildGridAccessor(\"compressorGrid\", \"xStep\", store))\n\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"minY\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"compressorGrid\", \"maxY\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"compressorGrid\", \"yStep\", store));\n\n\t\tconst engineDisplacement = modelizeValue(computed(buildEngineMapAccessor(\"displacement\", store)), ref(VolumeUnit.cc));\n\t\tconst ambientAirPressure = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirPressure\", store)), ref(PressureUnit.mbar));\n\t\tconst ambientAirTemperature = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirTemperature\", store)), ref(TemperatureUnit.C));\n\n\t\twatch(\n\t\t\t() => airflowUnits.value,\n\t\t\t(newUnits, prevUnits) => {\n\t\t\t\tminAirflow.value = MassAirflow.convert(prevUnits, minAirflow.value, newUnits)\n\t\t\t\tmaxAirflow.value = MassAirflow.convert(prevUnits, maxAirflow.value, newUnits)\n\t\t\t\tairflowInterval.value = MassAirflow.convert(prevUnits, airflowInterval.value, newUnits)\n\t\t\t}\n\t\t)\n\n\t\tconst airflowUnitStep = computed(() => {\n\t\t\tif (airflowUnits.value === MassAirflowUnits.kgs) {\n\t\t\t\treturn 0.05;\n\t\t\t}\n\t\t\treturn 1;\n\t\t})\n\n\t\treturn {\n\t\t\tMassAirflowUnits,\n\t\t\tExternalMap,\n\t\t\tairflowUnits,\n\t\t\tminAirflow,\n\t\t\tmaxAirflow,\n\t\t\tairflowInterval,\n\t\t\tminPressureRatio,\n\t\t\tmaxPressureRatio,\n\t\t\tpressureRatioStep,\n\t\t\tairflowUnitStep,\n\t\t\tengineDisplacement,\n\t\t\tambientAirPressure,\n\t\t\tambientAirTemperature\n\t\t};\n\t},\n});\n","import { render } from \"./Home.vue?vue&type=template&id=1f6c86ce\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","import { RouteRecordRaw, createRouter, createWebHashHistory } from \"vue-router\";\nimport Home from \"../views/Home.vue\";\n\nconst routes: RouteRecordRaw[] = [\n\t{\n\t\tpath: \"/\",\n\t\tname: \"Home\",\n\t\tcomponent: Home,\n\t},\n];\n\nconst router = createRouter({\n\thistory: createWebHashHistory(),\n\troutes,\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\nimport { ExternalMapConfigState, externalMap, NAMESPACE as externalMapNamespace } from \"./external-map\";\nimport { GridConfigState, grid, NAMESPACE as gridNamespace } from \"./grid\";\nimport { EngineMapState, engineMap, NAMESPACE as engineMapNamespace } from \"./engine-map\"\nimport { TurbineModelState, turbineModel, NAMESPACE as turbineModelNamespace } from \"./turbine-model\";\n\nexport type State = {\n\t[externalMapNamespace]: ExternalMapConfigState;\n\t[gridNamespace]: GridConfigState;\n\t[engineMapNamespace]: EngineMapState;\n\t[turbineModelNamespace]: TurbineModelState;\n}\n\nexport default createStore<State>({\n\tmodules: {\n\t\t[externalMapNamespace]: externalMap,\n\t\t[gridNamespace]: grid,\n\t\t[engineMapNamespace]: engineMap,\n\t\t[turbineModelNamespace]: turbineModel,\n\t},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\n\ncreateApp(App).use(router).use(store).mount(\"#app\");\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./TurbineMap.vue?vue&type=style&index=0&id=0b77a3cc&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./TurbineMap.vue?vue&type=style&index=0&id=0b77a3cc&lang=scss&scoped=true\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&lang=scss\"","import { ABSOLUTE_ZERO_CELSIUS } from \"@/physics/constants\";\nimport { Unit } from \"./Unit\";\n\nexport enum TemperatureUnit {\n\tK = \"kelvin\",\n\tC = \"celsius\",\n\tF = \"farenheit\",\n}\n\nconst celsiusToFarenheit = (celsius: number): number => celsius * 9 / 5 + 32;\nconst celsiusToKelvin = (celsius: number): number => celsius - ABSOLUTE_ZERO_CELSIUS;\nconst farenheitToCelsius = (farenheit: number): number => (farenheit - 32) * 5 / 9;\nconst farenheitToKelvin = (farenheit: number): number => farenheitToCelsius(farenheit) - ABSOLUTE_ZERO_CELSIUS\nconst kelvinToCelsius = (kelvin: number): number => kelvin + ABSOLUTE_ZERO_CELSIUS;\nconst kelvinToFarenheit = (kelvin: number): number => celsiusToFarenheit(kelvinToCelsius(kelvin))\n\nexport class Temperature implements Unit {\n\tprivate _K = 0;\n\tprivate _C = -1 * ABSOLUTE_ZERO_CELSIUS;\n\tprivate _F = kelvinToFarenheit(0);\n\n\tconstructor(value: number, unit = TemperatureUnit.K) {\n\t\tthis[unit] = value;\n\t}\n\n\tget SI () { return this._K }\n\n\tset [TemperatureUnit.K] (value: number) {\n\t\tthis._K = value;\n\t\tthis._C = kelvinToCelsius(value);\n\t\tthis._F = kelvinToFarenheit(value);\n\t}\n\tget [TemperatureUnit.K] () { return this._K; }\n\n\tset [TemperatureUnit.C] (value: number) {\n\t\tthis._K = celsiusToKelvin(value);\n\t\tthis._C = value;\n\t\tthis._F = celsiusToFarenheit(value);\n\t}\n\tget [TemperatureUnit.C] () { return this._C; }\n\n\tset [TemperatureUnit.F] (value: number) {\n\t\tthis._K = farenheitToKelvin(value);\n\t\tthis._C = farenheitToCelsius(value);\n\t\tthis._F = value;\n\t}\n\tget [TemperatureUnit.F] () { return this._F; }\n}\n"],"sourceRoot":""}