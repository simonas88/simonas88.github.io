{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/EngineMap.vue?906f","webpack:///./src/views/Maps.vue?5831","webpack:///./src/physics/units/Pressure.ts","webpack:///./src/physics/units/Volume.ts","webpack:///./src/physics/constants.ts","webpack:///./src/physics/units/index.ts","webpack:///./src/App.vue?9b0a","webpack:///./src/views/EngineMapPoints.vue?b7bb","webpack:///./src/physics/units/Airflow.ts","webpack:///./src/App.vue","webpack:///./src/App.vue?72a1","webpack:///./src/views/Home.vue","webpack:///./src/store/external-map.ts","webpack:///./src/store/grid.ts","webpack:///./src/store/engine-map.ts","webpack:///./src/views/Maps.vue","webpack:///./src/views/CompressorMap.vue","webpack:///./src/views/graphics.ts","webpack:///./src/views/CompressorMap.vue?44d0","webpack:///./src/views/CompressorMap.vue?ad64","webpack:///./src/views/Grid.vue","webpack:///./src/views/grid-watchers.ts","webpack:///./src/views/Grid.vue?031a","webpack:///./src/views/Grid.vue?3c29","webpack:///./src/views/EngineMap.vue","webpack:///./src/physics/calculations.ts","webpack:///./src/views/EngineMap.vue?4439","webpack:///./src/views/EngineMap.vue?9317","webpack:///./src/views/Maps.vue?2b15","webpack:///./src/views/Maps.vue?cc93","webpack:///./src/views/EngineMapPoints.vue","webpack:///./src/views/EngineMapPoints.vue?90d5","webpack:///./src/views/EngineMapPoints.vue?7f1a","webpack:///./src/views/Home.vue?5ba0","webpack:///./src/views/Home.vue?f4ee","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/views/Home.vue?194a","webpack:///./src/physics/units/Temperature.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","PressureUnit","Pressure","unit","Pa","_pa","_kpa","_bar","_mbar","_psi","this","ambient","SI","ratio","another","kPa","bar","mbar","psi","VolumeUnit","Volume","m3","_cc","_m3","cc","AIR_SPECIFIC_GAS_CONSTANT","ABSOLUTE_ZERO_CELSIUS","LBS_PER_KG","PA_PER_PSI","MassAirflowUnits","convertToLbsMin","input","convertToKgS","MassAirflow","units","kgs","_gs","_kgs","_lbsmin","Math","round","gs","lbsmin","script","render","class","for","id","airflowUnits","type","minAirflow","step","airflowUnitStep","maxAirflow","airflowInterval","minPressureRatio","maxPressureRatio","pressureRatioStep","hScale","hOffset","vScale","vOffset","engineDisplacement","ambientAirTemperature","ambientAirPressure","NAMESPACE","namespaced","buildAccessor","store","getters","set","commit","externalMap","state","mutations","buildMapPointsGetter","buildMapPointInserter","point","dispatch","buildMapPointRemover","buildMapPointModifier","index","engineMap","mapPressureUnits","points","pressure","rpm","displacement","C","actions","addPoint","nextPoints","filter","sort","a","b","removePoint","canvas-id","MapLayer","CompressorMap","width","canvasWidth","height","canvasHeight","Grid","padding","gridPadding","EngineMap","canvasId","GRID_STROKE_STYLE","config","canvasRef","minX","minY","maxX","maxY","yInterval","xInterval","context","getContext","gridWidth","gridHeight","origin","font","xAxisSpacing","floor","yAxisSpacing","clear","mergedConfig","clearRect","originX","originY","beginPath","strokeStyle","moveTo","lineTo","stroke","x","label","toFixed","fillText","measureText","y","rect","transformX","transformY","scale","radius","fill","arc","PI","lineWidth","first","restPoints","forEach","closePath","fillStyle","drawCircle","getImageRedrawer","image","canvas","ctx","drawImage","props","Number","String","setup","imgCanvas","document","getElementById","img","Image","src","onload","redrawImage","grid","gridActions","newValues","gridCanvas","drawGrid","drawAxis","handleHover","handleMouseDown","handleMouseUp","pointerData","pressureRatio","massAirflow","temperature","getVolume","volumetricEfficiency","throttling","getVolumeFlow","volume","getRPMfromMAF","maf","airDensity","volumeFlow","graphCanvas","tooltip","mapWidth","mapHeight","graphCanvasViewport","windowResizeHandler","getBoundingClientRect","setMapPoint","getMAFlocal","engineMapRawPoints","engineMapPoints","map","getPressureRatio","querySelector","addEventListener","graph","drawMap","removeEventListener","contextPoint","getMapDataFromAtCanvasXY","top","left","mapY","mapX","getRPM","multiply","e","massAirflowScalar","style","display","pageX","pageY","findIndex","pressureAtMouse","__scopeId","defaultConfig","components","removeEngineMapPoint","addEngineMapPoint","enginePressure","engineSpeed","pressureUnits","rawPoints","insertMapPoint","Maps","EngineMapPoints","routes","path","component","Home","router","history","App","use","mount","TemperatureUnit","celsiusToFarenheit","celsius","farenheitToCelsius","farenheit","kelvinToFarenheit","kelvin","farenheitToKelvin","Temperature","K","_K","_C","_F","F"],"mappings":"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","file":"js/app.e5fa9edd.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMap.vue?vue&type=style&index=0&id=401239f1&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMap.vue?vue&type=style&index=0&id=401239f1&lang=scss&scoped=true\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Maps.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Maps.vue?vue&type=style&index=0&lang=scss\"","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { PA_PER_PSI } from \"@/physics/constants\";\nimport { Unit } from \"./Unit\";\n\nexport enum PressureUnit {\n\tPa = \"pascal\",\n\tkPa = \"kilopascal\",\n\tbar = \"bar\",\n\tmbar = \"milibar\",\n\tpsi = \"psi\"\n}\n\nexport class Pressure implements Unit {\n\tprivate _pa = 0;\n\tprivate _kpa = 0;\n\tprivate _bar = 0;\n\tprivate _mbar = 0;\n\tprivate _psi = 0;\n\n\tconstructor(value: number, unit = PressureUnit.Pa) {\n\t\tthis[unit] = value;\n\t}\n\n\tget SI () { return this._pa }\n\n\tset [PressureUnit.Pa] (value: number) {\n\t\tthis._pa = value;\n\t\tthis._kpa = value / 1000;\n\t\tthis._bar = value / 100000;\n\t\tthis._mbar = value / 100;\n\t\tthis._psi = value / PA_PER_PSI;\n\t}\n\tget [PressureUnit.Pa] () { return this._pa }\n\n\tset [PressureUnit.kPa] (value: number) {\n\t\tthis._pa = value * 1000;\n\t\tthis._kpa = value;\n\t\tthis._bar = value / 100;\n\t\tthis._mbar = value * 10;\n\t\tthis._psi = value * 1000 / PA_PER_PSI;\n\t}\n\tget [PressureUnit.kPa] () { return this._kpa }\n\n\tset [PressureUnit.bar] (value: number) {\n\t\tthis._pa = value * 100000;\n\t\tthis._kpa = value * 100;\n\t\tthis._bar = value;\n\t\tthis._mbar = value * 1000;\n\t\tthis._psi = value * 100000 / PA_PER_PSI;\n\t}\n\tget [PressureUnit.bar] () { return this._bar }\n\n\tset [PressureUnit.mbar] (value: number) {\n\t\tthis._pa = value * 100;\n\t\tthis._kpa = value / 10;\n\t\tthis._bar = value / 1000;\n\t\tthis._mbar = value;\n\t\tthis._psi = value * 100 / PA_PER_PSI;\n\t}\n\tget [PressureUnit.mbar] () { return this._mbar }\n\n\tset [PressureUnit.psi] (value: number) {\n\t\tthis._psi = value;\n\t\tthis._pa = PA_PER_PSI * value;\n\t\tthis._kpa = this._pa / 1000;\n\t\tthis._bar = this._pa / 100000;\n\t\tthis._mbar = this._pa / 100;\n\t}\n\tget [PressureUnit.psi] () { return this._psi }\n\n\tgetRelativePressure(ambient: Pressure): Pressure {\n\t\treturn new Pressure(this.SI - ambient.SI)\n\t}\n\n\tgetPressureRatio(ambient: Pressure): number {\n\t\treturn this.SI / ambient.SI\n\t}\n\n\tmultiply(ratio: number): Pressure {\n\t\treturn new Pressure(this.SI * ratio)\n\t}\n\n\tcompareTo(another: Pressure): number {\n\t\treturn this.SI - another.SI;\n\t}\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport { Unit } from \"./Unit\";\n\nexport enum VolumeUnit {\n\tcc = \"cubic centimeters\",\n\tm3 = \"cubic meters\",\n}\n\nexport class Volume implements Unit {\n\tprivate _cc = 0;\n\tprivate _m3 = 0;\n\n\tconstructor(value: number, unit = VolumeUnit.m3) {\n\t\tthis[unit] = value;\n\t}\n\n\tget SI () { return this._m3; }\n\n\tset [VolumeUnit.cc] (value: number) {\n\t\tthis._cc = value;\n\t\tthis._m3 = value / 1000000;\n\t}\n\tget [VolumeUnit.cc] () { return this._cc }\n\n\tset[VolumeUnit.m3] (value: number) {\n\t\tthis._m3 = value;\n\t\tthis._cc = value * 1000000\n\t}\n\tget [VolumeUnit.m3] () { return this._m3 }\n}\n","export const GAS_CONSTANT = 8.314463; // J⋅K−1⋅mol−1\nexport const AIR_SPECIFIC_GAS_CONSTANT = 287.058; // J/(kg·K)\nexport const ZERO_CELSIUS_KELVIN = 273.15;\nexport const ABSOLUTE_ZERO_CELSIUS = -273.15;\nexport const ABSOLUTE_ZERO_FARENHEIT = -459.67;\nexport const LBS_PER_KG = 2.204623;\nexport const PA_PER_PSI = 6894.757293;\n","export * from \"./Airflow\";\nexport * from \"./Pressure\";\nexport * from \"./Temperature\";\nexport * from \"./Unit\";\nexport * from \"./Volume\";","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMapPoints.vue?vue&type=style&index=0&id=50d1c286&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMapPoints.vue?vue&type=style&index=0&id=50d1c286&lang=scss&scoped=true\"","import { LBS_PER_KG } from \"@/physics/constants\";\nimport { Unit } from \"./Unit\";\n\nexport enum MassAirflowUnits {\n\tgs = \"g/s\",\n\tkgs = \"kg/s\",\n\tlbsmin = \"lbs/min\"\n}\n\nconst convertToLbsMin = (input: number) => {\n\treturn input * LBS_PER_KG * 60;\n}\n\nconst convertToKgS = (input: number) => {\n\treturn (input / 60) / LBS_PER_KG;\n}\n\nexport class MassAirflow implements Unit {\n\tprivate _gs = 0;\n\tprivate _kgs = 0;\n\tprivate _lbsmin = 0;\n\n\tconstructor(value: number, units = MassAirflowUnits.kgs) {\n\t\tthis[units] = value;\n\t}\n\n\tget SI () {\n\t\treturn this._kgs;\n\t}\n\n\tset [MassAirflowUnits.gs] (value: number) {\n\t\tthis._gs = value;\n\t\tthis._kgs = value / 1000;\n\t\tthis._lbsmin = convertToLbsMin(this._kgs);\n\t}\n\tget [MassAirflowUnits.gs] () { return this.round(this._gs) }\n\n\tset [MassAirflowUnits.kgs] (value: number) {\n\t\tthis._gs = value * 1000;\n\t\tthis._kgs = value;\n\t\tthis._lbsmin = convertToLbsMin(this._kgs);\n\t}\n\tget [MassAirflowUnits.kgs] () { return this.round(this._kgs) }\n\n\tset [MassAirflowUnits.lbsmin] (value: number) {\n\t\tthis._lbsmin = value;\n\t\tthis._kgs = convertToKgS(value);\n\t\tthis._gs = this._kgs * 1000;\n\t}\n\tget [MassAirflowUnits.lbsmin] () { return this.round(this._lbsmin) }\n\n\tround(input: number) {\n\t\treturn Math.round(input * 10000) / 10000\n\t}\n}","<template>\n\t<router-view/>\n</template>\n\n<style lang=\"scss\">\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n#app {\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: #2c3e50;\n\n\tbackground-color: azure;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100vh;\n\twidth: 100vw;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=25a3efc2\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n\t<Maps />\n\t<div class=\"calculation-container\">\n\t\t<form>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"airflow\">Mass airflow units</label>\n\t\t\t\t<fieldset id=\"airflow\">\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"airflow-units\"\n\t\t\t\t\t\tv-model=\"airflowUnits\">\n\t\t\t\t\t\t<option :value=\"MassAirflowUnits.kgs\">kg/s</option>\n\t\t\t\t\t\t<option :value=\"MassAirflowUnits.lbsmin\">Lbs/min</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"min-airflow\">Minimum airflow</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"min-airflow\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"minAirflow\"\n\t\t\t\t\t\t\t:step=\"airflowUnitStep\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-airflow\">Maximum airflow</label><input\n\t\t\t\t\t\t\tid=\"max-airflow\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"maxAirflow\"\n\t\t\t\t\t\t\t:step=\"airflowUnitStep\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"airflow-interval\">Airflow grid step</label><input\n\t\t\t\t\t\t\tid=\"airflow-interval\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"airflowInterval\"\n\t\t\t\t\t\t\tstep=\"any\">\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"min-pressure-ratio\">Min pressure ratio</label>\n\t\t\t\t\t\t<input id=\"min-pressure-ratio\" type=\"number\" v-model=\"minPressureRatio\" step=\"0.5\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-pressure-ratio\">Max pressure ratio</label>\n\t\t\t\t\t\t<input id=\"max-pressure-ratio\" type=\"number\" v-model=\"maxPressureRatio\" step=\"0.5\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-pressure-ratio\">Pressure ratio step</label>\n\t\t\t\t\t\t<input id=\"max-pressure-ratio\" type=\"number\" v-model=\"pressureRatioStep\" step=\"any\">\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t</form>\n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"h-scale\">Horizontal scale</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"h-scale\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tstep=\"0.001\"\n\t\t\t\t\t\tv-model=\"hScale\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"h-offset\">Horizontal offset</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"h-offset\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tv-model=\"hOffset\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"v-scale\">Vertical scale</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"v-scale\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tstep=\"0.001\"\n\t\t\t\t\t\tv-model=\"vScale\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"v-offset\">Vertical offset</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"v-offset\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tv-model=\"vOffset\">\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"engine-displacement\">Engine displacement (cc)</label>\n\t\t\t\t\t<input id=\"engine-displacement\" type=\"number\" v-model=\"engineDisplacement\" step=\"1\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"ambient-air-temperature\">Ambient air temperature (C)</label>\n\t\t\t\t\t<input id=\"ambient-air-temperature\" type=\"number\" v-model=\"ambientAirTemperature\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"ambient-air-pressure\">Ambient air absolute pressure (mbar)</label>\n\t\t\t\t\t<input id=\"ambient-air-pressure\" type=\"number\" v-model=\"ambientAirPressure\">\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t\t<EngineMapPoints />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport {\n\tdefineComponent,\n\tcomputed,\n\tRef,\n\tWritableComputedRef,\n\tref,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor } from \"@/store/external-map\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport Maps from \"./Maps.vue\"\nimport EngineMapPoints from \"./EngineMapPoints.vue\"\nimport {\n\tMassAirflowUnits,\n\tPressureUnit,\n\tTemperatureUnit,\n\tVolumeUnit\n} from \"@/physics/units\";\n\ntype ValueModelizer = <T>(value: Ref, units: Ref<T>) => WritableComputedRef<number>\n\nconst modelizeValue: ValueModelizer = (value, units) => computed({\n\tget () { return value.value[units.value] },\n\tset (input: number) { value.value[units.value] = input }\n})\n\nexport default defineComponent({\n\tname: \"Home\",\n\tcomponents: {\n\t\tMaps,\n\t\tEngineMapPoints\n\t},\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(\"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(\"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(\"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(\"vScale\", store))\n\n\t\tconst airflowUnits = computed(buildGridAccessor(\"airflowUnits\", store));\n\t\tconst minAirflow = modelizeValue(computed(buildGridAccessor(\"minAirflow\", store)), airflowUnits);\n\t\tconst maxAirflow = modelizeValue(computed(buildGridAccessor(\"maxAirflow\", store)), airflowUnits);\n\t\tconst airflowInterval = modelizeValue(computed(buildGridAccessor(\"airflowInterval\", store)), airflowUnits);\n\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\n\t\tconst engineDisplacement = modelizeValue(computed(buildEngineMapAccessor(\"displacement\", store)), ref(VolumeUnit.cc))\n\t\tconst ambientAirPressure = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirPressure\", store)), ref(PressureUnit.mbar))\n\t\tconst ambientAirTemperature = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirTemperature\", store)), ref(TemperatureUnit.C))\n\n\t\tconst airflowUnitStep = computed(() => {\n\t\t\tif (airflowUnits.value === MassAirflowUnits.kgs) {\n\t\t\t\treturn 0.05;\n\t\t\t}\n\t\t\treturn 1;\n\t\t})\n\n\t\treturn {\n\t\t\tMassAirflowUnits,\n\t\t\thScale,\n\t\t\tvScale,\n\t\t\thOffset,\n\t\t\tvOffset,\n\t\t\tairflowUnits,\n\t\t\tminAirflow,\n\t\t\tmaxAirflow,\n\t\t\tairflowInterval,\n\t\t\tminPressureRatio,\n\t\t\tmaxPressureRatio,\n\t\t\tpressureRatioStep,\n\t\t\tairflowUnitStep,\n\t\t\tengineDisplacement,\n\t\t\tambientAirPressure,\n\t\t\tambientAirTemperature\n\t\t};\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.calculation-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n</style>\n","import { Module, Store } from \"vuex\";\n\nexport const NAMESPACE = \"externalMap\"\n\nexport interface ExternalMapConfigState {\n\thScale: number;\n\thOffset: number;\n\tvScale: number;\n\tvOffset: number;\n}\n\nconst namespaced = (input: keyof ExternalMapConfigState): string => `${NAMESPACE}/${input}`;\n\nexport const buildAccessor = <T extends keyof ExternalMapConfigState>(\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => ExternalMapConfigState[T];\n\tset: (input: ExternalMapConfigState[T]) => void;\n} => ({\n\t\tget: () => store.getters[namespaced(property)],\n\t\tset: (input) => store.commit(namespaced(property), input)\n\t})\n\nexport const externalMap: Module<ExternalMapConfigState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\thScale: 0.687,\n\t\thOffset: -52,\n\t\tvScale: 0.381,\n\t\tvOffset: 91,\n\t},\n\tgetters: {\n\t\thScale: ({ hScale }) => hScale,\n\t\thOffset: ({ hOffset }) => hOffset,\n\t\tvScale: ({ vScale }) => vScale,\n\t\tvOffset: ({ vOffset }) => vOffset,\n\t},\n\tmutations: {\n\t\thScale: (state, hScale) => { state.hScale = hScale },\n\t\thOffset: (state, hOffset) => { state.hOffset = hOffset },\n\t\tvScale: (state, vScale) => { state.vScale = vScale },\n\t\tvOffset: (state, vOffset) => { state.vOffset = vOffset },\n\t}\n}\n","import { Module, Store } from \"vuex\";\nimport { MassAirflowUnits, MassAirflow } from \"@/physics/units\";\n\nexport const NAMESPACE = \"grid\"\n\nexport interface GridConfigState {\n\tairflowUnits: MassAirflowUnits;\n\tminAirflow: MassAirflow;\n\tmaxAirflow: MassAirflow;\n\tairflowInterval: MassAirflow;\n\tminPressureRatio: number;\n\tmaxPressureRatio: number;\n\tpressureRatioStep: number;\n}\n\nconst namespaced = (input: keyof GridConfigState): string => `${NAMESPACE}/${input}`;\n\nexport const buildAccessor = <T extends keyof GridConfigState>(\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => GridConfigState[T];\n\tset: (input: GridConfigState[T]) => void;\n} => ({\n\t\tget: () => store.getters[namespaced(property)],\n\t\tset: (input) => store.commit(namespaced(property), input)\n\t})\n\nexport const grid: Module<GridConfigState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tairflowUnits: MassAirflowUnits.lbsmin,\n\t\tminAirflow: new MassAirflow(0, MassAirflowUnits.lbsmin),\n\t\tmaxAirflow: new MassAirflow(60, MassAirflowUnits.lbsmin),\n\t\tairflowInterval: new MassAirflow(5, MassAirflowUnits.lbsmin),\n\t\tminPressureRatio: 1,\n\t\tmaxPressureRatio: 4,\n\t\tpressureRatioStep: 0.25,\n\t},\n\tgetters: {\n\t\tairflowUnits: ({ airflowUnits }) => airflowUnits,\n\t\tminAirflow: ({ minAirflow }) => minAirflow,\n\t\tmaxAirflow: ({ maxAirflow }) => maxAirflow,\n\t\tairflowInterval: ({ airflowInterval }) => airflowInterval,\n\t\tminPressureRatio: ({ minPressureRatio }) => minPressureRatio,\n\t\tmaxPressureRatio: ({ maxPressureRatio }) => maxPressureRatio,\n\t\tpressureRatioStep: ({ pressureRatioStep }) => pressureRatioStep,\n\t},\n\tmutations: {\n\t\tairflowUnits: (state, airflowUnits) => { state.airflowUnits = airflowUnits },\n\t\tminAirflow: (state, minAirflow) => { state.minAirflow = minAirflow },\n\t\tmaxAirflow: (state, maxAirflow) => { state.maxAirflow = maxAirflow },\n\t\tairflowInterval: (state, airflowInterval) => { state.airflowInterval = airflowInterval },\n\t\tminPressureRatio: (state, minPressureRatio) => { state.minPressureRatio = minPressureRatio },\n\t\tmaxPressureRatio: (state, maxPressureRatio) => { state.maxPressureRatio = maxPressureRatio },\n\t\tpressureRatioStep: (state, pressureRatioStep) => { state.pressureRatioStep = pressureRatioStep },\n\t}\n}\n","import { Module, Store } from \"vuex\";\nimport { Volume, Pressure, PressureUnit, VolumeUnit, Temperature, TemperatureUnit } from \"@/physics/units\";\n\nexport const NAMESPACE = \"engineMap\";\n\ntype MapPoint = { pressure: Pressure; rpm: number }\n\nexport type EngineMapState = {\n\tmapPressureUnits: PressureUnit;\n\tpoints: MapPoint[];\n\tdisplacement: Volume;\n\tambientAirTemperature: Temperature;\n\tambientAirPressure: Pressure;\n}\n\nconst namespaced = (input: keyof EngineMapState | \"addPoint\" | \"removePoint\" | \"point\"): string => `${NAMESPACE}/${input}`;\n\nexport const buildMapPointsGetter = (store: Store<{}>) => (): MapPoint[] => store.getters[namespaced(\"points\")]\nexport const buildMapPointInserter = (store: Store<{}>) => (point: MapPoint) => store.dispatch(namespaced(\"addPoint\"), point)\nexport const buildMapPointRemover = (store: Store<{}>) => (point: MapPoint) => store.dispatch(namespaced(\"removePoint\"), point)\nexport const buildMapPointModifier = (store: Store<{}>) => (point: MapPoint, index: number) => store.commit(namespaced(\"point\"), { point, index })\n\nexport const buildAccessor = <T extends keyof EngineMapState>(\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => EngineMapState[T];\n\tset: (input: EngineMapState[T]) => void;\n} => ({\n\t\tget: () => store.getters[namespaced(property)],\n\t\tset: (input) => store.commit(namespaced(property), input)\n\t})\n\nexport const engineMap: Module<EngineMapState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tmapPressureUnits: PressureUnit.bar,\n\t\tpoints: [\n\t\t\t{ pressure: new Pressure(2.5, PressureUnit.bar), rpm: 3000 },\n\t\t\t{ pressure: new Pressure(2.5, PressureUnit.bar), rpm: 5300 },\n\t\t\t{ pressure: new Pressure(2.5, PressureUnit.bar), rpm: 6500 }\n\t\t],\n\t\tdisplacement: new Volume(1984, VolumeUnit.cc),\n\t\tambientAirPressure: new Pressure(101325, PressureUnit.Pa),\n\t\tambientAirTemperature: new Temperature(15, TemperatureUnit.C)\n\t},\n\tgetters: {\n\t\tmapPressureUnits: ({ mapPressureUnits }) => mapPressureUnits,\n\t\tpoints: ({ points }) => points,\n\t\tdisplacement: ({ displacement }) => displacement,\n\t\tambientAirPressure: ({ ambientAirPressure }) => ambientAirPressure,\n\t\tambientAirTemperature: ({ ambientAirTemperature }) => ambientAirTemperature,\n\t},\n\tmutations: {\n\t\tmapPressureUnits: (state, mapPressureUnits) => state.mapPressureUnits = mapPressureUnits,\n\t\tpoint: (state, { point, index }) => {\n\t\t\tstate.points[index].pressure[state.mapPressureUnits] = point.pressure[state.mapPressureUnits]\n\t\t\tstate.points[index].rpm = point.rpm\n\t\t},\n\t\tpoints: (state, points) => state.points = points,\n\t\tdisplacement: (state, displacement) => state.displacement = displacement,\n\t\tambientAirPressure: (state, ambientAirPressure) => state.ambientAirPressure = ambientAirPressure,\n\t\tambientAirTemperature: (state, ambientAirTemperature) => state.ambientAirTemperature = ambientAirTemperature,\n\t},\n\tactions: {\n\t\taddPoint: ({ commit, state }, point: MapPoint) => {\n\t\t\tconst nextPoints = [\n\t\t\t\t...state.points.filter(p => p.rpm !== point.rpm),\n\t\t\t\tpoint\n\t\t\t].sort((a, b) => a.rpm - b.rpm)\n\n\t\t\tcommit(\"points\", nextPoints)\n\t\t},\n\t\tremovePoint: ({ commit, state }, point: MapPoint) => {\n\t\t\tconst nextPoints = state.points.filter(p => p.rpm !== point.rpm)\n\n\t\t\tcommit(\"points\", nextPoints)\n\t\t}\n\t}\n}","<template>\n\t<div id=\"map\" class=\"maps\">\n\t\t<compressor-map\n\t\t\t:canvas-id=\"MapLayer.CompressorMap\"\n\t\t\t:width=\"canvasWidth\"\n\t\t\t:height=\"canvasHeight\" />\n\t\t<grid\n\t\t\t:canvas-id=\"MapLayer.Grid\"\n\t\t\t:width=\"canvasWidth\"\n\t\t\t:height=\"canvasHeight\"\n\t\t\t:padding=\"gridPadding\" />\n\t\t<engine-map\n\t\t\t:canvas-id=\"MapLayer.EngineMap\"\n\t\t\t:width=\"canvasWidth\"\n\t\t\t:height=\"canvasHeight\"\n\t\t\t:padding=\"gridPadding\" />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\"\nimport CompressorMap from \"./CompressorMap.vue\"\nimport Grid from \"./Grid.vue\"\nimport EngineMap from \"./EngineMap.vue\"\n\nenum MapLayer {\n\tCompressorMap = \"compressor-map\",\n\tGrid = \"grid\",\n\tEngineMap = \"engine-map\"\n}\n\nconst defaultConfig = {\n\twidth: 1208,\n\theight: 908,\n\tpadding: 100\n};\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: {\n\t\tCompressorMap,\n\t\tGrid,\n\t\tEngineMap\n\t},\n\tsetup: () => ({\n\t\tMapLayer,\n\t\tcanvasHeight: defaultConfig.height,\n\t\tcanvasWidth: defaultConfig.width,\n\t\tgridPadding: defaultConfig.padding\n\t})\n})\n</script>\n\n<style lang=\"scss\">\n.maps {\n\tbackground-color: white;\n}\n\n#map {\n\tposition: relative;\n}\n\n#compressor-map {\n\tposition: absolute;\n\ttop:0;\n\tleft: 0;\n\topacity: 0.5;\n}\n\n#grid {\n\t/* background-color: white; */\n\ttop: 0;\n\tleft: 0;\n\topacity: 0.9;\n}\n\n#engine-map {\n\tbackground-color: transparent;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n.calculation-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n</style>\n","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor } from \"@/store/external-map\";\nimport { getImageRedrawer } from \"./graphics\";\n\ntype CompressorMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n}\n\nexport default defineComponent({\n\tname: \"CompressorMap\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId } = props as CompressorMapProps\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(\"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(\"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(\"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(\"vScale\", store))\n\n\t\tonMounted(() => {\n\t\t\tconst imgCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst img = new Image();\n\t\t\timg.src = \"./example_compressor_map.jpg\";\n\n\t\t\timg.onload = () => {\n\t\t\t\timgCanvas // eslint-disable-line\n\t\t\t\t\t.getContext(\"2d\")!\n\t\t\t\t\t.drawImage(\n\t\t\t\t\t\timg,\n\t\t\t\t\t\thOffset.value,\n\t\t\t\t\t\tvOffset.value,\n\t\t\t\t\t\tMath.floor(hScale.value * img.width),\n\t\t\t\t\t\tMath.floor(vScale.value * img.height),\n\t\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst redrawImage = getImageRedrawer({ canvas: imgCanvas, image: img });\n\n\t\t\twatch(\n\t\t\t\t[\n\t\t\t\t\t() => hOffset.value,\n\t\t\t\t\t() => vOffset.value,\n\t\t\t\t\t() => hScale.value,\n\t\t\t\t\t() => vScale.value\n\t\t\t\t],\n\t\t\t\t([\n\t\t\t\t\thOffset,\n\t\t\t\t\tvOffset,\n\t\t\t\t\thScale,\n\t\t\t\t\tvScale\n\t\t\t\t]) => {\n\t\t\t\t\tredrawImage({\n\t\t\t\t\t\thOffset,\n\t\t\t\t\t\tvOffset,\n\t\t\t\t\t\thScale,\n\t\t\t\t\t\tvScale,\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t},\n})\n</script>\n","const GRID_STROKE_STYLE = \"rgb(134,136,138)\";\n\nexport const greatestCommonDivisor = (a: number, b: number): number => (b === 0\n\t? a\n\t: (greatestCommonDivisor(b, a % b)));\n\ntype GridConstructor = {\n\tcanvasRef: HTMLCanvasElement;\n\theight: number;\n\twidth: number;\n\tpadding: number;\n\tminX: number;\n\tminY: number;\n\tmaxX: number;\n\tmaxY: number;\n\txInterval?: number;\n\tyInterval?: number;\n}\n\nexport class Grid {\n\tprivate context: CanvasRenderingContext2D;\n\n\tprivate height: number;\n\n\tprivate width: number;\n\n\tprivate padding: number;\n\n\tprivate minX: number;\n\n\tprivate minY: number;\n\n\tprivate maxX: number;\n\n\tprivate maxY: number;\n\n\tprivate gridWidth: number;\n\n\tprivate gridHeight: number;\n\n\tprivate origin: [number, number];\n\n\tprivate xInterval: number;\n\tprivate yInterval: number;\n\n\tprivate xAxisSpacing: number;\n\tprivate yAxisSpacing: number;\n\n\tconstructor(config: GridConstructor) {\n\t\tconst {\n\t\t\tcanvasRef,\n\t\t\theight,\n\t\t\twidth,\n\t\t\tpadding,\n\t\t\tminX,\n\t\t\tminY,\n\t\t\tmaxX,\n\t\t\tmaxY,\n\t\t\tyInterval = 0,\n\t\t\txInterval = 0,\n\t\t} = config;\n\n\t\tthis.context = canvasRef.getContext(\"2d\")!; // eslint-disable-line\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t\tthis.padding = padding;\n\t\tthis.minX = minX;\n\t\tthis.minY = minY;\n\t\tthis.maxX = maxX;\n\t\tthis.maxY = maxY;\n\n\t\tthis.gridWidth = width - 2 * padding;\n\t\tthis.gridHeight = height - 2 * padding;\n\n\t\tthis.origin = [padding, height - padding];\n\t\tthis.context.font = \"10px sans-serif\";\n\n\t\tthis.xInterval = xInterval === 0 ? (maxX - minX) : xInterval;\n\t\tthis.yInterval = yInterval === 0 ? (maxY - minY) : yInterval;\n\n\t\tthis.xAxisSpacing = Math.floor(this.gridWidth * this.xInterval / (maxX - minX));\n\t\tthis.yAxisSpacing = Math.floor(this.gridHeight * this.yInterval / (maxY - minY));\n\t}\n\n\tsetup(config: Partial<GridConstructor>) {\n\t\tthis.clear()\n\n\t\tconst mergedConfig = {\n\t\t\t...this,\n\t\t\t...config\n\t\t}\n\n\t\tconst {\n\t\t\theight,\n\t\t\twidth,\n\t\t\tpadding,\n\t\t\tminX,\n\t\t\tminY,\n\t\t\tmaxX,\n\t\t\tmaxY,\n\t\t\tyInterval = 0,\n\t\t\txInterval = 0,\n\t\t} = mergedConfig;\n\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t\tthis.padding = padding;\n\t\tthis.minX = minX;\n\t\tthis.minY = minY;\n\t\tthis.maxX = maxX;\n\t\tthis.maxY = maxY;\n\n\t\tthis.gridWidth = width - 2 * padding;\n\t\tthis.gridHeight = height - 2 * padding;\n\n\t\tthis.origin = [padding, height - padding];\n\t\tthis.context.font = \"10px sans-serif\";\n\n\t\tthis.xInterval = xInterval === 0 ? (maxX - minX) : xInterval;\n\t\tthis.yInterval = yInterval === 0 ? (maxY - minY) : yInterval;\n\n\t\tthis.xAxisSpacing = Math.floor(this.gridWidth * this.xInterval / (maxX - minX));\n\t\tthis.yAxisSpacing = Math.floor(this.gridHeight * this.yInterval / (maxY - minY));\n\t}\n\n\tclear() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t}\n\n\tdrawGrid() {\n\t\tconst [originX, originY] = this.origin;\n\t\tconst {\n\t\t\tcontext,\n\t\t\tgridWidth,\n\t\t\tgridHeight,\n\t\t\txAxisSpacing,\n\t\t\tyAxisSpacing,\n\t\t\tpadding,\n\t\t} = this;\n\t\tcontext.beginPath();\n\t\tcontext.strokeStyle = GRID_STROKE_STYLE;\n\t\tcontext.moveTo(originX, originY);\n\n\t\tfor (let i = originX; i <= (originX + gridWidth); i += xAxisSpacing) {\n\t\t\tcontext.moveTo(i, originY);\n\t\t\tcontext.lineTo(i, originY - gridHeight);\n\t\t}\n\n\t\tfor (let j = originY; j >= padding; j -= yAxisSpacing) {\n\t\t\tcontext.moveTo(originX, j);\n\t\t\tcontext.lineTo(originX + gridWidth, j);\n\t\t}\n\n\t\tcontext.stroke();\n\t}\n\n\tdrawAxis() {\n\t\tconst {\n\t\t\tcontext,\n\t\t\tgridWidth,\n\t\t\tpadding,\n\t\t\txAxisSpacing,\n\t\t\tyAxisSpacing,\n\t\t\txInterval,\n\t\t\tyInterval,\n\t\t\tminX,\n\t\t\tmaxY,\n\t\t\tminY,\n\t\t} = this;\n\n\t\tcontext.beginPath();\n\n\t\tconst [originX, originY] = this.origin;\n\n\t\tfor (\n\t\t\tlet x = originX, value = minX;\n\t\t\tx <= (originX + gridWidth);\n\t\t\tx += xAxisSpacing, value += xInterval\n\t\t) {\n\t\t\tconst label = value.toFixed(3);\n\t\t\tcontext.fillText(label, x - context.measureText(label).width / 2, originY + 14);\n\t\t}\n\n\t\tfor (\n\t\t\tlet y = originY, value = minY;\n\t\t\ty >= padding;\n\t\t\ty -= yAxisSpacing, value += yInterval\n\t\t) {\n\t\t\tconst label = value.toFixed(2);\n\t\t\tcontext.fillText(label, originX - context.measureText(label).width - 4, y + 5);\n\t\t}\n\n\t\tcontext.beginPath();\n\t\tcontext.rect(\n\t\t\tthis.transformX(minX),\n\t\t\tthis.transformY(maxY),\n\t\t\tthis.gridWidth,\n\t\t\tthis.gridHeight,\n\t\t);\n\t\tcontext.stroke();\n\t}\n\n\ttransformX(input: number) {\n\t\tconst scale = this.gridWidth / (this.maxX - this.minX);\n\n\t\treturn Math.floor((input - this.minX) * scale) + this.padding;\n\t}\n\n\ttransformY(input: number) {\n\t\tconst scale = this.gridHeight / (this.maxY - this.minY);\n\n\t\treturn Math.floor(this.gridHeight - (input - this.minY) * scale) + this.padding;\n\t}\n\n\tmoveTo(x: number, y: number) {\n\t\treturn this.context.moveTo(\n\t\t\tthis.transformX(x),\n\t\t\tthis.transformY(y),\n\t\t);\n\t}\n\n\tlineTo(x: number, y: number) {\n\t\treturn this.context.lineTo(\n\t\t\tthis.transformX(x),\n\t\t\tthis.transformY(y),\n\t\t);\n\t}\n\n\tstroke() {\n\t\treturn this.context.stroke();\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number, fill = false) {\n\t\tthis.context.beginPath()\n\t\tthis.context.moveTo(this.transformX(x) + radius, this.transformY(y))\n\t\tthis.context.arc(this.transformX(x), this.transformY(y), radius, 0, Math.PI * 2)\n\t\tif (fill) {\n\t\t\tthis.context.fill()\n\t\t}\n\t\tthis.context.stroke()\n\t}\n\n\tdrawMap(points: { x: number; y: number }[]) {\n\t\tthis.clear();\n\t\tthis.context.beginPath();\n\n\t\tthis.context.strokeStyle = \"green\";\n\t\tthis.context.lineWidth = 3;\n\n\t\tconst [first, ...restPoints] = points;\n\t\tthis.moveTo(first.x, first.y);\n\n\t\trestPoints.forEach(({ x, y }) => {\n\t\t\tthis.lineTo(x, y);\n\t\t\tthis.moveTo(x, y);\n\t\t});\n\n\t\tthis.lineTo(first.x, first.y);\n\t\tthis.context.closePath();\n\t\tthis.stroke();\n\n\t\tthis.context.beginPath();\n\t\tthis.context.strokeStyle = \"red\";\n\t\tthis.context.fillStyle = \"pink\";\n\t\tthis.context.lineWidth = 1;\n\n\t\tpoints.forEach(({ x, y }) => {\n\t\t\tthis.drawCircle(x, y, 5, true)\n\t\t})\n\t}\n}\n\nexport const getImageRedrawer = (\n\t{ image, canvas }: { image: CanvasImageSource; canvas: HTMLCanvasElement },\n) => (\n\tconfig: {\n\t\thOffset: number;\n\t\tvOffset: number;\n\t\thScale: number;\n\t\tvScale: number;\n\t},\n) => {\n\tconst {\n\t\twidth: canvasWidth,\n\t\theight: canvasHeight,\n\t} = canvas;\n\n\tconst ctx = canvas.getContext(\"2d\")!; // eslint-disable-line\n\n\tconst {\n\t\thOffset,\n\t\tvOffset,\n\t\thScale,\n\t\tvScale,\n\t} = config;\n\n\tctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\tctx.drawImage(\n\t\timage,\n\t\thOffset,\n\t\tvOffset,\n\t\tMath.floor(hScale * (image.width as number)),\n\t\tMath.floor(vScale * (image.height as number)),\n\t);\n};\n","\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor } from \"@/store/external-map\";\nimport { getImageRedrawer } from \"./graphics\";\n\ntype CompressorMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n}\n\nexport default defineComponent({\n\tname: \"CompressorMap\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId } = props as CompressorMapProps\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(\"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(\"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(\"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(\"vScale\", store))\n\n\t\tonMounted(() => {\n\t\t\tconst imgCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst img = new Image();\n\t\t\timg.src = \"./example_compressor_map.jpg\";\n\n\t\t\timg.onload = () => {\n\t\t\t\timgCanvas // eslint-disable-line\n\t\t\t\t\t.getContext(\"2d\")!\n\t\t\t\t\t.drawImage(\n\t\t\t\t\t\timg,\n\t\t\t\t\t\thOffset.value,\n\t\t\t\t\t\tvOffset.value,\n\t\t\t\t\t\tMath.floor(hScale.value * img.width),\n\t\t\t\t\t\tMath.floor(vScale.value * img.height),\n\t\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst redrawImage = getImageRedrawer({ canvas: imgCanvas, image: img });\n\n\t\t\twatch(\n\t\t\t\t[\n\t\t\t\t\t() => hOffset.value,\n\t\t\t\t\t() => vOffset.value,\n\t\t\t\t\t() => hScale.value,\n\t\t\t\t\t() => vScale.value\n\t\t\t\t],\n\t\t\t\t([\n\t\t\t\t\thOffset,\n\t\t\t\t\tvOffset,\n\t\t\t\t\thScale,\n\t\t\t\t\tvScale\n\t\t\t\t]) => {\n\t\t\t\t\tredrawImage({\n\t\t\t\t\t\thOffset,\n\t\t\t\t\t\tvOffset,\n\t\t\t\t\t\thScale,\n\t\t\t\t\t\tvScale,\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t},\n})\n","import { render } from \"./CompressorMap.vue?vue&type=template&id=1d41f7d0\"\nimport script from \"./CompressorMap.vue?vue&type=script&lang=ts\"\nexport * from \"./CompressorMap.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype GridProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Grid\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, padding, height, width } = props as GridProps;\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst airflowUnits = computed(buildGridAccessor(\"airflowUnits\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\n\t\tonMounted(() => {\n\t\t\tconst gridCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst grid = new Grid({\n\t\t\t\tcanvasRef: gridCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value[airflowUnits.value],\n\t\t\t\tmaxX: maxAirflow.value[airflowUnits.value],\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value,\n\t\t\t\txInterval: airflowInterval.value[airflowUnits.value],\n\t\t\t\tyInterval: pressureRatioStep.value\n\t\t\t});\n\n\t\t\tgrid.drawGrid();\n\t\t\tgrid.drawAxis();\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid,\n\t\t\t\tgridActions: [grid.drawGrid.bind(grid), grid.drawAxis.bind(grid)],\n\t\t\t\tairflowUnits,\n\t\t\t\tminAirflow,\n\t\t\t\tmaxAirflow,\n\t\t\t\tairflowInterval,\n\t\t\t\tminPressureRatio,\n\t\t\t\tmaxPressureRatio,\n\t\t\t\tpressureRatioStep\n\t\t\t})\n\t\t});\n\t},\n})\n</script>\n","import { Ref, watch } from \"vue\"\nimport { Grid } from \"./graphics\"\nimport { MassAirflow, MassAirflowUnits } from \"@/physics/units\"\n\ntype GridParamGetters = [\n\t() => Ref<MassAirflowUnits>[\"value\"],\n\t() => Ref<MassAirflow>[\"value\"],\n\t() => Ref<MassAirflow>[\"value\"],\n\t() => Ref<MassAirflow>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n]\n\ntype GridWatchersConfig = {\n\tgrid: Grid;\n\tgridActions: (() => void)[];\n\tairflowUnits: Ref<MassAirflowUnits>;\n\tminAirflow: Ref<MassAirflow>;\n\tmaxAirflow: Ref<MassAirflow>;\n\tairflowInterval: Ref<MassAirflow>;\n\tminPressureRatio: Ref<number>;\n\tmaxPressureRatio: Ref<number>;\n\tpressureRatioStep: Ref<number>;\n}\n\nexport const useGridWatchers = (config: GridWatchersConfig) => {\n\tconst {\n\t\tgrid,\n\t\tgridActions,\n\t\tairflowUnits,\n\t\tminAirflow,\n\t\tmaxAirflow,\n\t\tairflowInterval,\n\t\tminPressureRatio,\n\t\tmaxPressureRatio,\n\t\tpressureRatioStep\n\t} = config;\n\n\twatch<GridParamGetters>(\n\t\t[\n\t\t\t() => airflowUnits.value,\n\t\t\t() => minAirflow.value,\n\t\t\t() => maxAirflow.value,\n\t\t\t() => airflowInterval.value,\n\t\t\t() => minPressureRatio.value,\n\t\t\t() => maxPressureRatio.value,\n\t\t\t() => pressureRatioStep.value,\n\t\t],\n\t\t(newValues) => {\n\t\t\tconst [\n\t\t\t\tairflowUnits,\n\t\t\t\tminX,\n\t\t\t\tmaxX,\n\t\t\t\txInterval,\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyInterval,\n\t\t\t] = newValues\n\n\t\t\tgrid.setup({\n\t\t\t\tminX: minX[airflowUnits],\n\t\t\t\tmaxX: maxX[airflowUnits],\n\t\t\t\txInterval: xInterval[airflowUnits],\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyInterval\n\t\t\t})\n\n\t\t\tgridActions.forEach(a => a())\n\t\t}\n\t)\n}","\nimport { defineComponent, computed, onMounted } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype GridProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Grid\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, padding, height, width } = props as GridProps;\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst airflowUnits = computed(buildGridAccessor(\"airflowUnits\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\n\t\tonMounted(() => {\n\t\t\tconst gridCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst grid = new Grid({\n\t\t\t\tcanvasRef: gridCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value[airflowUnits.value],\n\t\t\t\tmaxX: maxAirflow.value[airflowUnits.value],\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value,\n\t\t\t\txInterval: airflowInterval.value[airflowUnits.value],\n\t\t\t\tyInterval: pressureRatioStep.value\n\t\t\t});\n\n\t\t\tgrid.drawGrid();\n\t\t\tgrid.drawAxis();\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid,\n\t\t\t\tgridActions: [grid.drawGrid.bind(grid), grid.drawAxis.bind(grid)],\n\t\t\t\tairflowUnits,\n\t\t\t\tminAirflow,\n\t\t\t\tmaxAirflow,\n\t\t\t\tairflowInterval,\n\t\t\t\tminPressureRatio,\n\t\t\t\tmaxPressureRatio,\n\t\t\t\tpressureRatioStep\n\t\t\t})\n\t\t});\n\t},\n})\n","import { render } from \"./Grid.vue?vue&type=template&id=9c1af4ca\"\nimport script from \"./Grid.vue?vue&type=script&lang=ts\"\nexport * from \"./Grid.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\"\n\t\t@mousemove=\"handleHover\"\n\t\t@mousedown=\"handleMouseDown\"\n\t\t@mouseup=\"handleMouseUp\" />\n\t<div class=\"tooltip\">\n\t\tPressureRatio: {{ (Math.round(pointerData.pressureRatio * 100) / 100).toFixed(2) }}<br />\n\t\tAirflow: {{ (Math.round(pointerData.massAirflow * 1000) / 1000).toFixed(3) }} {{ airflowUnits }}<br />\n\t\trpm: {{ pointerData.rpm }}\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointsGetter,\n\tbuildAccessor as buildEngineMapAccessor,\n\tbuildMapPointModifier,\n} from \"@/store/engine-map\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflow, Pressure } from \"@/physics/units\";\nimport { getMAF, getRPMfromMAF } from \"@/physics/calculations\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Map\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tlet graphCanvas: HTMLCanvasElement;\n\t\tlet tooltip: HTMLElement;\n\t\tconst graphCanvasViewport = ref<DOMRect>({} as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas?.getBoundingClientRect() }\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\t\tconst airflowUnits = computed(buildGridAccessor(\"airflowUnits\", store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = ref<{ pressureRatio: number; rpm: number; massAirflow: number }>({ pressureRatio: 0, rpm: 0, massAirflow: 0 });\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\n\t\tconst getMAFlocal = ({ pressure, rpm }: { pressure: Pressure; rpm: number }): number => getMAF({\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure,\n\t\t\trpm,\n\t\t})[airflowUnits.value]\n\n\t\tconst engineMapRawPoints = computed(buildMapPointsGetter(store));\n\t\tconst engineMapPoints = computed(() => {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[0]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t},\n\t\t\t\t...engineMapRawPoints.value.map(p => ({\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: p.pressure,\n\t\t\t\t\t\trpm: p.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: p.pressure.getPressureRatio(ambientAirPressure.value)\n\t\t\t\t})),\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[engineMapRawPoints.value.length - 1]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\ttooltip = document.querySelector(\".tooltip\") as HTMLElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value[airflowUnits.value],\n\t\t\t\tmaxX: maxAirflow.value[airflowUnits.value],\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawMap(engineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawMap(engineMapPoints.value) }],\n\t\t\t\tairflowUnits,\n\t\t\t\tminAirflow,\n\t\t\t\tmaxAirflow,\n\t\t\t\tairflowInterval,\n\t\t\t\tminPressureRatio,\n\t\t\t\tmaxPressureRatio,\n\t\t\t\tpressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => engineMapPoints.value,\n\t\t\t\tpoints => { graph.drawMap(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst getMapDataFromAtCanvasXY = ({ x, y }: { x: number; y: number }): [number, number] | [] => {\n\t\t\tconst { top, left } = graphCanvasViewport.value\n\t\t\tconst mapY = y - top - padding\n\t\t\tconst mapX = x - left - padding\n\n\t\t\tif (mapY < 0 || mapY >= mapHeight) { return [] }\n\t\t\tif (mapX < 0 || mapX >= mapWidth) { return [] }\n\n\t\t \treturn [\n\t\t\t\t((1 - (mapY / mapHeight)) * (maxPressureRatio.value - minPressureRatio.value)) + minPressureRatio.value,\n\t\t\t\t((mapX / mapWidth) * (maxAirflow.value[airflowUnits.value] - minAirflow.value[airflowUnits.value])) + minAirflow.value[airflowUnits.value]\n\t\t\t]\n\t\t}\n\n\t\tconst getRPM = ({ maf, pressureRatio }: { maf: MassAirflow; pressureRatio: number }): number => Math.round(getRPMfromMAF({\n\t\t\tmaf,\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t}))\n\n\t\tconst handleHover = (e: MouseEvent) => {\n\n\t\t\tconst [ pressureRatio, massAirflowScalar ] = getMapDataFromAtCanvasXY(e);\n\n\t\t\tif (!pressureRatio || !massAirflowScalar) {\n\t\t\t\ttooltip.style.display = \"none\"\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (tooltip.style.display === \"none\") {\n\t\t\t\ttooltip.style.display = \"block\"\n\t\t\t}\n\n\t\t\tconst { top, left } = graphCanvasViewport.value;\n\t\t\ttooltip.style.left = e.pageX - left  + \"px\"\n\t\t\ttooltip.style.top = e.pageY - top + \"px\"\n\n\t\t\tconst massAirflow = new MassAirflow(massAirflowScalar, airflowUnits.value)\n\n\t\t\tpointerData.value = {\n\t\t\t\tpressureRatio,\n\t\t\t\tmassAirflow: massAirflow[airflowUnits.value],\n\t\t\t\trpm: getRPM({ maf: massAirflow, pressureRatio })\n\t\t\t}\n\n\t\t\tconst rpm = getRPM({ maf: massAirflow, pressureRatio })\n\n\t\t\tif (contextPoint > -1) {\n\t\t\t\tsetMapPoint(\n\t\t\t\t\t{\n\t\t\t\t\t\trpm,\n\t\t\t\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t\t\t\t},\n\t\t\t\t\tcontextPoint\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tconst handleMouseDown = (e: MouseEvent) => {\n\t\t\tconst [ pressureRatio, massAirflowScalar ] = getMapDataFromAtCanvasXY(e);\n\n\t\t\tif (!pressureRatio || !massAirflowScalar) { return }\n\n\t\t\tconst massAirflow = new MassAirflow(massAirflowScalar, airflowUnits.value)\n\n\t\t\tconst rpm = getRPM({ maf: massAirflow, pressureRatio })\n\n\t\t\tcontextPoint = engineMapRawPoints.value.findIndex((point) => {\n\t\t\t\tif (point.rpm === rpm || (point.rpm * 1.05 > rpm && point.rpm * 0.95 < rpm)) {\n\t\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.pressure[\"bar\"] === pressureAtMouse[\"bar\"] ||\n\t\t\t\t\t\t(point.pressure[\"bar\"] * 1.01 > pressureAtMouse[\"bar\"] && point.pressure[\"bar\"] * 0.99 < pressureAtMouse[\"bar\"])\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst handleMouseUp = () => { contextPoint = -1 }\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\tpointerData,\n\t\t\tairflowUnits\n\t\t}\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.tooltip {\n\tdisplay: none;\n\tbackground: #C8C8C7;\n\tmargin-left: 30px;\n\tpadding: 10px;\n\tposition: absolute;\n\tz-index: 1000;\n\twidth: 200px;\n\theight: 100px;\n}\n</style>\n","import { AIR_SPECIFIC_GAS_CONSTANT } from \"@/physics/constants\"\nimport {\n\tMassAirflow,\n\tPressure,\n\tTemperature,\n\tVolume,\n} from \"@/physics/units\"\n\ntype KgM3 = number\n\ntype IGetAirDensity = (p: { temperature: Temperature; pressure: Pressure }) => KgM3\nexport const getAirDensity: IGetAirDensity = ({ temperature, pressure }) => (\n\tpressure.SI / (temperature.SI * AIR_SPECIFIC_GAS_CONSTANT)\n);\n\ntype IGetVolume = (p: {\n\tdisplacement: Volume;\n\tvolumetricEfficiency?: number;\n\tthrottling?: number;\n}) => Volume\nexport const getVolume: IGetVolume = ({\n\tdisplacement,\n\tvolumetricEfficiency = 1,\n\tthrottling = 1,\n}) => {\n\tdisplacement[\"cubic meters\"] = displacement.SI * volumetricEfficiency * throttling\n\treturn displacement;\n};\n\ntype IGetVolumeFlow = <T extends number>(p: { rpm: number; volume: T }) => number\nexport const getVolumeFlow: IGetVolumeFlow = ({ rpm, volume }) => (\n\t(volume * rpm) / (2 * 60)\n);\n\ntype IGetRPMfromMAF = (p: {\n\tmaf: MassAirflow;\n\tdisplacement: Volume;\n\ttemperature: Temperature;\n\tpressure: Pressure;\n}) => number\nexport const getRPMfromMAF: IGetRPMfromMAF = ({\n\tmaf, displacement, temperature, pressure\n}) => {\n\tconst airDensity = getAirDensity({ temperature, pressure })\n\tconst volumeFlow = maf.SI / airDensity;\n\tconst rpm = volumeFlow * 60 * 2 / displacement.SI;\n\treturn rpm\n}\n\ntype IGetMAF = (p: {\n\trpm: number;\n\tdisplacement: Volume;\n\ttemperature: Temperature;\n\tpressure: Pressure;\n}) => MassAirflow\nexport const getMAF: IGetMAF = ({\n\trpm,\n\tdisplacement,\n\ttemperature,\n\tpressure,\n}) => {\n\tconst volume = getVolume({ displacement });\n\treturn new MassAirflow(getVolumeFlow({ rpm, volume: volume.SI }) * getAirDensity({ temperature, pressure }))\n};\n","\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointsGetter,\n\tbuildAccessor as buildEngineMapAccessor,\n\tbuildMapPointModifier,\n} from \"@/store/engine-map\";\nimport { useGridWatchers } from \"./grid-watchers\";\nimport { MassAirflow, Pressure } from \"@/physics/units\";\nimport { getMAF, getRPMfromMAF } from \"@/physics/calculations\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Map\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tlet graphCanvas: HTMLCanvasElement;\n\t\tlet tooltip: HTMLElement;\n\t\tconst graphCanvasViewport = ref<DOMRect>({} as DOMRect);\n\t\tconst windowResizeHandler = () => { graphCanvasViewport.value = graphCanvas?.getBoundingClientRect() }\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\t\tconst airflowUnits = computed(buildGridAccessor(\"airflowUnits\", store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = ref<{ pressureRatio: number; rpm: number; massAirflow: number }>({ pressureRatio: 0, rpm: 0, massAirflow: 0 });\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\n\t\tconst getMAFlocal = ({ pressure, rpm }: { pressure: Pressure; rpm: number }): number => getMAF({\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure,\n\t\t\trpm,\n\t\t})[airflowUnits.value]\n\n\t\tconst engineMapRawPoints = computed(buildMapPointsGetter(store));\n\t\tconst engineMapPoints = computed(() => {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[0]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t},\n\t\t\t\t...engineMapRawPoints.value.map(p => ({\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: p.pressure,\n\t\t\t\t\t\trpm: p.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: p.pressure.getPressureRatio(ambientAirPressure.value)\n\t\t\t\t})),\n\t\t\t\t{\n\t\t\t\t\tx: getMAFlocal({\n\t\t\t\t\t\tpressure: ambientAirPressure.value,\n\t\t\t\t\t\trpm: engineMapRawPoints.value[engineMapRawPoints.value.length - 1]?.rpm\n\t\t\t\t\t}),\n\t\t\t\t\ty: minPressureRatio.value\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\n\t\tonMounted(() => {\n\t\t\tgraphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\ttooltip = document.querySelector(\".tooltip\") as HTMLElement;\n\t\t\tgraphCanvasViewport.value = graphCanvas.getBoundingClientRect()\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value[airflowUnits.value],\n\t\t\t\tmaxX: maxAirflow.value[airflowUnits.value],\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawMap(engineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawMap(engineMapPoints.value) }],\n\t\t\t\tairflowUnits,\n\t\t\t\tminAirflow,\n\t\t\t\tmaxAirflow,\n\t\t\t\tairflowInterval,\n\t\t\t\tminPressureRatio,\n\t\t\t\tmaxPressureRatio,\n\t\t\t\tpressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => engineMapPoints.value,\n\t\t\t\tpoints => { graph.drawMap(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\tlet contextPoint = -1;\n\n\t\tconst getMapDataFromAtCanvasXY = ({ x, y }: { x: number; y: number }): [number, number] | [] => {\n\t\t\tconst { top, left } = graphCanvasViewport.value\n\t\t\tconst mapY = y - top - padding\n\t\t\tconst mapX = x - left - padding\n\n\t\t\tif (mapY < 0 || mapY >= mapHeight) { return [] }\n\t\t\tif (mapX < 0 || mapX >= mapWidth) { return [] }\n\n\t\t \treturn [\n\t\t\t\t((1 - (mapY / mapHeight)) * (maxPressureRatio.value - minPressureRatio.value)) + minPressureRatio.value,\n\t\t\t\t((mapX / mapWidth) * (maxAirflow.value[airflowUnits.value] - minAirflow.value[airflowUnits.value])) + minAirflow.value[airflowUnits.value]\n\t\t\t]\n\t\t}\n\n\t\tconst getRPM = ({ maf, pressureRatio }: { maf: MassAirflow; pressureRatio: number }): number => Math.round(getRPMfromMAF({\n\t\t\tmaf,\n\t\t\tdisplacement: engineDisplacement.value,\n\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t}))\n\n\t\tconst handleHover = (e: MouseEvent) => {\n\n\t\t\tconst [ pressureRatio, massAirflowScalar ] = getMapDataFromAtCanvasXY(e);\n\n\t\t\tif (!pressureRatio || !massAirflowScalar) {\n\t\t\t\ttooltip.style.display = \"none\"\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (tooltip.style.display === \"none\") {\n\t\t\t\ttooltip.style.display = \"block\"\n\t\t\t}\n\n\t\t\tconst { top, left } = graphCanvasViewport.value;\n\t\t\ttooltip.style.left = e.pageX - left  + \"px\"\n\t\t\ttooltip.style.top = e.pageY - top + \"px\"\n\n\t\t\tconst massAirflow = new MassAirflow(massAirflowScalar, airflowUnits.value)\n\n\t\t\tpointerData.value = {\n\t\t\t\tpressureRatio,\n\t\t\t\tmassAirflow: massAirflow[airflowUnits.value],\n\t\t\t\trpm: getRPM({ maf: massAirflow, pressureRatio })\n\t\t\t}\n\n\t\t\tconst rpm = getRPM({ maf: massAirflow, pressureRatio })\n\n\t\t\tif (contextPoint > -1) {\n\t\t\t\tsetMapPoint(\n\t\t\t\t\t{\n\t\t\t\t\t\trpm,\n\t\t\t\t\t\tpressure: ambientAirPressure.value.multiply(pressureRatio)\n\t\t\t\t\t},\n\t\t\t\t\tcontextPoint\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tconst handleMouseDown = (e: MouseEvent) => {\n\t\t\tconst [ pressureRatio, massAirflowScalar ] = getMapDataFromAtCanvasXY(e);\n\n\t\t\tif (!pressureRatio || !massAirflowScalar) { return }\n\n\t\t\tconst massAirflow = new MassAirflow(massAirflowScalar, airflowUnits.value)\n\n\t\t\tconst rpm = getRPM({ maf: massAirflow, pressureRatio })\n\n\t\t\tcontextPoint = engineMapRawPoints.value.findIndex((point) => {\n\t\t\t\tif (point.rpm === rpm || (point.rpm * 1.05 > rpm && point.rpm * 0.95 < rpm)) {\n\t\t\t\t\tconst pressureAtMouse = ambientAirPressure.value.multiply(pressureRatio)\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tpoint.pressure[\"bar\"] === pressureAtMouse[\"bar\"] ||\n\t\t\t\t\t\t(point.pressure[\"bar\"] * 1.01 > pressureAtMouse[\"bar\"] && point.pressure[\"bar\"] * 0.99 < pressureAtMouse[\"bar\"])\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t}\n\n\t\tconst handleMouseUp = () => { contextPoint = -1 }\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp,\n\t\t\tpointerData,\n\t\t\tairflowUnits\n\t\t}\n\t},\n})\n","import { render } from \"./EngineMap.vue?vue&type=template&id=401239f1&scoped=true\"\nimport script from \"./EngineMap.vue?vue&type=script&lang=ts\"\nexport * from \"./EngineMap.vue?vue&type=script&lang=ts\"\n\nimport \"./EngineMap.vue?vue&type=style&index=0&id=401239f1&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-401239f1\"\n\nexport default script","\nimport { defineComponent } from \"vue\"\nimport CompressorMap from \"./CompressorMap.vue\"\nimport Grid from \"./Grid.vue\"\nimport EngineMap from \"./EngineMap.vue\"\n\nenum MapLayer {\n\tCompressorMap = \"compressor-map\",\n\tGrid = \"grid\",\n\tEngineMap = \"engine-map\"\n}\n\nconst defaultConfig = {\n\twidth: 1208,\n\theight: 908,\n\tpadding: 100\n};\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: {\n\t\tCompressorMap,\n\t\tGrid,\n\t\tEngineMap\n\t},\n\tsetup: () => ({\n\t\tMapLayer,\n\t\tcanvasHeight: defaultConfig.height,\n\t\tcanvasWidth: defaultConfig.width,\n\t\tgridPadding: defaultConfig.padding\n\t})\n})\n","import { render } from \"./Maps.vue?vue&type=template&id=910fe8cc\"\nimport script from \"./Maps.vue?vue&type=script&lang=ts\"\nexport * from \"./Maps.vue?vue&type=script&lang=ts\"\n\nimport \"./Maps.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n\t<div class=\"map-points-container\">\n\t\t<div\n\t\t\tv-for=\"(point, index) in points\"\n\t\t\t:key=\"index\">\n\t\t\t<form v-on:submit.prevent=\"removeEngineMapPoint(point)\">\n\t\t\t\t<fieldset class=\"map-point\">\n\t\t\t\t\t<input type=number v-model=\"point.pressure\" step=\"0.1\" />\n\t\t\t\t\t<input type=number v-model=\"point.rpm\" step=\"100\" />\n\t\t\t\t\t<button type=\"submit\">remove</button>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</div>\n\t\t<form v-on:submit.prevent=\"addEngineMapPoint\">\n\t\t\t<fieldset>\n\t\t\t\t<label for=\"engine-pressure\">Pressure (bar)</label>\n\t\t\t\t<input id=\"engine-pressure\" type=number v-model=\"enginePressure\" step=\"0.1\" />\n\t\t\t\t<label for=\"engine-speed\">Engine speed (rpm)</label>\n\t\t\t\t<input id=\"engine-speed\" type=number v-model=\"engineSpeed\" step=\"100\" />\n\t\t\t</fieldset>\n\t\t\t<button type=\"submit\">Add!</button>\n\t\t</form>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from \"vue\"\nimport { useStore } from \"vuex\"\nimport {\n\tbuildMapPointsGetter,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildAccessor as buildMapPointAccessor,\n} from \"@/store/engine-map\"\nimport { Pressure } from \"@/physics/units\";\n\nexport default defineComponent({\n\tname: \"EngineMapPoints\",\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst enginePressure = ref(1);\n\t\tconst engineSpeed = ref(1000);\n\n\t\tconst pressureUnits = computed(buildMapPointAccessor(\"mapPressureUnits\", store));\n\t\tconst rawPoints = computed(buildMapPointsGetter(store));\n\t\tconst points = computed(() => rawPoints.value.map(point => {\n\t\t\treturn {\n\t\t\t\tget pressure () {\n\t\t\t\t\treturn point.pressure[pressureUnits.value]\n\t\t\t\t},\n\t\t\t\tset pressure (p: number) {\n\t\t\t\t\tpoint.pressure[pressureUnits.value] = p\n\t\t\t\t},\n\t\t\t\tget rpm () {\n\t\t\t\t\treturn point.rpm\n\t\t\t\t},\n\t\t\t\tset rpm (r: number) {\n\t\t\t\t\tpoint.rpm = r\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\n\t\tconst removeEngineMapPoint = buildMapPointRemover(store);\n\n\t\tconst addEngineMapPoint = () => {\n\t\t\tinsertMapPoint({ pressure: new Pressure(enginePressure.value, pressureUnits.value), rpm: engineSpeed.value })\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\tpoints,\n\t\t\tenginePressure,\n\t\t\tengineSpeed,\n\t\t\taddEngineMapPoint,\n\t\t\tremoveEngineMapPoint\n\t\t}\n\t}\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.map-points-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.map-point {\n\tdisplay: flex;\n}\n</style>","\nimport { defineComponent, computed, ref } from \"vue\"\nimport { useStore } from \"vuex\"\nimport {\n\tbuildMapPointsGetter,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n\tbuildAccessor as buildMapPointAccessor,\n} from \"@/store/engine-map\"\nimport { Pressure } from \"@/physics/units\";\n\nexport default defineComponent({\n\tname: \"EngineMapPoints\",\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst enginePressure = ref(1);\n\t\tconst engineSpeed = ref(1000);\n\n\t\tconst pressureUnits = computed(buildMapPointAccessor(\"mapPressureUnits\", store));\n\t\tconst rawPoints = computed(buildMapPointsGetter(store));\n\t\tconst points = computed(() => rawPoints.value.map(point => {\n\t\t\treturn {\n\t\t\t\tget pressure () {\n\t\t\t\t\treturn point.pressure[pressureUnits.value]\n\t\t\t\t},\n\t\t\t\tset pressure (p: number) {\n\t\t\t\t\tpoint.pressure[pressureUnits.value] = p\n\t\t\t\t},\n\t\t\t\tget rpm () {\n\t\t\t\t\treturn point.rpm\n\t\t\t\t},\n\t\t\t\tset rpm (r: number) {\n\t\t\t\t\tpoint.rpm = r\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\n\t\tconst removeEngineMapPoint = buildMapPointRemover(store);\n\n\t\tconst addEngineMapPoint = () => {\n\t\t\tinsertMapPoint({ pressure: new Pressure(enginePressure.value, pressureUnits.value), rpm: engineSpeed.value })\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\tpoints,\n\t\t\tenginePressure,\n\t\t\tengineSpeed,\n\t\t\taddEngineMapPoint,\n\t\t\tremoveEngineMapPoint\n\t\t}\n\t}\n})\n","import { render } from \"./EngineMapPoints.vue?vue&type=template&id=50d1c286&scoped=true\"\nimport script from \"./EngineMapPoints.vue?vue&type=script&lang=ts\"\nexport * from \"./EngineMapPoints.vue?vue&type=script&lang=ts\"\n\nimport \"./EngineMapPoints.vue?vue&type=style&index=0&id=50d1c286&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-50d1c286\"\n\nexport default script","\nimport {\n\tdefineComponent,\n\tcomputed,\n\tRef,\n\tWritableComputedRef,\n\tref,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor } from \"@/store/external-map\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport Maps from \"./Maps.vue\"\nimport EngineMapPoints from \"./EngineMapPoints.vue\"\nimport {\n\tMassAirflowUnits,\n\tPressureUnit,\n\tTemperatureUnit,\n\tVolumeUnit\n} from \"@/physics/units\";\n\ntype ValueModelizer = <T>(value: Ref, units: Ref<T>) => WritableComputedRef<number>\n\nconst modelizeValue: ValueModelizer = (value, units) => computed({\n\tget () { return value.value[units.value] },\n\tset (input: number) { value.value[units.value] = input }\n})\n\nexport default defineComponent({\n\tname: \"Home\",\n\tcomponents: {\n\t\tMaps,\n\t\tEngineMapPoints\n\t},\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(\"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(\"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(\"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(\"vScale\", store))\n\n\t\tconst airflowUnits = computed(buildGridAccessor(\"airflowUnits\", store));\n\t\tconst minAirflow = modelizeValue(computed(buildGridAccessor(\"minAirflow\", store)), airflowUnits);\n\t\tconst maxAirflow = modelizeValue(computed(buildGridAccessor(\"maxAirflow\", store)), airflowUnits);\n\t\tconst airflowInterval = modelizeValue(computed(buildGridAccessor(\"airflowInterval\", store)), airflowUnits);\n\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\n\t\tconst engineDisplacement = modelizeValue(computed(buildEngineMapAccessor(\"displacement\", store)), ref(VolumeUnit.cc))\n\t\tconst ambientAirPressure = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirPressure\", store)), ref(PressureUnit.mbar))\n\t\tconst ambientAirTemperature = modelizeValue(computed(buildEngineMapAccessor(\"ambientAirTemperature\", store)), ref(TemperatureUnit.C))\n\n\t\tconst airflowUnitStep = computed(() => {\n\t\t\tif (airflowUnits.value === MassAirflowUnits.kgs) {\n\t\t\t\treturn 0.05;\n\t\t\t}\n\t\t\treturn 1;\n\t\t})\n\n\t\treturn {\n\t\t\tMassAirflowUnits,\n\t\t\thScale,\n\t\t\tvScale,\n\t\t\thOffset,\n\t\t\tvOffset,\n\t\t\tairflowUnits,\n\t\t\tminAirflow,\n\t\t\tmaxAirflow,\n\t\t\tairflowInterval,\n\t\t\tminPressureRatio,\n\t\t\tmaxPressureRatio,\n\t\t\tpressureRatioStep,\n\t\t\tairflowUnitStep,\n\t\t\tengineDisplacement,\n\t\t\tambientAirPressure,\n\t\t\tambientAirTemperature\n\t\t};\n\t},\n});\n","import { render } from \"./Home.vue?vue&type=template&id=8fac0986\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","import { RouteRecordRaw, createRouter, createWebHashHistory } from \"vue-router\";\nimport Home from \"../views/Home.vue\";\n\nconst routes: RouteRecordRaw[] = [\n\t{\n\t\tpath: \"/\",\n\t\tname: \"Home\",\n\t\tcomponent: Home,\n\t},\n];\n\nconst router = createRouter({\n\thistory: createWebHashHistory(),\n\troutes,\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\nimport { ExternalMapConfigState, externalMap, NAMESPACE as externalMapNamespace } from \"./external-map\";\nimport { GridConfigState, grid, NAMESPACE as gridNamespace } from \"./grid\";\nimport { EngineMapState, engineMap, NAMESPACE as engineMapNamespace } from \"./engine-map\"\n\nexport type State = {\n\t[externalMapNamespace]: ExternalMapConfigState;\n\t[gridNamespace]: GridConfigState;\n\t[engineMapNamespace]: EngineMapState;\n}\n\nexport default createStore<State>({\n\tmodules: {\n\t\t[externalMapNamespace]: externalMap,\n\t\t[gridNamespace]: grid,\n\t\t[engineMapNamespace]: engineMap,\n\t},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\n\ncreateApp(App).use(router).use(store).mount(\"#app\");\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&lang=scss\"","import { ABSOLUTE_ZERO_CELSIUS } from \"@/physics/constants\";\nimport { Unit } from \"./Unit\";\n\nexport enum TemperatureUnit {\n\tK = \"kelvin\",\n\tC = \"celsius\",\n\tF = \"farenheit\",\n}\n\nconst celsiusToFarenheit = (celsius: number): number => celsius * 9 / 5 + 32;\nconst farenheitToCelsius = (farenheit: number): number => (farenheit - 32) * 5 / 9;\nconst kelvinToFarenheit = (kelvin: number): number => celsiusToFarenheit(kelvin - ABSOLUTE_ZERO_CELSIUS);\nconst farenheitToKelvin = (farenheit: number): number => farenheitToCelsius(farenheit) + ABSOLUTE_ZERO_CELSIUS;\n\nexport class Temperature implements Unit {\n\tprivate _K = 0;\n\tprivate _C = -1 * ABSOLUTE_ZERO_CELSIUS;\n\tprivate _F = kelvinToFarenheit(0);\n\n\tconstructor(value: number, unit = TemperatureUnit.K) {\n\t\tthis[unit] = value;\n\t}\n\n\tget SI () { return this._K }\n\n\tset [TemperatureUnit.K] (value: number) {\n\t\tthis._K = value;\n\t\tthis._C = value - ABSOLUTE_ZERO_CELSIUS;\n\t\tthis._F = kelvinToFarenheit(value);\n\t}\n\tget [TemperatureUnit.K] () { return this._K; }\n\n\tset [TemperatureUnit.C] (value: number) {\n\t\tthis._K = value - ABSOLUTE_ZERO_CELSIUS;\n\t\tthis._C = value;\n\t\tthis._F = celsiusToFarenheit(value);\n\t}\n\tget [TemperatureUnit.C] () { return this._C; }\n\n\tset [TemperatureUnit.F] (value: number) {\n\t\tthis._K = farenheitToKelvin(value);\n\t\tthis._C = farenheitToCelsius(value);\n\t\tthis._F = value;\n\t}\n\tget [TemperatureUnit.F] () { return this._F; }\n}\n"],"sourceRoot":""}