{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/Maps.vue?5831","webpack:///./src/App.vue?9b0a","webpack:///./src/views/EngineMapPoints.vue?106d","webpack:///./src/App.vue","webpack:///./src/App.vue?72a1","webpack:///./src/views/Home.vue","webpack:///./src/views/physics.ts","webpack:///./src/store/external-map.ts","webpack:///./src/store/grid.ts","webpack:///./src/store/engine-map.ts","webpack:///./src/views/Maps.vue","webpack:///./src/views/CompressorMap.vue","webpack:///./src/views/graphics.ts","webpack:///./src/views/CompressorMap.vue?44d0","webpack:///./src/views/CompressorMap.vue?ad64","webpack:///./src/views/Grid.vue","webpack:///./src/views/grid-watchers.ts","webpack:///./src/views/Grid.vue?031a","webpack:///./src/views/Grid.vue?3c29","webpack:///./src/views/EngineMap.vue","webpack:///./src/views/EngineMap.vue?4439","webpack:///./src/views/EngineMap.vue?9317","webpack:///./src/views/Maps.vue?2b15","webpack:///./src/views/Maps.vue?cc93","webpack:///./src/views/EngineMapPoints.vue","webpack:///./src/views/EngineMapPoints.vue?90d5","webpack:///./src/views/EngineMapPoints.vue?7f1a","webpack:///./src/views/Home.vue?5ba0","webpack:///./src/views/Home.vue?f4ee","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/views/Home.vue?194a"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","script","render","class","for","id","airflowUnits","AirflowUnits","kgs","lbsmin","type","minAirflow","step","airflowUnitStep","maxAirflow","airflowInterval","minPressureRatio","maxPressureRatio","pressureRatioStep","hScale","hOffset","vScale","vOffset","engineDisplacement","ambientAirTemperature","ambientAirPressure","Math","round","pointerData","pressureRatio","toFixed","massAirflow","NAMESPACE","namespaced","input","buildAccessor","store","getters","set","commit","externalMap","state","mutations","AIR_SPECIFIC_GAS_CONSTANT","ZERO_CELSIUS_KELVIN","LBS_PER_KG","getAirDensity","temperature","pressure","getVolume","displacement","volumetricEfficiency","throttling","getVolumeFlow","rpm","volume","converter","getRPMfromMAF","maf","airDensity","volumeFlow","convertToLbsMin","convertToKgS","buildAirflowUnitsAccessor","dispatch","actions","nextUnits","buildMapPointsGetter","buildMapPointInserter","point","buildMapPointRemover","buildMapPointModifier","index","engineMap","points","addPoint","nextPoints","filter","sort","a","b","removePoint","canvas-id","MapLayer","CompressorMap","width","canvasWidth","height","canvasHeight","Grid","padding","gridPadding","EngineMap","canvasId","GRID_STROKE_STYLE","config","canvasRef","minX","minY","maxX","maxY","yInterval","xInterval","this","context","getContext","gridWidth","gridHeight","origin","font","xAxisSpacing","floor","yAxisSpacing","clear","mergedConfig","clearRect","originX","originY","beginPath","strokeStyle","moveTo","lineTo","stroke","x","label","fillText","measureText","y","rect","transformX","transformY","scale","radius","fill","arc","PI","lineWidth","first","restPoints","forEach","closePath","fillStyle","drawCircle","getImageRedrawer","image","canvas","ctx","drawImage","props","Number","String","setup","imgCanvas","document","getElementById","img","Image","src","onload","redrawImage","grid","gridActions","newValues","gridCanvas","drawGrid","drawAxis","handleHover","handleMouseDown","handleMouseUp","payload","displacementCC","pressureBar","windowResizeHandler","mapWidth","mapHeight","setMapPoint","engineMapRawPoints","engineMapPoints","getMAF","map","contextPoint","graphCanvas","graphCanvasViewport","getBoundingClientRect","addEventListener","e","top","left","mapX","mapY","undefined","findIndex","pressureAtPoint","pressureAtMouse","graph","drawMap","removeEventListener","defaultConfig","components","removeEngineMapPoint","addEngineMapPoint","enginePressure","engineSpeed","rawPoints","insertMapPoint","__scopeId","Maps","EngineMapPoints","routes","path","component","Home","router","history","App","use","mount"],"mappings":"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","file":"js/app.6c72a82a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Maps.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Maps.vue?vue&type=style&index=0&lang=scss\"","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMapPoints.vue?vue&type=style&index=0&id=bf0890f4&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./EngineMapPoints.vue?vue&type=style&index=0&id=bf0890f4&lang=scss&scoped=true\"","<template>\n\t<router-view/>\n</template>\n\n<style lang=\"scss\">\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n#app {\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: #2c3e50;\n\n\tbackground-color: azure;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100vh;\n\twidth: 100vw;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=25a3efc2\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n\t<Maps />\n\t<div class=\"calculation-container\">\n\t\t<form>\n\t\t\t<div class=\"row\">\n\t\t\t\t<label for=\"airflow\">Mass airflow units</label>\n\t\t\t\t<fieldset id=\"airflow\">\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"airflow-units\"\n\t\t\t\t\t\tv-model=\"airflowUnits\">\n\t\t\t\t\t\t<option :value=\"AirflowUnits.kgs\">kg/s</option>\n\t\t\t\t\t\t<option :value=\"AirflowUnits.lbsmin\">Lbs/min</option>\n\t\t\t\t\t</select>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"min-airflow\">Minimum airflow</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"min-airflow\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"minAirflow\"\n\t\t\t\t\t\t\t:step=\"airflowUnitStep\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-airflow\">Maximum airflow</label><input\n\t\t\t\t\t\t\tid=\"max-airflow\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"maxAirflow\"\n\t\t\t\t\t\t\t:step=\"airflowUnitStep\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"airflow-interval\">Airflow grid step</label><input\n\t\t\t\t\t\t\tid=\"airflow-interval\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tv-model=\"airflowInterval\"\n\t\t\t\t\t\t\tstep=\"any\">\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"min-pressure-ratio\">Min pressure ratio</label>\n\t\t\t\t\t\t<input id=\"min-pressure-ratio\" type=\"number\" v-model=\"minPressureRatio\" step=\"0.5\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-pressure-ratio\">Max pressure ratio</label>\n\t\t\t\t\t\t<input id=\"max-pressure-ratio\" type=\"number\" v-model=\"maxPressureRatio\" step=\"0.5\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<label for=\"max-pressure-ratio\">Pressure ratio step</label>\n\t\t\t\t\t\t<input id=\"max-pressure-ratio\" type=\"number\" v-model=\"pressureRatioStep\" step=\"any\">\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t</form>\n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"h-scale\">Horizontal scale</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"h-scale\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tstep=\"0.001\"\n\t\t\t\t\t\tv-model=\"hScale\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"h-offset\">Horizontal offset</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"h-offset\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tv-model=\"hOffset\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"v-scale\">Vertical scale</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"v-scale\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tstep=\"0.001\"\n\t\t\t\t\t\tv-model=\"vScale\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"v-offset\">Vertical offset</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"v-offset\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tv-model=\"vOffset\">\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"engine-displacement\">Engine displacement (cc)</label>\n\t\t\t\t\t<input id=\"engine-displacement\" type=\"number\" v-model=\"engineDisplacement\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"ambient-air-temperature\">Ambient air temperature (C)</label>\n\t\t\t\t\t<input id=\"ambient-air-temperature\" type=\"number\" v-model=\"ambientAirTemperature\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"ambient-air-pressure\">Ambient air absolute pressure (mbar)</label>\n\t\t\t\t\t<input id=\"ambient-air-pressure\" type=\"number\" v-model=\"ambientAirPressure\">\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t\t<EngineMapPoints />\n\t\t<div>\n\t\t\tpressureRatio: {{ (Math.round(pointerData.pressureRatio * 100) / 100).toFixed(2) }}<br />\n\t\t\tmassAirflow: {{ (Math.round(pointerData.massAirflow * 1000) / 1000).toFixed(3) }}\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport {\n\tdefineComponent,\n\tcomputed,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor } from \"@/store/external-map\";\nimport { buildAccessor as buildGridAccessor, buildAirflowUnitsAccessor } from \"@/store/grid\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport { AirflowUnits } from \"./physics\"\nimport Maps from \"./Maps.vue\"\nimport EngineMapPoints from \"./EngineMapPoints.vue\"\n\nexport default defineComponent({\n\tname: \"Home\",\n\tcomponents: {\n\t\tMaps,\n\t\tEngineMapPoints\n\t},\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(\"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(\"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(\"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(\"vScale\", store))\n\n\t\tconst airflowUnits = computed(buildAirflowUnitsAccessor(store));\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = computed(buildEngineMapAccessor(\"pointerData\", store));\n\n\t\tconst airflowUnitStep = computed(() => {\n\t\t\tif (airflowUnits.value === AirflowUnits.kgs) {\n\t\t\t\treturn 0.05;\n\t\t\t}\n\t\t\treturn 1;\n\t\t})\n\n\t\treturn {\n\t\t\tAirflowUnits,\n\t\t\thScale,\n\t\t\tvScale,\n\t\t\thOffset,\n\t\t\tvOffset,\n\t\t\tairflowUnits,\n\t\t\tminAirflow,\n\t\t\tmaxAirflow,\n\t\t\tairflowInterval,\n\t\t\tminPressureRatio,\n\t\t\tmaxPressureRatio,\n\t\t\tpressureRatioStep,\n\t\t\tairflowUnitStep,\n\t\t\tengineDisplacement,\n\t\t\tambientAirPressure,\n\t\t\tambientAirTemperature,\n\t\t\tpointerData\n\t\t};\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.calculation-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n</style>\n","// const GAS_CONSTANT = 8.314463; // J⋅K−1⋅mol−1\nconst AIR_SPECIFIC_GAS_CONSTANT = 287.058; // J/(kg·K)\nconst ZERO_CELSIUS_KELVIN = 273.15;\nconst LBS_PER_KG = 2.204623;\n\ntype CubicMeters = number\ntype Pascals = number\ntype Celcius = number\ntype KgM3 = number\ntype KgS = number\n\ntype IGetAirDensity = (p: { temperature: Celcius; pressure: Pascals }) => KgM3\nexport const getAirDensity: IGetAirDensity = ({ temperature, pressure }) => (\n\tpressure / ((ZERO_CELSIUS_KELVIN + (temperature)) * AIR_SPECIFIC_GAS_CONSTANT)\n);\n\ntype IGetVolume = (p: {\n\tdisplacement: CubicMeters;\n\tvolumetricEfficiency?: number;\n\tthrottling?: number;\n}) => CubicMeters\nexport const getVolume: IGetVolume = ({\n\tdisplacement,\n\tvolumetricEfficiency = 1,\n\tthrottling = 1,\n}) => (displacement * volumetricEfficiency * throttling);\n\ntype IGetVolumeFlow = <T extends number>(p: { rpm: number; volume: T }) => number\nexport const getVolumeFlow: IGetVolumeFlow = ({ rpm, volume }) => (\n\t(volume * rpm) / (2 * 60)\n);\n\ntype IGetMAF = (p: {\n\trpm: number;\n\tdisplacement: CubicMeters;\n\ttemperature: Celcius;\n\tpressure: Pascals;\n}, converter?: (i: number) => number) => KgS\nexport const getMAF: IGetMAF = ({\n\trpm,\n\tdisplacement,\n\ttemperature,\n\tpressure,\n}, converter = i => i) => {\n\tconst volume = getVolume({ displacement });\n\treturn converter(getVolumeFlow({ rpm, volume }) * getAirDensity({ temperature, pressure }));\n};\n\ntype IGetRPMfromMAF = (p: {\n\tmaf: number;\n\tdisplacement: number;\n\ttemperature: number;\n\tpressure: number;\n}) => number\nexport const getRPMfromMAF: IGetRPMfromMAF = ({\n\tmaf, displacement, temperature, pressure\n}) => {\n\tconst airDensity = getAirDensity({ temperature, pressure })\n\tconst volumeFlow = maf / airDensity;\n\tconst rpm = volumeFlow * 60 * 2 / displacement;\n\treturn rpm\n}\n\nexport const convertToLbsMin = (input: number): number => input * LBS_PER_KG * 60;\nexport const convertToKgS = (input: number): number => (input / LBS_PER_KG) / 60;\n\nexport enum AirflowUnits {\n\tkgs = \"kg/s\",\n\tlbsmin = \"lbs/min\"\n}","import { Module, Store } from \"vuex\";\n\nexport const NAMESPACE = \"externalMap\"\n\nexport interface ExternalMapConfigState {\n\thScale: number;\n\thOffset: number;\n\tvScale: number;\n\tvOffset: number;\n}\n\nconst namespaced = (input: keyof ExternalMapConfigState): string => `${NAMESPACE}/${input}`;\n\nexport const buildAccessor = <T extends keyof ExternalMapConfigState>(\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => ExternalMapConfigState[T];\n\tset: (input: ExternalMapConfigState[T]) => void;\n} => ({\n\t\tget: () => store.getters[namespaced(property)],\n\t\tset: (input) => store.commit(namespaced(property), input)\n\t})\n\nexport const externalMap: Module<ExternalMapConfigState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\thScale: 0.687,\n\t\thOffset: -52,\n\t\tvScale: 0.381,\n\t\tvOffset: 91,\n\t},\n\tgetters: {\n\t\thScale: ({ hScale }) => hScale,\n\t\thOffset: ({ hOffset }) => hOffset,\n\t\tvScale: ({ vScale }) => vScale,\n\t\tvOffset: ({ vOffset }) => vOffset,\n\t},\n\tmutations: {\n\t\thScale: (state, hScale) => { state.hScale = hScale },\n\t\thOffset: (state, hOffset) => { state.hOffset = hOffset },\n\t\tvScale: (state, vScale) => { state.vScale = vScale },\n\t\tvOffset: (state, vOffset) => { state.vOffset = vOffset },\n\t}\n}\n","import { Module, Store } from \"vuex\";\nimport { AirflowUnits, convertToLbsMin, convertToKgS } from \"@/views/physics\";\n\nexport const NAMESPACE = \"grid\"\n\nexport interface GridConfigState {\n\tairflowUnits: AirflowUnits;\n\tminAirflow: number;\n\tmaxAirflow: number;\n\tairflowInterval: number;\n\tminPressureRatio: number;\n\tmaxPressureRatio: number;\n\tpressureRatioStep: number;\n}\n\nconst namespaced = (input: keyof GridConfigState): string => `${NAMESPACE}/${input}`;\n\nexport const buildAccessor = <T extends keyof GridConfigState>(\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => GridConfigState[T];\n\tset: (input: GridConfigState[T]) => void;\n} => ({\n\t\tget: () => store.getters[namespaced(property)],\n\t\tset: (input) => store.commit(namespaced(property), input)\n\t})\n\nexport const buildAirflowUnitsAccessor = (store: Store<{}>): {\n\tget: () => AirflowUnits;\n\tset: (airflowUnits: AirflowUnits) => void;\n} => ({\n\tget: () => store.getters[namespaced(\"airflowUnits\")],\n\tset: (airflowUnits) => store.dispatch(namespaced(\"airflowUnits\"), airflowUnits)\n})\n\nexport const grid: Module<GridConfigState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tairflowUnits: AirflowUnits.lbsmin,\n\t\tminAirflow: 0,\n\t\tmaxAirflow: 60,\n\t\tairflowInterval: 5,\n\t\tminPressureRatio: 1,\n\t\tmaxPressureRatio: 4,\n\t\tpressureRatioStep: 0.25,\n\t},\n\tgetters: {\n\t\tairflowUnits: ({ airflowUnits }) => airflowUnits,\n\t\tminAirflow: ({ minAirflow }) => minAirflow,\n\t\tmaxAirflow: ({ maxAirflow }) => maxAirflow,\n\t\tairflowInterval: ({ airflowInterval }) => airflowInterval,\n\t\tminPressureRatio: ({ minPressureRatio }) => minPressureRatio,\n\t\tmaxPressureRatio: ({ maxPressureRatio }) => maxPressureRatio,\n\t\tpressureRatioStep: ({ pressureRatioStep }) => pressureRatioStep,\n\t},\n\tmutations: {\n\t\tairflowUnits: (state, airflowUnits) => { state.airflowUnits = airflowUnits },\n\t\tminAirflow: (state, minAirflow) => { state.minAirflow = minAirflow },\n\t\tmaxAirflow: (state, maxAirflow) => { state.maxAirflow = maxAirflow },\n\t\tairflowInterval: (state, airflowInterval) => { state.airflowInterval = airflowInterval },\n\t\tminPressureRatio: (state, minPressureRatio) => { state.minPressureRatio = minPressureRatio },\n\t\tmaxPressureRatio: (state, maxPressureRatio) => { state.maxPressureRatio = maxPressureRatio },\n\t\tpressureRatioStep: (state, pressureRatioStep) => { state.pressureRatioStep = pressureRatioStep },\n\t},\n\tactions: {\n\t\tairflowUnits: ({ commit, state }, nextUnits: AirflowUnits) => {\n\t\t\tconst {\n\t\t\t\tminAirflow,\n\t\t\t\tmaxAirflow,\n\t\t\t\tairflowInterval,\n\t\t\t\tairflowUnits\n\t\t\t} = state;\n\n\t\t\tcommit(\"airflowUnits\", nextUnits)\n\n\t\t\tif (airflowUnits === AirflowUnits.kgs && nextUnits === AirflowUnits.lbsmin) {\n\t\t\t\tcommit(\"minAirflow\", Math.round(convertToLbsMin(minAirflow)))\n\t\t\t\tcommit(\"maxAirflow\", Math.round(convertToLbsMin(maxAirflow)))\n\t\t\t\tcommit(\"airflowInterval\", Math.round(convertToLbsMin(airflowInterval)))\n\t\t\t}\n\n\t\t\tif (airflowUnits === AirflowUnits.lbsmin && nextUnits === AirflowUnits.kgs) {\n\t\t\t\tcommit(\"minAirflow\", Math.round(convertToKgS(minAirflow) * 1000) / 1000)\n\t\t\t\tcommit(\"maxAirflow\", Math.round(convertToKgS(maxAirflow) * 1000) / 1000)\n\t\t\t\tcommit(\"airflowInterval\", Math.round(convertToKgS(airflowInterval) * 500) / 500)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Module, Store } from \"vuex\";\n\nexport const NAMESPACE = \"engineMap\";\n\ntype MapPoint = { pressure: number; rpm: number }\n\nexport type EngineMapState = {\n\tpoints: MapPoint[];\n\tdisplacement: number;\n\tambientAirTemperature: number;\n\tambientAirPressure: number;\n\tpointerData: {\n\t\tpressureRatio: number;\n\t\tmassAirflow: number;\n\t};\n}\n\nconst namespaced = (input: keyof EngineMapState | \"addPoint\" | \"removePoint\" | \"point\"): string => `${NAMESPACE}/${input}`;\n\nexport const buildMapPointsGetter = (store: Store<{}>) => (): MapPoint[] => store.getters[namespaced(\"points\")]\nexport const buildMapPointInserter = (store: Store<{}>) => (point: MapPoint) => store.dispatch(namespaced(\"addPoint\"), point)\nexport const buildMapPointRemover = (store: Store<{}>) => (point: MapPoint) => store.dispatch(namespaced(\"removePoint\"), point)\nexport const buildMapPointModifier = (store: Store<{}>) => (point: MapPoint, index: number) => store.commit(namespaced(\"point\"), { point, index })\n\nexport const buildAccessor = <T extends keyof EngineMapState>(\n\tproperty: T,\n\tstore: Store<{}>\n): {\n\tget: () => EngineMapState[T];\n\tset: (input: EngineMapState[T]) => void;\n} => ({\n\t\tget: () => store.getters[namespaced(property)],\n\t\tset: (input) => store.commit(namespaced(property), input)\n\t})\n\nexport const engineMap: Module<EngineMapState, {}> = {\n\tnamespaced: true,\n\tstate: {\n\t\tpoints: [\n\t\t\t{ pressure: 2.5, rpm: 3000 },\n\t\t\t{ pressure: 2.5, rpm: 5300 },\n\t\t\t{ pressure: 2.5, rpm: 6500 }\n\t\t],\n\t\tdisplacement: 1984,\n\t\tambientAirPressure: 990,\n\t\tambientAirTemperature: 15,\n\t\tpointerData: {\n\t\t\tpressureRatio: 0,\n\t\t\tmassAirflow: 0,\n\t\t}\n\t},\n\tgetters: {\n\t\tpoints: ({ points }) => points,\n\t\tdisplacement: ({ displacement }) => displacement,\n\t\tambientAirPressure: ({ ambientAirPressure }) => ambientAirPressure,\n\t\tambientAirTemperature: ({ ambientAirTemperature }) => ambientAirTemperature,\n\t\tpointerData: ({ pointerData }) => pointerData,\n\t},\n\tmutations: {\n\t\tpoint: (state, { point, index }) => {\n\t\t\tstate.points[index] = point\n\t\t},\n\t\tpoints: (state, points) => state.points = points,\n\t\tdisplacement: (state, displacement) => state.displacement = displacement,\n\t\tambientAirPressure: (state, ambientAirPressure) => state.ambientAirPressure = ambientAirPressure,\n\t\tambientAirTemperature: (state, ambientAirTemperature) => state.ambientAirTemperature = ambientAirTemperature,\n\t\tpointerData: (state, pointerData) => state.pointerData = { ...pointerData },\n\t},\n\tactions: {\n\t\taddPoint: ({ commit, state }, point: MapPoint) => {\n\t\t\tconst nextPoints = [\n\t\t\t\t...state.points.filter(p => p.rpm !== point.rpm),\n\t\t\t\tpoint\n\t\t\t].sort((a, b) => a.rpm - b.rpm)\n\n\t\t\tcommit(\"points\", nextPoints)\n\t\t},\n\t\tremovePoint: ({ commit, state }, point: MapPoint) => {\n\t\t\tconst nextPoints = state.points.filter(p => p.rpm !== point.rpm)\n\n\t\t\tcommit(\"points\", nextPoints)\n\t\t}\n\t}\n}","<template>\n\t<div id=\"map\" class=\"maps\">\n\t\t<compressor-map\n\t\t\t:canvas-id=\"MapLayer.CompressorMap\"\n\t\t\t:width=\"canvasWidth\"\n\t\t\t:height=\"canvasHeight\" />\n\t\t<grid\n\t\t\t:canvas-id=\"MapLayer.Grid\"\n\t\t\t:width=\"canvasWidth\"\n\t\t\t:height=\"canvasHeight\"\n\t\t\t:padding=\"gridPadding\" />\n\t\t<engine-map\n\t\t\t:canvas-id=\"MapLayer.EngineMap\"\n\t\t\t:width=\"canvasWidth\"\n\t\t\t:height=\"canvasHeight\"\n\t\t\t:padding=\"gridPadding\" />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\"\nimport CompressorMap from \"./CompressorMap.vue\"\nimport Grid from \"./Grid.vue\"\nimport EngineMap from \"./EngineMap.vue\"\n\nenum MapLayer {\n\tCompressorMap = \"compressor-map\",\n\tGrid = \"grid\",\n\tEngineMap = \"engine-map\"\n}\n\nconst defaultConfig = {\n\twidth: 1208,\n\theight: 908,\n\tpadding: 100\n};\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: {\n\t\tCompressorMap,\n\t\tGrid,\n\t\tEngineMap\n\t},\n\tsetup: () => ({\n\t\tMapLayer,\n\t\tcanvasHeight: defaultConfig.height,\n\t\tcanvasWidth: defaultConfig.width,\n\t\tgridPadding: defaultConfig.padding\n\t})\n})\n</script>\n\n<style lang=\"scss\">\n.maps {\n\tbackground-color: white;\n}\n\n#map {\n\tposition: relative;\n}\n\n#compressor-map {\n\tposition: absolute;\n\ttop:0;\n\tleft: 0;\n\topacity: 0.5;\n}\n\n#grid {\n\t/* background-color: white; */\n\ttop: 0;\n\tleft: 0;\n\topacity: 0.9;\n}\n\n#engine-map {\n\tbackground-color: transparent;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n.calculation-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n</style>\n","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor } from \"@/store/external-map\";\nimport { getImageRedrawer } from \"./graphics\";\n\ntype CompressorMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n}\n\nexport default defineComponent({\n\tname: \"CompressorMap\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId } = props as CompressorMapProps\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(\"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(\"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(\"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(\"vScale\", store))\n\n\t\tonMounted(() => {\n\t\t\tconst imgCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst img = new Image();\n\t\t\timg.src = \"./example_compressor_map.jpg\";\n\n\t\t\timg.onload = () => {\n\t\t\t\timgCanvas // eslint-disable-line\n\t\t\t\t\t.getContext(\"2d\")!\n\t\t\t\t\t.drawImage(\n\t\t\t\t\t\timg,\n\t\t\t\t\t\thOffset.value,\n\t\t\t\t\t\tvOffset.value,\n\t\t\t\t\t\tMath.floor(hScale.value * img.width),\n\t\t\t\t\t\tMath.floor(vScale.value * img.height),\n\t\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst redrawImage = getImageRedrawer({ canvas: imgCanvas, image: img });\n\n\t\t\twatch(\n\t\t\t\t[\n\t\t\t\t\t() => hOffset.value,\n\t\t\t\t\t() => vOffset.value,\n\t\t\t\t\t() => hScale.value,\n\t\t\t\t\t() => vScale.value\n\t\t\t\t],\n\t\t\t\t([\n\t\t\t\t\thOffset,\n\t\t\t\t\tvOffset,\n\t\t\t\t\thScale,\n\t\t\t\t\tvScale\n\t\t\t\t]) => {\n\t\t\t\t\tredrawImage({\n\t\t\t\t\t\thOffset,\n\t\t\t\t\t\tvOffset,\n\t\t\t\t\t\thScale,\n\t\t\t\t\t\tvScale,\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t},\n})\n</script>\n","const GRID_STROKE_STYLE = \"rgb(134,136,138)\";\n\nexport const greatestCommonDivisor = (a: number, b: number): number => (b === 0\n\t? a\n\t: (greatestCommonDivisor(b, a % b)));\n\ntype GridConstructor = {\n\tcanvasRef: HTMLCanvasElement;\n\theight: number;\n\twidth: number;\n\tpadding: number;\n\tminX: number;\n\tminY: number;\n\tmaxX: number;\n\tmaxY: number;\n\txInterval?: number;\n\tyInterval?: number;\n}\n\nexport class Grid {\n\tprivate context: CanvasRenderingContext2D;\n\n\tprivate height: number;\n\n\tprivate width: number;\n\n\tprivate padding: number;\n\n\tprivate minX: number;\n\n\tprivate minY: number;\n\n\tprivate maxX: number;\n\n\tprivate maxY: number;\n\n\tprivate gridWidth: number;\n\n\tprivate gridHeight: number;\n\n\tprivate origin: [number, number];\n\n\tprivate xInterval: number;\n\tprivate yInterval: number;\n\n\tprivate xAxisSpacing: number;\n\tprivate yAxisSpacing: number;\n\n\tconstructor(config: GridConstructor) {\n\t\tconst {\n\t\t\tcanvasRef,\n\t\t\theight,\n\t\t\twidth,\n\t\t\tpadding,\n\t\t\tminX,\n\t\t\tminY,\n\t\t\tmaxX,\n\t\t\tmaxY,\n\t\t\tyInterval = 0,\n\t\t\txInterval = 0,\n\t\t} = config;\n\n\t\tthis.context = canvasRef.getContext(\"2d\")!; // eslint-disable-line\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t\tthis.padding = padding;\n\t\tthis.minX = minX;\n\t\tthis.minY = minY;\n\t\tthis.maxX = maxX;\n\t\tthis.maxY = maxY;\n\n\t\tthis.gridWidth = width - 2 * padding;\n\t\tthis.gridHeight = height - 2 * padding;\n\n\t\tthis.origin = [padding, height - padding];\n\t\tthis.context.font = \"10px sans-serif\";\n\n\t\tthis.xInterval = xInterval === 0 ? (maxX - minX) : xInterval;\n\t\tthis.yInterval = yInterval === 0 ? (maxY - minY) : yInterval;\n\n\t\tthis.xAxisSpacing = Math.floor(this.gridWidth * this.xInterval / (maxX - minX));\n\t\tthis.yAxisSpacing = Math.floor(this.gridHeight * this.yInterval / (maxY - minY));\n\t}\n\n\tsetup(config: Partial<GridConstructor>) {\n\t\tthis.clear()\n\n\t\tconst mergedConfig = {\n\t\t\t...this,\n\t\t\t...config\n\t\t}\n\n\t\tconst {\n\t\t\theight,\n\t\t\twidth,\n\t\t\tpadding,\n\t\t\tminX,\n\t\t\tminY,\n\t\t\tmaxX,\n\t\t\tmaxY,\n\t\t\tyInterval = 0,\n\t\t\txInterval = 0,\n\t\t} = mergedConfig;\n\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t\tthis.padding = padding;\n\t\tthis.minX = minX;\n\t\tthis.minY = minY;\n\t\tthis.maxX = maxX;\n\t\tthis.maxY = maxY;\n\n\t\tthis.gridWidth = width - 2 * padding;\n\t\tthis.gridHeight = height - 2 * padding;\n\n\t\tthis.origin = [padding, height - padding];\n\t\tthis.context.font = \"10px sans-serif\";\n\n\t\tthis.xInterval = xInterval === 0 ? (maxX - minX) : xInterval;\n\t\tthis.yInterval = yInterval === 0 ? (maxY - minY) : yInterval;\n\n\t\tthis.xAxisSpacing = Math.floor(this.gridWidth * this.xInterval / (maxX - minX));\n\t\tthis.yAxisSpacing = Math.floor(this.gridHeight * this.yInterval / (maxY - minY));\n\t}\n\n\tclear() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t}\n\n\tdrawGrid() {\n\t\tconst [originX, originY] = this.origin;\n\t\tconst {\n\t\t\tcontext,\n\t\t\tgridWidth,\n\t\t\tgridHeight,\n\t\t\txAxisSpacing,\n\t\t\tyAxisSpacing,\n\t\t\tpadding,\n\t\t} = this;\n\t\tcontext.beginPath();\n\t\tcontext.strokeStyle = GRID_STROKE_STYLE;\n\t\tcontext.moveTo(originX, originY);\n\n\t\tfor (let i = originX; i <= (originX + gridWidth); i += xAxisSpacing) {\n\t\t\tcontext.moveTo(i, originY);\n\t\t\tcontext.lineTo(i, originY - gridHeight);\n\t\t}\n\n\t\tfor (let j = originY; j >= padding; j -= yAxisSpacing) {\n\t\t\tcontext.moveTo(originX, j);\n\t\t\tcontext.lineTo(originX + gridWidth, j);\n\t\t}\n\n\t\tcontext.stroke();\n\t}\n\n\tdrawAxis() {\n\t\tconst {\n\t\t\tcontext,\n\t\t\tgridWidth,\n\t\t\tpadding,\n\t\t\txAxisSpacing,\n\t\t\tyAxisSpacing,\n\t\t\txInterval,\n\t\t\tyInterval,\n\t\t\tminX,\n\t\t\tmaxY,\n\t\t\tminY,\n\t\t} = this;\n\n\t\tcontext.beginPath();\n\n\t\tconst [originX, originY] = this.origin;\n\n\t\tfor (\n\t\t\tlet x = originX, value = minX;\n\t\t\tx <= (originX + gridWidth);\n\t\t\tx += xAxisSpacing, value += xInterval\n\t\t) {\n\t\t\tconst label = value.toFixed(3);\n\t\t\tcontext.fillText(label, x - context.measureText(label).width / 2, originY + 14);\n\t\t}\n\n\t\tfor (\n\t\t\tlet y = originY, value = minY;\n\t\t\ty >= padding;\n\t\t\ty -= yAxisSpacing, value += yInterval\n\t\t) {\n\t\t\tconst label = value.toFixed(2);\n\t\t\tcontext.fillText(label, originX - context.measureText(label).width - 4, y + 5);\n\t\t}\n\n\t\tcontext.beginPath();\n\t\tcontext.rect(\n\t\t\tthis.transformX(minX),\n\t\t\tthis.transformY(maxY),\n\t\t\tthis.gridWidth,\n\t\t\tthis.gridHeight,\n\t\t);\n\t\tcontext.stroke();\n\t}\n\n\ttransformX(input: number) {\n\t\tconst scale = this.gridWidth / (this.maxX - this.minX);\n\n\t\treturn Math.floor((input - this.minX) * scale) + this.padding;\n\t}\n\n\ttransformY(input: number) {\n\t\tconst scale = this.gridHeight / (this.maxY - this.minY);\n\n\t\treturn Math.floor(this.gridHeight - (input - this.minY) * scale) + this.padding;\n\t}\n\n\tmoveTo(x: number, y: number) {\n\t\treturn this.context.moveTo(\n\t\t\tthis.transformX(x),\n\t\t\tthis.transformY(y),\n\t\t);\n\t}\n\n\tlineTo(x: number, y: number) {\n\t\treturn this.context.lineTo(\n\t\t\tthis.transformX(x),\n\t\t\tthis.transformY(y),\n\t\t);\n\t}\n\n\tstroke() {\n\t\treturn this.context.stroke();\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number, fill = false) {\n\t\tthis.context.beginPath()\n\t\tthis.context.moveTo(this.transformX(x) + radius, this.transformY(y))\n\t\tthis.context.arc(this.transformX(x), this.transformY(y), radius, 0, Math.PI * 2)\n\t\tif (fill) {\n\t\t\tthis.context.fill()\n\t\t}\n\t\tthis.context.stroke()\n\t}\n\n\tdrawMap(points: { x: number; y: number }[]) {\n\t\tthis.clear();\n\t\tthis.context.beginPath();\n\n\t\tthis.context.strokeStyle = \"green\";\n\t\tthis.context.lineWidth = 3;\n\n\t\tconst [first, ...restPoints] = points;\n\t\tthis.moveTo(first.x, first.y);\n\n\t\trestPoints.forEach(({ x, y }) => {\n\t\t\tthis.lineTo(x, y);\n\t\t\tthis.moveTo(x, y);\n\t\t});\n\n\t\tthis.lineTo(first.x, first.y);\n\t\tthis.context.closePath();\n\t\tthis.stroke();\n\n\t\tthis.context.beginPath();\n\t\tthis.context.strokeStyle = \"red\";\n\t\tthis.context.fillStyle = \"pink\";\n\t\tthis.context.lineWidth = 1;\n\n\t\tpoints.forEach(({ x, y }) => {\n\t\t\tthis.drawCircle(x, y, 5, true)\n\t\t})\n\t}\n}\n\nexport const getImageRedrawer = (\n\t{ image, canvas }: { image: CanvasImageSource; canvas: HTMLCanvasElement },\n) => (\n\tconfig: {\n\t\thOffset: number;\n\t\tvOffset: number;\n\t\thScale: number;\n\t\tvScale: number;\n\t},\n) => {\n\tconst {\n\t\twidth: canvasWidth,\n\t\theight: canvasHeight,\n\t} = canvas;\n\n\tconst ctx = canvas.getContext(\"2d\")!; // eslint-disable-line\n\n\tconst {\n\t\thOffset,\n\t\tvOffset,\n\t\thScale,\n\t\tvScale,\n\t} = config;\n\n\tctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\tctx.drawImage(\n\t\timage,\n\t\thOffset,\n\t\tvOffset,\n\t\tMath.floor(hScale * (image.width as number)),\n\t\tMath.floor(vScale * (image.height as number)),\n\t);\n};\n","\nimport { defineComponent, computed, onMounted, watch } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor } from \"@/store/external-map\";\nimport { getImageRedrawer } from \"./graphics\";\n\ntype CompressorMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n}\n\nexport default defineComponent({\n\tname: \"CompressorMap\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId } = props as CompressorMapProps\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(\"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(\"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(\"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(\"vScale\", store))\n\n\t\tonMounted(() => {\n\t\t\tconst imgCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst img = new Image();\n\t\t\timg.src = \"./example_compressor_map.jpg\";\n\n\t\t\timg.onload = () => {\n\t\t\t\timgCanvas // eslint-disable-line\n\t\t\t\t\t.getContext(\"2d\")!\n\t\t\t\t\t.drawImage(\n\t\t\t\t\t\timg,\n\t\t\t\t\t\thOffset.value,\n\t\t\t\t\t\tvOffset.value,\n\t\t\t\t\t\tMath.floor(hScale.value * img.width),\n\t\t\t\t\t\tMath.floor(vScale.value * img.height),\n\t\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst redrawImage = getImageRedrawer({ canvas: imgCanvas, image: img });\n\n\t\t\twatch(\n\t\t\t\t[\n\t\t\t\t\t() => hOffset.value,\n\t\t\t\t\t() => vOffset.value,\n\t\t\t\t\t() => hScale.value,\n\t\t\t\t\t() => vScale.value\n\t\t\t\t],\n\t\t\t\t([\n\t\t\t\t\thOffset,\n\t\t\t\t\tvOffset,\n\t\t\t\t\thScale,\n\t\t\t\t\tvScale\n\t\t\t\t]) => {\n\t\t\t\t\tredrawImage({\n\t\t\t\t\t\thOffset,\n\t\t\t\t\t\tvOffset,\n\t\t\t\t\t\thScale,\n\t\t\t\t\t\tvScale,\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t},\n})\n","import { render } from \"./CompressorMap.vue?vue&type=template&id=1d41f7d0\"\nimport script from \"./CompressorMap.vue?vue&type=script&lang=ts\"\nexport * from \"./CompressorMap.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype GridProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Grid\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, padding, height, width } = props as GridProps;\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\n\t\tonMounted(() => {\n\t\t\tconst gridCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst grid = new Grid({\n\t\t\t\tcanvasRef: gridCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value,\n\t\t\t\txInterval: airflowInterval.value,\n\t\t\t\tyInterval: pressureRatioStep.value\n\t\t\t});\n\n\t\t\tgrid.drawGrid();\n\t\t\tgrid.drawAxis();\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid,\n\t\t\t\tgridActions: [grid.drawGrid.bind(grid), grid.drawAxis.bind(grid)],\n\t\t\t\tminAirflow,\n\t\t\t\tmaxAirflow,\n\t\t\t\tairflowInterval,\n\t\t\t\tminPressureRatio,\n\t\t\t\tmaxPressureRatio,\n\t\t\t\tpressureRatioStep\n\t\t\t})\n\t\t});\n\t},\n})\n</script>\n","import { Ref, watch } from \"vue\"\nimport { Grid } from \"./graphics\"\n\ntype GridParamGetters = [\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n\t() => Ref<number>[\"value\"],\n]\n\ntype GridWatchersConfig = {\n\tgrid: Grid;\n\tgridActions: (() => void)[];\n\tminAirflow: Ref<number>;\n\tmaxAirflow: Ref<number>;\n\tairflowInterval: Ref<number>;\n\tminPressureRatio: Ref<number>;\n\tmaxPressureRatio: Ref<number>;\n\tpressureRatioStep: Ref<number>;\n}\n\nexport const useGridWatchers = (config: GridWatchersConfig) => {\n\tconst {\n\t\tgrid,\n\t\tgridActions,\n\t\tminAirflow,\n\t\tmaxAirflow,\n\t\tairflowInterval,\n\t\tminPressureRatio,\n\t\tmaxPressureRatio,\n\t\tpressureRatioStep\n\t} = config;\n\n\twatch<GridParamGetters>(\n\t\t[\n\t\t\t() => minAirflow.value,\n\t\t\t() => maxAirflow.value,\n\t\t\t() => airflowInterval.value,\n\t\t\t() => minPressureRatio.value,\n\t\t\t() => maxPressureRatio.value,\n\t\t\t() => pressureRatioStep.value,\n\t\t],\n\t\t(newValues) => {\n\t\t\tconst [\n\t\t\t\tminX,\n\t\t\t\tmaxX,\n\t\t\t\txInterval,\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyInterval,\n\t\t\t] = newValues\n\n\t\t\tgrid.setup({\n\t\t\t\tminX,\n\t\t\t\tmaxX,\n\t\t\t\txInterval,\n\t\t\t\tminY,\n\t\t\t\tmaxY,\n\t\t\t\tyInterval\n\t\t\t})\n\n\t\t\tgridActions.forEach(a => a())\n\t\t}\n\t)\n}","\nimport { defineComponent, computed, onMounted } from \"vue\"\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildGridAccessor } from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype GridProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\nexport default defineComponent({\n\tname: \"Grid\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, padding, height, width } = props as GridProps;\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\n\t\tonMounted(() => {\n\t\t\tconst gridCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\n\t\t\tconst grid = new Grid({\n\t\t\t\tcanvasRef: gridCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value,\n\t\t\t\txInterval: airflowInterval.value,\n\t\t\t\tyInterval: pressureRatioStep.value\n\t\t\t});\n\n\t\t\tgrid.drawGrid();\n\t\t\tgrid.drawAxis();\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid,\n\t\t\t\tgridActions: [grid.drawGrid.bind(grid), grid.drawAxis.bind(grid)],\n\t\t\t\tminAirflow,\n\t\t\t\tmaxAirflow,\n\t\t\t\tairflowInterval,\n\t\t\t\tminPressureRatio,\n\t\t\t\tmaxPressureRatio,\n\t\t\t\tpressureRatioStep\n\t\t\t})\n\t\t});\n\t},\n})\n","import { render } from \"./Grid.vue?vue&type=template&id=04168e46\"\nimport script from \"./Grid.vue?vue&type=script&lang=ts\"\nexport * from \"./Grid.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n\t<canvas\n\t\t:id=\"canvasId\"\n\t\t:height=\"height\"\n\t\t:width=\"width\"\n\t\t@mousemove=\"handleHover\"\n\t\t@mousedown=\"handleMouseDown\"\n\t\t@mouseup=\"handleMouseUp\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport {\n\tbuildAccessor as buildGridAccessor,\n\tbuildAirflowUnitsAccessor,\n} from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointsGetter,\n\tbuildAccessor as buildEngineMapAccessor,\n\tbuildMapPointModifier,\n} from \"@/store/engine-map\";\nimport { getMAF as getMAFSI, AirflowUnits, convertToLbsMin, getRPMfromMAF, convertToKgS } from \"./physics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\ntype IGetMaf = (p: {\n\tdisplacementCC: number;\n\ttemperature: number;\n\tpressureBar: number;\n\trpm: number;\n}) => number\nconst getMAFKgS: IGetMaf = (payload) => getMAFSI({\n\t...payload,\n\tdisplacement: payload.displacementCC / 1000000,\n\tpressure: payload.pressureBar * 100000\n})\nconst getMAFLBSMIN: IGetMaf = (payload) => convertToLbsMin(getMAFKgS(payload))\n\nexport default defineComponent({\n\tname: \"Map\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\t\tconst airflowUnits = computed(buildAirflowUnitsAccessor(store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = computed(buildEngineMapAccessor(\"pointerData\", store));\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\n\t\tconst engineMapRawPoints = computed(buildMapPointsGetter(store));\n\t\tconst engineMapPoints = computed(\n\t\t\t() => {\n\t\t\t\tconst getMAF = airflowUnits.value === AirflowUnits.kgs\n\t\t\t\t\t? getMAFKgS\n\t\t\t\t\t: getMAFLBSMIN\n\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tx: getMAF({\n\t\t\t\t\t\t\tdisplacementCC: engineDisplacement.value,\n\t\t\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\t\t\tpressureBar: minPressureRatio.value,\n\t\t\t\t\t\t\trpm: engineMapRawPoints.value[0]?.rpm\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ty: 1\n\t\t\t\t\t},\n\t\t\t\t\t...engineMapRawPoints.value.map(p => ({\n\t\t\t\t\t\tx: getMAF({\n\t\t\t\t\t\t\tdisplacementCC: engineDisplacement.value,\n\t\t\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\t\t\tpressureBar: p.pressure,\n\t\t\t\t\t\t\trpm: p.rpm\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ty: p.pressure / (ambientAirPressure.value / 1000)\n\t\t\t\t\t})),\n\t\t\t\t\t{\n\t\t\t\t\t\tx: getMAF({\n\t\t\t\t\t\t\tdisplacementCC: engineDisplacement.value,\n\t\t\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\t\t\tpressureBar: minPressureRatio.value,\n\t\t\t\t\t\t\trpm: engineMapRawPoints.value[engineMapRawPoints.value.length - 1]?.rpm\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ty: 1\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t})\n\n\t\tconst handleHover = ref<(e: MouseEvent) => void>()\n\t\tconst handleMouseDown = ref<(e: MouseEvent) => void>()\n\t\tconst handleMouseUp = ref<(e: MouseEvent) => void>()\n\t\tlet windowResizeHandler: () => void\n\n\t\tonMounted(() => {\n\t\t\tconst graphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\tlet graphCanvasViewport = graphCanvas.getBoundingClientRect();\n\t\t\twindowResizeHandler = () => { graphCanvasViewport = graphCanvas.getBoundingClientRect() }\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tlet contextPoint: number | undefined // { rpm: number, pressure: number } | undefined\n\n\t\t\thandleHover.value = (e: MouseEvent) => {\n\t\t\t\tconst { x, y } = e;\n\t\t\t\tconst { top, left } = graphCanvasViewport\n\t\t\t\tconst mapX = x - left - padding\n\t\t\t\tconst mapY = y - top - padding\n\n\t\t\t\tif (mapX < 0 || mapX >= mapWidth) { return }\n\t\t\t\tif (mapY < 0 || mapY >= mapHeight) { return }\n\n\t\t\t\tpointerData.value = {\n\t\t\t\t\tpressureRatio: ((1 - (mapY / mapHeight)) * (maxPressureRatio.value - minPressureRatio.value)) + minPressureRatio.value,\n\t\t\t\t\tmassAirflow: ((mapX / mapWidth) * (maxAirflow.value - minAirflow.value)) + minAirflow.value\n\t\t\t\t}\n\n\t\t\t\tconst pressureRatio = ((1 - (mapY / mapHeight)) * (maxPressureRatio.value - minPressureRatio.value)) + minPressureRatio.value\n\t\t\t\tconst massAirflow = ((mapX / mapWidth) * (maxAirflow.value - minAirflow.value)) + minAirflow.value\n\t\t\t\tconst rpm = Math.round(getRPMfromMAF({\n\t\t\t\t\tmaf: airflowUnits.value === AirflowUnits.kgs ? massAirflow : convertToKgS(massAirflow),\n\t\t\t\t\tdisplacement: engineDisplacement.value / 1000000,\n\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\tpressure: (ambientAirPressure.value / 1000) * 100000 * pressureRatio\n\t\t\t\t}))\n\n\t\t\t\tif (contextPoint !== undefined) {\n\t\t\t\t\tsetMapPoint({ rpm, pressure: (ambientAirPressure.value / 1000) * pressureRatio }, contextPoint)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thandleMouseDown.value = (e: MouseEvent) => {\n\t\t\t\tconst { x, y } = e;\n\t\t\t\tconst { top, left } = graphCanvasViewport\n\t\t\t\tconst mapX = x - left - padding\n\t\t\t\tconst mapY = y - top - padding\n\n\t\t\t\tif (mapX < 0 || mapX >= mapWidth) { return }\n\t\t\t\tif (mapY < 0 || mapY >= mapHeight) { return }\n\n\t\t\t\tconst pressureRatio = ((1 - (mapY / mapHeight)) * (maxPressureRatio.value - minPressureRatio.value)) + minPressureRatio.value\n\t\t\t\tconst massAirflow = ((mapX / mapWidth) * (maxAirflow.value - minAirflow.value)) + minAirflow.value\n\t\t\t\tconst rpm = Math.round(getRPMfromMAF({\n\t\t\t\t\tmaf: airflowUnits.value === AirflowUnits.kgs ? massAirflow : convertToKgS(massAirflow),\n\t\t\t\t\tdisplacement: engineDisplacement.value / 1000000,\n\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\tpressure: (ambientAirPressure.value / 1000) * 100000 * pressureRatio\n\t\t\t\t}))\n\n\t\t\t\tcontextPoint = engineMapRawPoints.value.findIndex((point) => {\n\t\t\t\t\tif (point.rpm === rpm || (point.rpm * 1.05 > rpm && point.rpm * 0.95 < rpm)) {\n\t\t\t\t\t\tconst pressureAtPoint = point.pressure\n\t\t\t\t\t\tconst pressureAtMouse = pressureRatio * ambientAirPressure.value / 1000\n\n\t\t\t\t\t\tif (pressureAtPoint === pressureAtMouse || (pressureAtPoint * 1.01 > pressureAtMouse && pressureAtPoint * 0.99 < pressureAtMouse) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\thandleMouseUp.value = () => {\n\t\t\t\tcontextPoint = undefined\n\t\t\t}\n\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawMap(engineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawMap(engineMapPoints.value) }],\n\t\t\t\tminAirflow,\n\t\t\t\tmaxAirflow,\n\t\t\t\tairflowInterval,\n\t\t\t\tminPressureRatio,\n\t\t\t\tmaxPressureRatio,\n\t\t\t\tpressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => engineMapPoints.value,\n\t\t\t\tpoints => { graph.drawMap(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp\n\t\t}\n\t},\n})\n</script>\n","\nimport { defineComponent, computed, onMounted, watch, ref, onBeforeUnmount } from \"vue\"\nimport { useStore } from \"vuex\";\nimport {\n\tbuildAccessor as buildGridAccessor,\n\tbuildAirflowUnitsAccessor,\n} from \"@/store/grid\";\nimport { Grid } from \"./graphics\";\nimport {\n\tbuildMapPointsGetter,\n\tbuildAccessor as buildEngineMapAccessor,\n\tbuildMapPointModifier,\n} from \"@/store/engine-map\";\nimport { getMAF as getMAFSI, AirflowUnits, convertToLbsMin, getRPMfromMAF, convertToKgS } from \"./physics\";\nimport { useGridWatchers } from \"./grid-watchers\";\n\ntype EngineMapProps = {\n\twidth: number;\n\theight: number;\n\tcanvasId: string;\n\tpadding: number;\n}\n\ntype IGetMaf = (p: {\n\tdisplacementCC: number;\n\ttemperature: number;\n\tpressureBar: number;\n\trpm: number;\n}) => number\nconst getMAFKgS: IGetMaf = (payload) => getMAFSI({\n\t...payload,\n\tdisplacement: payload.displacementCC / 1000000,\n\tpressure: payload.pressureBar * 100000\n})\nconst getMAFLBSMIN: IGetMaf = (payload) => convertToLbsMin(getMAFKgS(payload))\n\nexport default defineComponent({\n\tname: \"Map\",\n\tprops: {\n\t\theight: Number,\n\t\twidth: Number,\n\t\tcanvasId: String,\n\t\tpadding: Number,\n\t},\n\tsetup: (props) => {\n\t\tconst { canvasId, height, width, padding } = props as EngineMapProps;\n\t\tconst mapWidth = width - 2 * padding\n\t\tconst mapHeight = height - 2 * padding\n\n\t\tconst store = useStore();\n\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\t\tconst airflowUnits = computed(buildAirflowUnitsAccessor(store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = computed(buildEngineMapAccessor(\"pointerData\", store));\n\n\t\tconst setMapPoint = buildMapPointModifier(store);\n\n\t\tconst engineMapRawPoints = computed(buildMapPointsGetter(store));\n\t\tconst engineMapPoints = computed(\n\t\t\t() => {\n\t\t\t\tconst getMAF = airflowUnits.value === AirflowUnits.kgs\n\t\t\t\t\t? getMAFKgS\n\t\t\t\t\t: getMAFLBSMIN\n\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tx: getMAF({\n\t\t\t\t\t\t\tdisplacementCC: engineDisplacement.value,\n\t\t\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\t\t\tpressureBar: minPressureRatio.value,\n\t\t\t\t\t\t\trpm: engineMapRawPoints.value[0]?.rpm\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ty: 1\n\t\t\t\t\t},\n\t\t\t\t\t...engineMapRawPoints.value.map(p => ({\n\t\t\t\t\t\tx: getMAF({\n\t\t\t\t\t\t\tdisplacementCC: engineDisplacement.value,\n\t\t\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\t\t\tpressureBar: p.pressure,\n\t\t\t\t\t\t\trpm: p.rpm\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ty: p.pressure / (ambientAirPressure.value / 1000)\n\t\t\t\t\t})),\n\t\t\t\t\t{\n\t\t\t\t\t\tx: getMAF({\n\t\t\t\t\t\t\tdisplacementCC: engineDisplacement.value,\n\t\t\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\t\t\tpressureBar: minPressureRatio.value,\n\t\t\t\t\t\t\trpm: engineMapRawPoints.value[engineMapRawPoints.value.length - 1]?.rpm\n\t\t\t\t\t\t}),\n\t\t\t\t\t\ty: 1\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t})\n\n\t\tconst handleHover = ref<(e: MouseEvent) => void>()\n\t\tconst handleMouseDown = ref<(e: MouseEvent) => void>()\n\t\tconst handleMouseUp = ref<(e: MouseEvent) => void>()\n\t\tlet windowResizeHandler: () => void\n\n\t\tonMounted(() => {\n\t\t\tconst graphCanvas = document.getElementById(canvasId) as HTMLCanvasElement;\n\t\t\tlet graphCanvasViewport = graphCanvas.getBoundingClientRect();\n\t\t\twindowResizeHandler = () => { graphCanvasViewport = graphCanvas.getBoundingClientRect() }\n\t\t\twindow.addEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.addEventListener(\"scroll\", windowResizeHandler);\n\n\t\t\tlet contextPoint: number | undefined // { rpm: number, pressure: number } | undefined\n\n\t\t\thandleHover.value = (e: MouseEvent) => {\n\t\t\t\tconst { x, y } = e;\n\t\t\t\tconst { top, left } = graphCanvasViewport\n\t\t\t\tconst mapX = x - left - padding\n\t\t\t\tconst mapY = y - top - padding\n\n\t\t\t\tif (mapX < 0 || mapX >= mapWidth) { return }\n\t\t\t\tif (mapY < 0 || mapY >= mapHeight) { return }\n\n\t\t\t\tpointerData.value = {\n\t\t\t\t\tpressureRatio: ((1 - (mapY / mapHeight)) * (maxPressureRatio.value - minPressureRatio.value)) + minPressureRatio.value,\n\t\t\t\t\tmassAirflow: ((mapX / mapWidth) * (maxAirflow.value - minAirflow.value)) + minAirflow.value\n\t\t\t\t}\n\n\t\t\t\tconst pressureRatio = ((1 - (mapY / mapHeight)) * (maxPressureRatio.value - minPressureRatio.value)) + minPressureRatio.value\n\t\t\t\tconst massAirflow = ((mapX / mapWidth) * (maxAirflow.value - minAirflow.value)) + minAirflow.value\n\t\t\t\tconst rpm = Math.round(getRPMfromMAF({\n\t\t\t\t\tmaf: airflowUnits.value === AirflowUnits.kgs ? massAirflow : convertToKgS(massAirflow),\n\t\t\t\t\tdisplacement: engineDisplacement.value / 1000000,\n\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\tpressure: (ambientAirPressure.value / 1000) * 100000 * pressureRatio\n\t\t\t\t}))\n\n\t\t\t\tif (contextPoint !== undefined) {\n\t\t\t\t\tsetMapPoint({ rpm, pressure: (ambientAirPressure.value / 1000) * pressureRatio }, contextPoint)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thandleMouseDown.value = (e: MouseEvent) => {\n\t\t\t\tconst { x, y } = e;\n\t\t\t\tconst { top, left } = graphCanvasViewport\n\t\t\t\tconst mapX = x - left - padding\n\t\t\t\tconst mapY = y - top - padding\n\n\t\t\t\tif (mapX < 0 || mapX >= mapWidth) { return }\n\t\t\t\tif (mapY < 0 || mapY >= mapHeight) { return }\n\n\t\t\t\tconst pressureRatio = ((1 - (mapY / mapHeight)) * (maxPressureRatio.value - minPressureRatio.value)) + minPressureRatio.value\n\t\t\t\tconst massAirflow = ((mapX / mapWidth) * (maxAirflow.value - minAirflow.value)) + minAirflow.value\n\t\t\t\tconst rpm = Math.round(getRPMfromMAF({\n\t\t\t\t\tmaf: airflowUnits.value === AirflowUnits.kgs ? massAirflow : convertToKgS(massAirflow),\n\t\t\t\t\tdisplacement: engineDisplacement.value / 1000000,\n\t\t\t\t\ttemperature: ambientAirTemperature.value,\n\t\t\t\t\tpressure: (ambientAirPressure.value / 1000) * 100000 * pressureRatio\n\t\t\t\t}))\n\n\t\t\t\tcontextPoint = engineMapRawPoints.value.findIndex((point) => {\n\t\t\t\t\tif (point.rpm === rpm || (point.rpm * 1.05 > rpm && point.rpm * 0.95 < rpm)) {\n\t\t\t\t\t\tconst pressureAtPoint = point.pressure\n\t\t\t\t\t\tconst pressureAtMouse = pressureRatio * ambientAirPressure.value / 1000\n\n\t\t\t\t\t\tif (pressureAtPoint === pressureAtMouse || (pressureAtPoint * 1.01 > pressureAtMouse && pressureAtPoint * 0.99 < pressureAtMouse) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\thandleMouseUp.value = () => {\n\t\t\t\tcontextPoint = undefined\n\t\t\t}\n\n\n\t\t\tconst graph = new Grid({\n\t\t\t\tcanvasRef: graphCanvas,\n\t\t\t\theight,\n\t\t\t\twidth,\n\t\t\t\tpadding,\n\t\t\t\tminX: minAirflow.value,\n\t\t\t\tmaxX: maxAirflow.value,\n\t\t\t\tminY: minPressureRatio.value,\n\t\t\t\tmaxY: maxPressureRatio.value\n\t\t\t});\n\n\t\t\tgraph.drawMap(engineMapPoints.value)\n\n\t\t\tuseGridWatchers({\n\t\t\t\tgrid: graph,\n\t\t\t\tgridActions: [() => { graph.drawMap(engineMapPoints.value) }],\n\t\t\t\tminAirflow,\n\t\t\t\tmaxAirflow,\n\t\t\t\tairflowInterval,\n\t\t\t\tminPressureRatio,\n\t\t\t\tmaxPressureRatio,\n\t\t\t\tpressureRatioStep\n\t\t\t})\n\n\t\t\twatch(\n\t\t\t\t() => engineMapPoints.value,\n\t\t\t\tpoints => { graph.drawMap(points) }\n\t\t\t)\n\t\t});\n\n\t\tonBeforeUnmount(() => {\n\t\t\twindow.removeEventListener(\"resize\", windowResizeHandler);\n\t\t\twindow.removeEventListener(\"scroll\", windowResizeHandler);\n\t\t})\n\n\t\treturn {\n\t\t\thandleHover,\n\t\t\thandleMouseDown,\n\t\t\thandleMouseUp\n\t\t}\n\t},\n})\n","import { render } from \"./EngineMap.vue?vue&type=template&id=16ef92cc\"\nimport script from \"./EngineMap.vue?vue&type=script&lang=ts\"\nexport * from \"./EngineMap.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { defineComponent } from \"vue\"\nimport CompressorMap from \"./CompressorMap.vue\"\nimport Grid from \"./Grid.vue\"\nimport EngineMap from \"./EngineMap.vue\"\n\nenum MapLayer {\n\tCompressorMap = \"compressor-map\",\n\tGrid = \"grid\",\n\tEngineMap = \"engine-map\"\n}\n\nconst defaultConfig = {\n\twidth: 1208,\n\theight: 908,\n\tpadding: 100\n};\n\nexport default defineComponent({\n\tname: \"Map\",\n\tcomponents: {\n\t\tCompressorMap,\n\t\tGrid,\n\t\tEngineMap\n\t},\n\tsetup: () => ({\n\t\tMapLayer,\n\t\tcanvasHeight: defaultConfig.height,\n\t\tcanvasWidth: defaultConfig.width,\n\t\tgridPadding: defaultConfig.padding\n\t})\n})\n","import { render } from \"./Maps.vue?vue&type=template&id=910fe8cc\"\nimport script from \"./Maps.vue?vue&type=script&lang=ts\"\nexport * from \"./Maps.vue?vue&type=script&lang=ts\"\n\nimport \"./Maps.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n\t<div class=\"map-points-container\">\n\t\t<div\n\t\t\tv-for=\"(point, index) in points\"\n\t\t\t:key=\"index\">\n\t\t\t<form v-on:submit.prevent=\"removeEngineMapPoint(point)\">\n\t\t\t\t<fieldset class=\"map-point\">\n\t\t\t\t\t<input type=number v-model=\"point.pressure\" step=\"0.1\" />\n\t\t\t\t\t<input type=number v-model=\"point.rpm\" step=\"100\" />\n\t\t\t\t\t<button type=\"submit\">remove</button>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</div>\n\t\t<form v-on:submit.prevent=\"addEngineMapPoint\">\n\t\t\t<fieldset>\n\t\t\t\t<label for=\"engine-pressure\">Pressure (bar)</label>\n\t\t\t\t<input id=\"engine-pressure\" type=number v-model=\"enginePressure\" step=\"0.1\" />\n\t\t\t\t<label for=\"engine-speed\">Engine speed (rpm)</label>\n\t\t\t\t<input id=\"engine-speed\" type=number v-model=\"engineSpeed\" step=\"100\" />\n\t\t\t</fieldset>\n\t\t\t<button type=\"submit\">Add!</button>\n\t\t</form>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, reactive } from \"vue\"\nimport { useStore } from \"vuex\"\nimport {\n\tbuildMapPointsGetter,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n} from \"@/store/engine-map\"\n\nexport default defineComponent({\n\tname: \"EngineMapPoints\",\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst enginePressure = ref(1);\n\t\tconst engineSpeed = ref(1000);\n\n\t\tconst rawPoints = computed(buildMapPointsGetter(store));\n\t\tconst points = computed(() => rawPoints.value.map(p => reactive(p)))\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\n\t\tconst removeEngineMapPoint = buildMapPointRemover(store);\n\n\t\tconst addEngineMapPoint = () => {\n\t\t\tinsertMapPoint({ pressure: enginePressure.value, rpm: engineSpeed.value })\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\tpoints,\n\t\t\tenginePressure,\n\t\t\tengineSpeed,\n\t\t\taddEngineMapPoint,\n\t\t\tremoveEngineMapPoint\n\t\t}\n\t}\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.map-points-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.map-point {\n\tdisplay: flex;\n}\n</style>","\nimport { defineComponent, computed, ref, reactive } from \"vue\"\nimport { useStore } from \"vuex\"\nimport {\n\tbuildMapPointsGetter,\n\tbuildMapPointInserter,\n\tbuildMapPointRemover,\n} from \"@/store/engine-map\"\n\nexport default defineComponent({\n\tname: \"EngineMapPoints\",\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst enginePressure = ref(1);\n\t\tconst engineSpeed = ref(1000);\n\n\t\tconst rawPoints = computed(buildMapPointsGetter(store));\n\t\tconst points = computed(() => rawPoints.value.map(p => reactive(p)))\n\t\tconst insertMapPoint = buildMapPointInserter(store);\n\n\t\tconst removeEngineMapPoint = buildMapPointRemover(store);\n\n\t\tconst addEngineMapPoint = () => {\n\t\t\tinsertMapPoint({ pressure: enginePressure.value, rpm: engineSpeed.value })\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn {\n\t\t\tpoints,\n\t\t\tenginePressure,\n\t\t\tengineSpeed,\n\t\t\taddEngineMapPoint,\n\t\t\tremoveEngineMapPoint\n\t\t}\n\t}\n})\n","import { render } from \"./EngineMapPoints.vue?vue&type=template&id=bf0890f4&scoped=true\"\nimport script from \"./EngineMapPoints.vue?vue&type=script&lang=ts\"\nexport * from \"./EngineMapPoints.vue?vue&type=script&lang=ts\"\n\nimport \"./EngineMapPoints.vue?vue&type=style&index=0&id=bf0890f4&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-bf0890f4\"\n\nexport default script","\nimport {\n\tdefineComponent,\n\tcomputed,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport { buildAccessor as buildExternalMapAccessor } from \"@/store/external-map\";\nimport { buildAccessor as buildGridAccessor, buildAirflowUnitsAccessor } from \"@/store/grid\";\nimport { buildAccessor as buildEngineMapAccessor } from \"@/store/engine-map\";\nimport { AirflowUnits } from \"./physics\"\nimport Maps from \"./Maps.vue\"\nimport EngineMapPoints from \"./EngineMapPoints.vue\"\n\nexport default defineComponent({\n\tname: \"Home\",\n\tcomponents: {\n\t\tMaps,\n\t\tEngineMapPoints\n\t},\n\tsetup: () => {\n\t\tconst store = useStore();\n\n\t\tconst hOffset = computed(buildExternalMapAccessor(\"hOffset\", store))\n\t\tconst vOffset = computed(buildExternalMapAccessor(\"vOffset\", store))\n\t\tconst hScale = computed(buildExternalMapAccessor(\"hScale\", store))\n\t\tconst vScale = computed(buildExternalMapAccessor(\"vScale\", store))\n\n\t\tconst airflowUnits = computed(buildAirflowUnitsAccessor(store));\n\t\tconst minAirflow = computed(buildGridAccessor(\"minAirflow\", store));\n\t\tconst maxAirflow = computed(buildGridAccessor(\"maxAirflow\", store));\n\t\tconst airflowInterval = computed(buildGridAccessor(\"airflowInterval\", store));\n\t\tconst minPressureRatio = computed(buildGridAccessor(\"minPressureRatio\", store));\n\t\tconst maxPressureRatio = computed(buildGridAccessor(\"maxPressureRatio\", store));\n\t\tconst pressureRatioStep = computed(buildGridAccessor(\"pressureRatioStep\", store));\n\n\t\tconst engineDisplacement = computed(buildEngineMapAccessor(\"displacement\", store));\n\t\tconst ambientAirPressure = computed(buildEngineMapAccessor(\"ambientAirPressure\", store));\n\t\tconst ambientAirTemperature = computed(buildEngineMapAccessor(\"ambientAirTemperature\", store));\n\t\tconst pointerData = computed(buildEngineMapAccessor(\"pointerData\", store));\n\n\t\tconst airflowUnitStep = computed(() => {\n\t\t\tif (airflowUnits.value === AirflowUnits.kgs) {\n\t\t\t\treturn 0.05;\n\t\t\t}\n\t\t\treturn 1;\n\t\t})\n\n\t\treturn {\n\t\t\tAirflowUnits,\n\t\t\thScale,\n\t\t\tvScale,\n\t\t\thOffset,\n\t\t\tvOffset,\n\t\t\tairflowUnits,\n\t\t\tminAirflow,\n\t\t\tmaxAirflow,\n\t\t\tairflowInterval,\n\t\t\tminPressureRatio,\n\t\t\tmaxPressureRatio,\n\t\t\tpressureRatioStep,\n\t\t\tairflowUnitStep,\n\t\t\tengineDisplacement,\n\t\t\tambientAirPressure,\n\t\t\tambientAirTemperature,\n\t\t\tpointerData\n\t\t};\n\t},\n});\n","import { render } from \"./Home.vue?vue&type=template&id=36c84431\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","import { RouteRecordRaw, createRouter, createWebHashHistory } from \"vue-router\";\nimport Home from \"../views/Home.vue\";\n\nconst routes: RouteRecordRaw[] = [\n\t{\n\t\tpath: \"/\",\n\t\tname: \"Home\",\n\t\tcomponent: Home,\n\t},\n];\n\nconst router = createRouter({\n\thistory: createWebHashHistory(),\n\troutes,\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\nimport { ExternalMapConfigState, externalMap, NAMESPACE as externalMapNamespace } from \"./external-map\";\nimport { GridConfigState, grid, NAMESPACE as gridNamespace } from \"./grid\";\nimport { EngineMapState, engineMap, NAMESPACE as engineMapNamespace } from \"./engine-map\"\n\nexport type State = {\n\t[externalMapNamespace]: ExternalMapConfigState;\n\t[gridNamespace]: GridConfigState;\n\t[engineMapNamespace]: EngineMapState;\n}\n\nexport default createStore<State>({\n\tmodules: {\n\t\t[externalMapNamespace]: externalMap,\n\t\t[gridNamespace]: grid,\n\t\t[engineMapNamespace]: engineMap,\n\t},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\n\ncreateApp(App).use(router).use(store).mount(\"#app\");\n","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./Home.vue?vue&type=style&index=0&lang=scss\""],"sourceRoot":""}